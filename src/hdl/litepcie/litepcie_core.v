//------------------------------------------------------------
// Generated by Migen & LiteX / -------- / 2019-11-21 11:26:35
// 12kb buffer (added writer_current_packet(status))
//------------------------------------------------------------
module litepcie_core(
	input clk125,
	input pcie_x4_rst_n,
	input pcie_x4_clk_p,
	input pcie_x4_clk_n,
	output [3:0] pcie_x4_tx_p,
	output [3:0] pcie_x4_tx_n,
	input [3:0] pcie_x4_rx_p,
	input [3:0] pcie_x4_rx_n,
	output dma_writer0_valid,
	input dma_writer0_ready,
	output dma_writer0_last,
	output [127:0] dma_writer0_data,
	output dma_writer0_enable,
	input dma_reader0_valid,
	output dma_reader0_ready,
	input dma_reader0_last,
	input [127:0] dma_reader0_data,
	output dma_reader0_enable,
	output dma_writer1_valid,
	input dma_writer1_ready,
	output dma_writer1_last,
	output [127:0] dma_writer1_data,
	output dma_writer1_enable,
	input dma_reader1_valid,
	output dma_reader1_ready,
	input dma_reader1_last,
	input [127:0] dma_reader1_data,
	output dma_reader1_enable,
	output dma_writer2_valid,
	input dma_writer2_ready,
	output dma_writer2_last,
	output [127:0] dma_writer2_data,
	output dma_writer2_enable,
	input dma_reader2_valid,
	output dma_reader2_ready,
	input dma_reader2_last,
	input [127:0] dma_reader2_data,
	output dma_reader2_enable,
	input [511:0] cntrl_reader_data,
	input cntrl_reader_valid,
	output [511:0] cntrl_writer_data,
	output cntrl_writer_valid,
	output cntrl_enable
);

wire [29:0] sram_bus_adr;
wire [31:0] sram_bus_dat_w;
wire [31:0] sram_bus_dat_r;
wire [3:0] sram_bus_sel;
wire sram_bus_cyc;
wire sram_bus_stb;
reg sram_bus_ack = 1'd0;
wire sram_bus_we;
wire [2:0] sram_bus_cti;
wire [1:0] sram_bus_bte;
reg sram_bus_err = 1'd0;
wire [9:0] sram_adr;
wire [31:0] sram_dat_r;
reg [3:0] sram_we = 4'd0;
wire [31:0] sram_dat_w;
reg [13:0] interface_adr = 14'd0;
reg interface_we = 1'd0;
reg [31:0] interface_dat_w = 32'd0;
wire [31:0] interface_dat_r;
wire [29:0] bus_wishbone_adr;
wire [31:0] bus_wishbone_dat_w;
reg [31:0] bus_wishbone_dat_r = 32'd0;
wire [3:0] bus_wishbone_sel;
wire bus_wishbone_cyc;
wire bus_wishbone_stb;
reg bus_wishbone_ack = 1'd0;
wire bus_wishbone_we;
wire [2:0] bus_wishbone_cti;
wire [1:0] bus_wishbone_bte;
reg bus_wishbone_err = 1'd0;
reg [1:0] counter = 2'd0;
wire sys_clk;
reg sys_rst = 1'd0;
wire pcie_phy_sink_sink_valid;
wire pcie_phy_sink_sink_ready;
wire pcie_phy_sink_sink_first;
wire pcie_phy_sink_sink_last;
wire [127:0] pcie_phy_sink_sink_payload_dat;
wire [15:0] pcie_phy_sink_sink_payload_be;
wire pcie_phy_source_source_valid;
wire pcie_phy_source_source_ready;
wire pcie_phy_source_source_first;
wire pcie_phy_source_source_last;
wire [127:0] pcie_phy_source_source_payload_dat;
wire [15:0] pcie_phy_source_source_payload_be;
reg pcie_phy_msi_valid = 1'd0;
wire pcie_phy_msi_ready;
reg pcie_phy_msi_first = 1'd0;
reg pcie_phy_msi_last = 1'd0;
reg [7:0] pcie_phy_msi_payload_dat = 8'd0;
wire pcie_phy_lnk_up_status;
wire pcie_phy_msi_enable_status;
wire pcie_phy_bus_master_enable_status;
wire [15:0] pcie_phy_max_request_size_status;
wire [15:0] pcie_phy_max_payload_size_status;
reg [15:0] pcie_phy_id = 16'd0;
reg [15:0] pcie_phy_max_request_size = 16'd0;
reg [15:0] pcie_phy_max_payload_size = 16'd0;
wire pcie_phy_pcie_refclk;
wire pcie_clk;
wire pcie_rst;
wire pcie_phy_tx_buffer_sink_valid;
wire pcie_phy_tx_buffer_sink_ready;
wire pcie_phy_tx_buffer_sink_first;
wire pcie_phy_tx_buffer_sink_last;
wire [127:0] pcie_phy_tx_buffer_sink_payload_dat;
wire [15:0] pcie_phy_tx_buffer_sink_payload_be;
wire pcie_phy_tx_buffer_source_valid;
wire pcie_phy_tx_buffer_source_ready;
wire pcie_phy_tx_buffer_source_first;
wire pcie_phy_tx_buffer_source_last;
reg [127:0] pcie_phy_tx_buffer_source_payload_dat = 128'd0;
reg [15:0] pcie_phy_tx_buffer_source_payload_be = 16'd0;
wire pcie_phy_tx_buffer_pipe_ce;
wire pcie_phy_tx_buffer_busy;
reg pcie_phy_tx_buffer_valid_n = 1'd0;
reg pcie_phy_tx_buffer_first_n = 1'd0;
reg pcie_phy_tx_buffer_last_n = 1'd0;
wire pcie_phy_tx_cdc_sink_valid;
wire pcie_phy_tx_cdc_sink_ready;
wire pcie_phy_tx_cdc_sink_first;
wire pcie_phy_tx_cdc_sink_last;
wire [127:0] pcie_phy_tx_cdc_sink_payload_dat;
wire [15:0] pcie_phy_tx_cdc_sink_payload_be;
wire pcie_phy_tx_cdc_source_valid;
wire pcie_phy_tx_cdc_source_ready;
wire pcie_phy_tx_cdc_source_first;
wire pcie_phy_tx_cdc_source_last;
wire [127:0] pcie_phy_tx_cdc_source_payload_dat;
wire [15:0] pcie_phy_tx_cdc_source_payload_be;
wire pcie_phy_tx_cdc_asyncfifo_we;
wire pcie_phy_tx_cdc_asyncfifo_writable;
wire pcie_phy_tx_cdc_asyncfifo_re;
wire pcie_phy_tx_cdc_asyncfifo_readable;
wire [145:0] pcie_phy_tx_cdc_asyncfifo_din;
wire [145:0] pcie_phy_tx_cdc_asyncfifo_dout;
wire pcie_phy_tx_cdc_graycounter0_ce;
(* register_balancing = "no" *) reg [2:0] pcie_phy_tx_cdc_graycounter0_q = 3'd0;
wire [2:0] pcie_phy_tx_cdc_graycounter0_q_next;
reg [2:0] pcie_phy_tx_cdc_graycounter0_q_binary = 3'd0;
reg [2:0] pcie_phy_tx_cdc_graycounter0_q_next_binary = 3'd0;
wire pcie_phy_tx_cdc_graycounter1_ce;
(* register_balancing = "no" *) reg [2:0] pcie_phy_tx_cdc_graycounter1_q = 3'd0;
wire [2:0] pcie_phy_tx_cdc_graycounter1_q_next;
reg [2:0] pcie_phy_tx_cdc_graycounter1_q_binary = 3'd0;
reg [2:0] pcie_phy_tx_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] pcie_phy_tx_cdc_produce_rdomain;
wire [2:0] pcie_phy_tx_cdc_consume_wdomain;
wire [1:0] pcie_phy_tx_cdc_wrport_adr;
wire [145:0] pcie_phy_tx_cdc_wrport_dat_r;
wire pcie_phy_tx_cdc_wrport_we;
wire [145:0] pcie_phy_tx_cdc_wrport_dat_w;
wire [1:0] pcie_phy_tx_cdc_rdport_adr;
wire [145:0] pcie_phy_tx_cdc_rdport_dat_r;
wire [127:0] pcie_phy_tx_cdc_fifo_in_payload_dat;
wire [15:0] pcie_phy_tx_cdc_fifo_in_payload_be;
wire pcie_phy_tx_cdc_fifo_in_first;
wire pcie_phy_tx_cdc_fifo_in_last;
wire [127:0] pcie_phy_tx_cdc_fifo_out_payload_dat;
wire [15:0] pcie_phy_tx_cdc_fifo_out_payload_be;
wire pcie_phy_tx_cdc_fifo_out_first;
wire pcie_phy_tx_cdc_fifo_out_last;
wire pcie_phy_rx_cdc_sink_valid;
wire pcie_phy_rx_cdc_sink_ready;
reg pcie_phy_rx_cdc_sink_first = 1'd0;
wire pcie_phy_rx_cdc_sink_last;
wire [127:0] pcie_phy_rx_cdc_sink_payload_dat;
wire [15:0] pcie_phy_rx_cdc_sink_payload_be;
wire pcie_phy_rx_cdc_source_valid;
wire pcie_phy_rx_cdc_source_ready;
wire pcie_phy_rx_cdc_source_first;
wire pcie_phy_rx_cdc_source_last;
wire [127:0] pcie_phy_rx_cdc_source_payload_dat;
wire [15:0] pcie_phy_rx_cdc_source_payload_be;
wire pcie_phy_rx_cdc_asyncfifo_we;
wire pcie_phy_rx_cdc_asyncfifo_writable;
wire pcie_phy_rx_cdc_asyncfifo_re;
wire pcie_phy_rx_cdc_asyncfifo_readable;
wire [145:0] pcie_phy_rx_cdc_asyncfifo_din;
wire [145:0] pcie_phy_rx_cdc_asyncfifo_dout;
wire pcie_phy_rx_cdc_graycounter0_ce;
(* register_balancing = "no" *) reg [2:0] pcie_phy_rx_cdc_graycounter0_q = 3'd0;
wire [2:0] pcie_phy_rx_cdc_graycounter0_q_next;
reg [2:0] pcie_phy_rx_cdc_graycounter0_q_binary = 3'd0;
reg [2:0] pcie_phy_rx_cdc_graycounter0_q_next_binary = 3'd0;
wire pcie_phy_rx_cdc_graycounter1_ce;
(* register_balancing = "no" *) reg [2:0] pcie_phy_rx_cdc_graycounter1_q = 3'd0;
wire [2:0] pcie_phy_rx_cdc_graycounter1_q_next;
reg [2:0] pcie_phy_rx_cdc_graycounter1_q_binary = 3'd0;
reg [2:0] pcie_phy_rx_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] pcie_phy_rx_cdc_produce_rdomain;
wire [2:0] pcie_phy_rx_cdc_consume_wdomain;
wire [1:0] pcie_phy_rx_cdc_wrport_adr;
wire [145:0] pcie_phy_rx_cdc_wrport_dat_r;
wire pcie_phy_rx_cdc_wrport_we;
wire [145:0] pcie_phy_rx_cdc_wrport_dat_w;
wire [1:0] pcie_phy_rx_cdc_rdport_adr;
wire [145:0] pcie_phy_rx_cdc_rdport_dat_r;
wire [127:0] pcie_phy_rx_cdc_fifo_in_payload_dat;
wire [15:0] pcie_phy_rx_cdc_fifo_in_payload_be;
wire pcie_phy_rx_cdc_fifo_in_first;
wire pcie_phy_rx_cdc_fifo_in_last;
wire [127:0] pcie_phy_rx_cdc_fifo_out_payload_dat;
wire [15:0] pcie_phy_rx_cdc_fifo_out_payload_be;
wire pcie_phy_rx_cdc_fifo_out_first;
wire pcie_phy_rx_cdc_fifo_out_last;
wire pcie_phy_rx_buffer_sink_valid;
wire pcie_phy_rx_buffer_sink_ready;
wire pcie_phy_rx_buffer_sink_first;
wire pcie_phy_rx_buffer_sink_last;
wire [127:0] pcie_phy_rx_buffer_sink_payload_dat;
wire [15:0] pcie_phy_rx_buffer_sink_payload_be;
wire pcie_phy_rx_buffer_source_valid;
wire pcie_phy_rx_buffer_source_ready;
wire pcie_phy_rx_buffer_source_first;
wire pcie_phy_rx_buffer_source_last;
reg [127:0] pcie_phy_rx_buffer_source_payload_dat = 128'd0;
reg [15:0] pcie_phy_rx_buffer_source_payload_be = 16'd0;
wire pcie_phy_rx_buffer_pipe_ce;
wire pcie_phy_rx_buffer_busy;
reg pcie_phy_rx_buffer_valid_n = 1'd0;
reg pcie_phy_rx_buffer_first_n = 1'd0;
reg pcie_phy_rx_buffer_last_n = 1'd0;
wire pcie_phy_msi_cdc_sink_valid;
wire pcie_phy_msi_cdc_sink_ready;
wire pcie_phy_msi_cdc_sink_first;
wire pcie_phy_msi_cdc_sink_last;
wire [7:0] pcie_phy_msi_cdc_sink_payload_dat;
wire pcie_phy_msi_cdc_source_valid;
wire pcie_phy_msi_cdc_source_ready;
wire pcie_phy_msi_cdc_source_first;
wire pcie_phy_msi_cdc_source_last;
wire [7:0] pcie_phy_msi_cdc_source_payload_dat;
wire pcie_phy_msi_cdc_asyncfifo_we;
wire pcie_phy_msi_cdc_asyncfifo_writable;
wire pcie_phy_msi_cdc_asyncfifo_re;
wire pcie_phy_msi_cdc_asyncfifo_readable;
wire [9:0] pcie_phy_msi_cdc_asyncfifo_din;
wire [9:0] pcie_phy_msi_cdc_asyncfifo_dout;
wire pcie_phy_msi_cdc_graycounter0_ce;
(* register_balancing = "no" *) reg [2:0] pcie_phy_msi_cdc_graycounter0_q = 3'd0;
wire [2:0] pcie_phy_msi_cdc_graycounter0_q_next;
reg [2:0] pcie_phy_msi_cdc_graycounter0_q_binary = 3'd0;
reg [2:0] pcie_phy_msi_cdc_graycounter0_q_next_binary = 3'd0;
wire pcie_phy_msi_cdc_graycounter1_ce;
(* register_balancing = "no" *) reg [2:0] pcie_phy_msi_cdc_graycounter1_q = 3'd0;
wire [2:0] pcie_phy_msi_cdc_graycounter1_q_next;
reg [2:0] pcie_phy_msi_cdc_graycounter1_q_binary = 3'd0;
reg [2:0] pcie_phy_msi_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] pcie_phy_msi_cdc_produce_rdomain;
wire [2:0] pcie_phy_msi_cdc_consume_wdomain;
wire [1:0] pcie_phy_msi_cdc_wrport_adr;
wire [9:0] pcie_phy_msi_cdc_wrport_dat_r;
wire pcie_phy_msi_cdc_wrport_we;
wire [9:0] pcie_phy_msi_cdc_wrport_dat_w;
wire [1:0] pcie_phy_msi_cdc_rdport_adr;
wire [9:0] pcie_phy_msi_cdc_rdport_dat_r;
wire [7:0] pcie_phy_msi_cdc_fifo_in_payload_dat;
wire pcie_phy_msi_cdc_fifo_in_first;
wire pcie_phy_msi_cdc_fifo_in_last;
wire [7:0] pcie_phy_msi_cdc_fifo_out_payload_dat;
wire pcie_phy_msi_cdc_fifo_out_first;
wire pcie_phy_msi_cdc_fifo_out_last;
wire pcie_phy_lnk_up;
wire pcie_phy_msienable;
wire [7:0] pcie_phy_bus_number;
wire [4:0] pcie_phy_device_number;
wire [2:0] pcie_phy_function_number;
wire [15:0] pcie_phy_command;
wire [15:0] pcie_phy_dcommand;
wire pcie_phy_m_axis_rx_tlast;
wire [31:0] pcie_phy_m_axis_rx_tuser;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_valid;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_ready;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_first;
wire pcie_endpoint_litepcietlpdepacketizer_sink_sink_last;
wire [127:0] pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_dat;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_be;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_valid;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_ready;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_first;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_last;
wire pcie_endpoint_litepcietlpdepacketizer_req_source_payload_we;
wire [31:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_adr;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_len;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_req_id;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_tag;
wire [127:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_dat;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_channel = 8'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_req_source_payload_user_id = 8'd0;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_valid;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_ready;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_first;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_last;
wire [31:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_adr;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_len;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_end;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_req_id;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_cmp_id;
wire pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_err;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_tag;
wire [127:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_dat;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_channel = 8'd0;
reg [7:0] pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_user_id = 8'd0;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_first;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last;
wire [127:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_ready;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last = 1'd0;
reg [127:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header = 128'd0;
reg [127:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat = 128'd0;
reg [15:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be = 16'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_last = 1'd0;
reg [127:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat = 128'd0;
reg [15:0] pcie_endpoint_litepcietlpdepacketizer_header_extracter_be = 16'd0;
wire pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid;
reg pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first;
wire pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last;
wire [1:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt;
wire [4:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type;
wire [127:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_endpoint0_ready;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint0_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint0_last = 1'd0;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt = 2'd0;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type = 5'd0;
reg [127:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat = 128'd0;
reg [15:0] pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be = 16'd0;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_endpoint1_ready;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint1_first = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_endpoint1_last = 1'd0;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt = 2'd0;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type = 5'd0;
reg [127:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat = 128'd0;
reg [15:0] pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be = 16'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_first = 1'd1;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_last = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing = 1'd0;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_ready;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_first;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_last;
wire [29:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_address;
wire [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_attr;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_ep;
wire [3:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_first_be;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt = 2'd0;
wire [3:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_last_be;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_length;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_requester_id;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tag;
wire [2:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tc;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_td;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type = 5'd0;
wire [127:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_dat;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_be;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer = 2'd0;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_valid;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_ready;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_first;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_last;
wire [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_attr;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_bcm;
wire [11:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_byte_count;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_completer_id;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_ep;
reg [1:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt = 2'd0;
wire [9:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length;
wire [6:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_lower_address;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_requester_id;
wire [2:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_status;
wire [7:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tag;
wire [2:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tc;
wire pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_td;
reg [4:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type = 5'd0;
wire [127:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_dat;
wire [15:0] pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_be;
wire pcie_endpoint_req_sink_valid;
wire pcie_endpoint_req_sink_ready;
wire pcie_endpoint_req_sink_first;
wire pcie_endpoint_req_sink_last;
wire pcie_endpoint_req_sink_payload_we;
wire [31:0] pcie_endpoint_req_sink_payload_adr;
wire [9:0] pcie_endpoint_req_sink_payload_len;
wire [15:0] pcie_endpoint_req_sink_payload_req_id;
wire [7:0] pcie_endpoint_req_sink_payload_tag;
wire [127:0] pcie_endpoint_req_sink_payload_dat;
wire [7:0] pcie_endpoint_req_sink_payload_channel;
wire [7:0] pcie_endpoint_req_sink_payload_user_id;
wire pcie_endpoint_cmp_sink_valid;
wire pcie_endpoint_cmp_sink_ready;
wire pcie_endpoint_cmp_sink_first;
wire pcie_endpoint_cmp_sink_last;
wire [31:0] pcie_endpoint_cmp_sink_payload_adr;
wire [9:0] pcie_endpoint_cmp_sink_payload_len;
wire pcie_endpoint_cmp_sink_payload_end;
wire [15:0] pcie_endpoint_cmp_sink_payload_req_id;
wire [15:0] pcie_endpoint_cmp_sink_payload_cmp_id;
wire pcie_endpoint_cmp_sink_payload_err;
wire [7:0] pcie_endpoint_cmp_sink_payload_tag;
wire [127:0] pcie_endpoint_cmp_sink_payload_dat;
wire [7:0] pcie_endpoint_cmp_sink_payload_channel;
wire [7:0] pcie_endpoint_cmp_sink_payload_user_id;
wire pcie_endpoint_source_source_valid;
wire pcie_endpoint_source_source_ready;
wire pcie_endpoint_source_source_first;
wire pcie_endpoint_source_source_last;
wire [127:0] pcie_endpoint_source_source_payload_dat;
wire [15:0] pcie_endpoint_source_source_payload_be;
wire pcie_endpoint_tlp_req_valid;
wire pcie_endpoint_tlp_req_ready;
wire pcie_endpoint_tlp_req_first;
wire pcie_endpoint_tlp_req_last;
wire [29:0] pcie_endpoint_tlp_req_payload_address;
wire [1:0] pcie_endpoint_tlp_req_payload_attr;
wire pcie_endpoint_tlp_req_payload_ep;
wire [3:0] pcie_endpoint_tlp_req_payload_first_be;
reg [1:0] pcie_endpoint_tlp_req_payload_fmt = 2'd0;
reg [3:0] pcie_endpoint_tlp_req_payload_last_be = 4'd0;
wire [9:0] pcie_endpoint_tlp_req_payload_length;
wire [15:0] pcie_endpoint_tlp_req_payload_requester_id;
wire [7:0] pcie_endpoint_tlp_req_payload_tag;
wire [2:0] pcie_endpoint_tlp_req_payload_tc;
wire pcie_endpoint_tlp_req_payload_td;
reg [4:0] pcie_endpoint_tlp_req_payload_type = 5'd0;
wire [127:0] pcie_endpoint_tlp_req_payload_dat;
reg [15:0] pcie_endpoint_tlp_req_payload_be = 16'd0;
wire pcie_endpoint_tlp_raw_req_valid;
reg pcie_endpoint_tlp_raw_req_ready = 1'd0;
wire pcie_endpoint_tlp_raw_req_first;
wire pcie_endpoint_tlp_raw_req_last;
reg [127:0] pcie_endpoint_tlp_raw_req_payload_header = 128'd0;
wire [127:0] pcie_endpoint_tlp_raw_req_payload_dat;
wire [15:0] pcie_endpoint_tlp_raw_req_payload_be;
wire pcie_endpoint_tlp_cmp_valid;
wire pcie_endpoint_tlp_cmp_ready;
wire pcie_endpoint_tlp_cmp_first;
wire pcie_endpoint_tlp_cmp_last;
wire [1:0] pcie_endpoint_tlp_cmp_payload_attr;
wire pcie_endpoint_tlp_cmp_payload_bcm;
wire [11:0] pcie_endpoint_tlp_cmp_payload_byte_count;
wire [15:0] pcie_endpoint_tlp_cmp_payload_completer_id;
wire pcie_endpoint_tlp_cmp_payload_ep;
reg [1:0] pcie_endpoint_tlp_cmp_payload_fmt = 2'd0;
wire [9:0] pcie_endpoint_tlp_cmp_payload_length;
wire [6:0] pcie_endpoint_tlp_cmp_payload_lower_address;
wire [15:0] pcie_endpoint_tlp_cmp_payload_requester_id;
reg [2:0] pcie_endpoint_tlp_cmp_payload_status = 3'd0;
wire [7:0] pcie_endpoint_tlp_cmp_payload_tag;
wire [2:0] pcie_endpoint_tlp_cmp_payload_tc;
wire pcie_endpoint_tlp_cmp_payload_td;
reg [4:0] pcie_endpoint_tlp_cmp_payload_type = 5'd0;
wire [127:0] pcie_endpoint_tlp_cmp_payload_dat;
wire [15:0] pcie_endpoint_tlp_cmp_payload_be;
wire pcie_endpoint_tlp_raw_cmp_valid;
reg pcie_endpoint_tlp_raw_cmp_ready = 1'd0;
wire pcie_endpoint_tlp_raw_cmp_first;
wire pcie_endpoint_tlp_raw_cmp_last;
reg [127:0] pcie_endpoint_tlp_raw_cmp_payload_header = 128'd0;
wire [127:0] pcie_endpoint_tlp_raw_cmp_payload_dat;
wire [15:0] pcie_endpoint_tlp_raw_cmp_payload_be;
reg pcie_endpoint_tlp_raw_valid = 1'd0;
wire pcie_endpoint_tlp_raw_ready;
reg pcie_endpoint_tlp_raw_first = 1'd0;
reg pcie_endpoint_tlp_raw_last = 1'd0;
reg [127:0] pcie_endpoint_tlp_raw_payload_header = 128'd0;
reg [127:0] pcie_endpoint_tlp_raw_payload_dat = 128'd0;
reg [15:0] pcie_endpoint_tlp_raw_payload_be = 16'd0;
reg [1:0] pcie_endpoint_request = 2'd0;
reg pcie_endpoint_grant = 1'd0;
reg pcie_endpoint_status0_first = 1'd1;
reg pcie_endpoint_status0_last = 1'd0;
wire pcie_endpoint_status0_ongoing0;
reg pcie_endpoint_status0_ongoing1 = 1'd0;
reg pcie_endpoint_status1_first = 1'd1;
reg pcie_endpoint_status1_last = 1'd0;
wire pcie_endpoint_status1_ongoing0;
reg pcie_endpoint_status1_ongoing1 = 1'd0;
wire pcie_endpoint_header_inserter_sink_valid;
reg pcie_endpoint_header_inserter_sink_ready = 1'd0;
wire pcie_endpoint_header_inserter_sink_first;
wire pcie_endpoint_header_inserter_sink_last;
wire [127:0] pcie_endpoint_header_inserter_sink_payload_header;
wire [127:0] pcie_endpoint_header_inserter_sink_payload_dat;
wire [15:0] pcie_endpoint_header_inserter_sink_payload_be;
reg pcie_endpoint_header_inserter_source_valid = 1'd0;
wire pcie_endpoint_header_inserter_source_ready;
reg pcie_endpoint_header_inserter_source_first = 1'd0;
reg pcie_endpoint_header_inserter_source_last = 1'd0;
reg [127:0] pcie_endpoint_header_inserter_source_payload_dat = 128'd0;
reg [15:0] pcie_endpoint_header_inserter_source_payload_be = 16'd0;
reg [127:0] pcie_endpoint_header_inserter_dat = 128'd0;
reg pcie_endpoint_header_inserter_last = 1'd0;
reg pcie_endpoint_master_sink_valid = 1'd0;
wire pcie_endpoint_master_sink_ready;
reg pcie_endpoint_master_sink_first = 1'd0;
reg pcie_endpoint_master_sink_last = 1'd0;
reg pcie_endpoint_master_sink_payload_we = 1'd0;
reg [31:0] pcie_endpoint_master_sink_payload_adr = 32'd0;
reg [9:0] pcie_endpoint_master_sink_payload_len = 10'd0;
reg [15:0] pcie_endpoint_master_sink_payload_req_id = 16'd0;
reg [7:0] pcie_endpoint_master_sink_payload_tag = 8'd0;
reg [127:0] pcie_endpoint_master_sink_payload_dat = 128'd0;
reg [7:0] pcie_endpoint_master_sink_payload_channel = 8'd0;
reg [7:0] pcie_endpoint_master_sink_payload_user_id = 8'd0;
wire pcie_endpoint_master_source_valid;
wire pcie_endpoint_master_source_ready;
wire pcie_endpoint_master_source_first;
wire pcie_endpoint_master_source_last;
wire [31:0] pcie_endpoint_master_source_payload_adr;
wire [9:0] pcie_endpoint_master_source_payload_len;
wire pcie_endpoint_master_source_payload_end;
wire [15:0] pcie_endpoint_master_source_payload_req_id;
wire [15:0] pcie_endpoint_master_source_payload_cmp_id;
wire pcie_endpoint_master_source_payload_err;
wire [7:0] pcie_endpoint_master_source_payload_tag;
wire [127:0] pcie_endpoint_master_source_payload_dat;
wire [7:0] pcie_endpoint_master_source_payload_channel;
wire [7:0] pcie_endpoint_master_source_payload_user_id;
wire pcie_endpoint_slave_sink_valid;
wire pcie_endpoint_slave_sink_ready;
wire pcie_endpoint_slave_sink_first;
wire pcie_endpoint_slave_sink_last;
wire [31:0] pcie_endpoint_slave_sink_payload_adr;
wire [9:0] pcie_endpoint_slave_sink_payload_len;
wire pcie_endpoint_slave_sink_payload_end;
wire [15:0] pcie_endpoint_slave_sink_payload_req_id;
wire [15:0] pcie_endpoint_slave_sink_payload_cmp_id;
wire pcie_endpoint_slave_sink_payload_err;
wire [7:0] pcie_endpoint_slave_sink_payload_tag;
wire [127:0] pcie_endpoint_slave_sink_payload_dat;
wire [7:0] pcie_endpoint_slave_sink_payload_channel;
wire [7:0] pcie_endpoint_slave_sink_payload_user_id;
wire pcie_endpoint_slave_source_valid;
wire pcie_endpoint_slave_source_ready;
wire pcie_endpoint_slave_source_first;
wire pcie_endpoint_slave_source_last;
wire pcie_endpoint_slave_source_payload_we;
wire [31:0] pcie_endpoint_slave_source_payload_adr;
wire [9:0] pcie_endpoint_slave_source_payload_len;
wire [15:0] pcie_endpoint_slave_source_payload_req_id;
wire [7:0] pcie_endpoint_slave_source_payload_tag;
wire [127:0] pcie_endpoint_slave_source_payload_dat;
wire [7:0] pcie_endpoint_slave_source_payload_channel;
wire [7:0] pcie_endpoint_slave_source_payload_user_id;
reg [29:0] wishbone_adr = 30'd0;
reg [31:0] wishbone_dat_w = 32'd0;
wire [31:0] wishbone_dat_r;
reg [3:0] wishbone_sel = 4'd0;
reg wishbone_cyc = 1'd0;
reg wishbone_stb = 1'd0;
wire wishbone_ack;
reg wishbone_we = 1'd0;
reg [2:0] wishbone_cti = 3'd0;
reg [1:0] wishbone_bte = 2'd0;
wire wishbone_err;
reg sink_valid = 1'd0;
wire sink_ready;
reg sink_first = 1'd0;
reg sink_last = 1'd0;
reg [31:0] sink_payload_adr = 32'd0;
reg [9:0] sink_payload_len = 10'd0;
reg sink_payload_end = 1'd0;
reg [15:0] sink_payload_req_id = 16'd0;
reg [15:0] sink_payload_cmp_id = 16'd0;
reg sink_payload_err = 1'd0;
reg [7:0] sink_payload_tag = 8'd0;
reg [127:0] sink_payload_dat = 128'd0;
reg [7:0] sink_payload_channel = 8'd0;
reg [7:0] sink_payload_user_id = 8'd0;
wire source_valid;
reg source_ready = 1'd0;
wire source_first;
wire source_last;
wire source_payload_we;
wire [31:0] source_payload_adr;
wire [9:0] source_payload_len;
wire [15:0] source_payload_req_id;
wire [7:0] source_payload_tag;
wire [127:0] source_payload_dat;
wire [7:0] source_payload_channel;
wire [7:0] source_payload_user_id;
reg update_dat = 1'd0;
reg [511:0] cntrl_storage_full = 512'd0;
wire [511:0] cntrl_storage;
reg cntrl_re = 1'd0;
wire cntrl_we;
wire [511:0] cntrl_dat_w;
reg enable_storage_full = 1'd0;
wire enable_storage;
reg enable_re = 1'd0;
reg [31:0] test_storage_full = 32'd0;
wire [31:0] test_storage;
reg test_re = 1'd0;
reg [3:0] status = 4'd3;
reg enable_both_storage_full = 1'd0;
wire enable_both_storage;
reg enable_both_re = 1'd0;
reg litepciedma0_litepciemasterinternalport0_sink_valid = 1'd0;
reg litepciedma0_litepciemasterinternalport0_sink_ready = 1'd0;
wire litepciedma0_litepciemasterinternalport0_sink_first;
wire litepciedma0_litepciemasterinternalport0_sink_last;
wire litepciedma0_litepciemasterinternalport0_sink_payload_we;
wire [31:0] litepciedma0_litepciemasterinternalport0_sink_payload_adr;
wire [9:0] litepciedma0_litepciemasterinternalport0_sink_payload_len;
wire [15:0] litepciedma0_litepciemasterinternalport0_sink_payload_req_id;
wire [7:0] litepciedma0_litepciemasterinternalport0_sink_payload_tag;
wire [127:0] litepciedma0_litepciemasterinternalport0_sink_payload_dat;
wire [7:0] litepciedma0_litepciemasterinternalport0_sink_payload_channel;
wire [7:0] litepciedma0_litepciemasterinternalport0_sink_payload_user_id;
reg litepciedma0_litepciemasterinternalport0_source_valid = 1'd0;
reg litepciedma0_litepciemasterinternalport0_source_ready = 1'd0;
reg litepciedma0_litepciemasterinternalport0_source_first = 1'd0;
reg litepciedma0_litepciemasterinternalport0_source_last = 1'd0;
reg [31:0] litepciedma0_litepciemasterinternalport0_source_payload_adr = 32'd0;
reg [9:0] litepciedma0_litepciemasterinternalport0_source_payload_len = 10'd0;
reg litepciedma0_litepciemasterinternalport0_source_payload_end = 1'd0;
reg [15:0] litepciedma0_litepciemasterinternalport0_source_payload_req_id = 16'd0;
reg [15:0] litepciedma0_litepciemasterinternalport0_source_payload_cmp_id = 16'd0;
reg litepciedma0_litepciemasterinternalport0_source_payload_err = 1'd0;
reg [7:0] litepciedma0_litepciemasterinternalport0_source_payload_tag = 8'd0;
reg [127:0] litepciedma0_litepciemasterinternalport0_source_payload_dat = 128'd0;
reg [7:0] litepciedma0_litepciemasterinternalport0_source_payload_channel = 8'd0;
reg [7:0] litepciedma0_litepciemasterinternalport0_source_payload_user_id = 8'd0;
wire litepciedma0_writer_sink_sink_valid;
wire litepciedma0_writer_sink_sink_ready;
wire litepciedma0_writer_sink_sink_first;
wire litepciedma0_writer_sink_sink_last;
wire [127:0] litepciedma0_writer_sink_sink_payload_data;
wire litepciedma0_writer_irq;
reg litepciedma0_writer_enable_storage_full = 1'd0;
wire litepciedma0_writer_enable_storage;
reg litepciedma0_writer_enable_re = 1'd0;
reg litepciedma0_writer_allow_requests_storage_full = 1'd0;
wire litepciedma0_writer_allow_requests_storage;
reg litepciedma0_writer_allow_requests_re = 1'd0;
reg litepciedma0_writer_fifo_re = 1'd0;
reg litepciedma0_writer_fifo_readable = 1'd0;
wire litepciedma0_writer_fifo_syncfifo0_we;
wire litepciedma0_writer_fifo_syncfifo0_writable;
wire litepciedma0_writer_fifo_syncfifo0_re;
wire litepciedma0_writer_fifo_syncfifo0_readable;
wire [128:0] litepciedma0_writer_fifo_syncfifo0_din;
wire [128:0] litepciedma0_writer_fifo_syncfifo0_dout;
reg [7:0] litepciedma0_writer_fifo_level0 = 8'd0;
reg litepciedma0_writer_fifo_replace = 1'd0;
reg [6:0] litepciedma0_writer_fifo_produce = 7'd0;
reg [6:0] litepciedma0_writer_fifo_consume = 7'd0;
reg [6:0] litepciedma0_writer_fifo_wrport_adr = 7'd0;
wire [128:0] litepciedma0_writer_fifo_wrport_dat_r;
wire litepciedma0_writer_fifo_wrport_we;
wire [128:0] litepciedma0_writer_fifo_wrport_dat_w;
wire litepciedma0_writer_fifo_do_read;
wire [6:0] litepciedma0_writer_fifo_rdport_adr;
wire [128:0] litepciedma0_writer_fifo_rdport_dat_r;
wire litepciedma0_writer_fifo_rdport_re;
wire [7:0] litepciedma0_writer_fifo_level1;
wire litepciedma0_writer_resetinserter_reset0;
reg litepciedma0_writer_request_ready = 1'd0;
reg [12:0] litepciedma0_writer_counter = 13'd0;
reg litepciedma0_writer_counter_reset = 1'd0;
reg litepciedma0_writer_counter_ce = 1'd0;
wire litepciedma0_writer_table_source_source_valid;
wire litepciedma0_writer_table_source_source_ready;
wire litepciedma0_writer_table_source_source_first;
reg litepciedma0_writer_table_source_source_last = 1'd0;
wire [31:0] litepciedma0_writer_table_source_source_payload_address;
wire [23:0] litepciedma0_writer_table_source_source_payload_length;
wire [7:0] litepciedma0_writer_table_source_source_payload_control;
reg [63:0] litepciedma0_writer_table_value_storage_full = 64'd0;
wire [63:0] litepciedma0_writer_table_value_storage;
reg litepciedma0_writer_table_value_re = 1'd0;
wire litepciedma0_writer_table_we_re;
wire litepciedma0_writer_table_we_r;
reg litepciedma0_writer_table_we_w = 1'd0;
reg litepciedma0_writer_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma0_writer_table_loop_prog_n_storage;
reg litepciedma0_writer_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma0_writer_table_loop_status_status = 16'd0;
wire [7:0] litepciedma0_writer_table_level_status;
wire litepciedma0_writer_table_flush_re;
wire litepciedma0_writer_table_flush_r;
reg litepciedma0_writer_table_flush_w = 1'd0;
reg litepciedma0_writer_table_syncfifo0_sink_valid = 1'd0;
wire litepciedma0_writer_table_syncfifo0_sink_ready;
reg litepciedma0_writer_table_syncfifo0_sink_first = 1'd0;
reg litepciedma0_writer_table_syncfifo0_sink_last = 1'd0;
reg [31:0] litepciedma0_writer_table_syncfifo0_sink_payload_address = 32'd0;
reg [23:0] litepciedma0_writer_table_syncfifo0_sink_payload_length = 24'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_sink_payload_control = 8'd0;
wire litepciedma0_writer_table_syncfifo0_source_valid;
wire litepciedma0_writer_table_syncfifo0_source_ready;
wire litepciedma0_writer_table_syncfifo0_source_first;
wire litepciedma0_writer_table_syncfifo0_source_last;
wire [31:0] litepciedma0_writer_table_syncfifo0_source_payload_address;
wire [23:0] litepciedma0_writer_table_syncfifo0_source_payload_length;
wire [7:0] litepciedma0_writer_table_syncfifo0_source_payload_control;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_we;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_writable;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_re;
wire litepciedma0_writer_table_syncfifo0_syncfifo0_readable;
wire [65:0] litepciedma0_writer_table_syncfifo0_syncfifo0_din;
wire [65:0] litepciedma0_writer_table_syncfifo0_syncfifo0_dout;
reg [8:0] litepciedma0_writer_table_syncfifo0_level = 9'd0;
reg litepciedma0_writer_table_syncfifo0_replace = 1'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_produce = 8'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_consume = 8'd0;
reg [7:0] litepciedma0_writer_table_syncfifo0_wrport_adr = 8'd0;
wire [65:0] litepciedma0_writer_table_syncfifo0_wrport_dat_r;
wire litepciedma0_writer_table_syncfifo0_wrport_we;
wire [65:0] litepciedma0_writer_table_syncfifo0_wrport_dat_w;
wire litepciedma0_writer_table_syncfifo0_do_read;
wire [7:0] litepciedma0_writer_table_syncfifo0_rdport_adr;
wire [65:0] litepciedma0_writer_table_syncfifo0_rdport_dat_r;
wire [31:0] litepciedma0_writer_table_syncfifo0_fifo_in_payload_address;
wire [23:0] litepciedma0_writer_table_syncfifo0_fifo_in_payload_length;
wire [7:0] litepciedma0_writer_table_syncfifo0_fifo_in_payload_control;
wire litepciedma0_writer_table_syncfifo0_fifo_in_first;
wire litepciedma0_writer_table_syncfifo0_fifo_in_last;
wire [31:0] litepciedma0_writer_table_syncfifo0_fifo_out_payload_address;
wire [23:0] litepciedma0_writer_table_syncfifo0_fifo_out_payload_length;
wire [7:0] litepciedma0_writer_table_syncfifo0_fifo_out_payload_control;
wire litepciedma0_writer_table_syncfifo0_fifo_out_first;
wire litepciedma0_writer_table_syncfifo0_fifo_out_last;
wire litepciedma0_writer_table_reset;
reg [15:0] litepciedma0_writer_table_loop_index = 16'd1;
wire litepciedma0_writer_splitter_sink_valid;
reg litepciedma0_writer_splitter_sink_ready = 1'd0;
wire litepciedma0_writer_splitter_sink_first;
wire litepciedma0_writer_splitter_sink_last;
wire [31:0] litepciedma0_writer_splitter_sink_payload_address;
wire [23:0] litepciedma0_writer_splitter_sink_payload_length;
wire [7:0] litepciedma0_writer_splitter_sink_payload_control;
reg litepciedma0_writer_splitter_source_valid = 1'd0;
wire litepciedma0_writer_splitter_source_ready;
reg litepciedma0_writer_splitter_source_first = 1'd0;
reg litepciedma0_writer_splitter_source_last = 1'd0;
wire [31:0] litepciedma0_writer_splitter_source_payload_address;
reg [23:0] litepciedma0_writer_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma0_writer_splitter_source_payload_control;
wire [7:0] litepciedma0_writer_splitter_source_payload_user_id;
reg litepciedma0_writer_splitter_end = 1'd0;
reg [31:0] litepciedma0_writer_splitter_offset = 32'd0;
reg litepciedma0_writer_splitter_offset_reset = 1'd0;
reg litepciedma0_writer_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma0_writer_splitter_user_id = 32'd0;
wire litepciedma0_writer_splitter_user_id_ce;
reg [23:0] litepciedma0_writer_splitter_length = 24'd0;
reg litepciedma0_writer_splitter_length_update = 1'd0;
wire litepciedma0_writer_resetinserter_reset1;
wire litepciedma0_writer_bufferizeendpoints0_sink_valid;
wire litepciedma0_writer_bufferizeendpoints0_sink_ready;
wire litepciedma0_writer_bufferizeendpoints0_sink_first;
wire litepciedma0_writer_bufferizeendpoints0_sink_last;
wire [31:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_address;
wire [23:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_length;
wire [7:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_control;
wire [7:0] litepciedma0_writer_bufferizeendpoints0_sink_payload_user_id;
wire litepciedma0_writer_bufferizeendpoints0_source_valid;
reg litepciedma0_writer_bufferizeendpoints0_source_ready = 1'd0;
wire litepciedma0_writer_bufferizeendpoints0_source_first;
wire litepciedma0_writer_bufferizeendpoints0_source_last;
reg [31:0] litepciedma0_writer_bufferizeendpoints0_source_payload_address = 32'd0;
reg [23:0] litepciedma0_writer_bufferizeendpoints0_source_payload_length = 24'd0;
reg [7:0] litepciedma0_writer_bufferizeendpoints0_source_payload_control = 8'd0;
reg [7:0] litepciedma0_writer_bufferizeendpoints0_source_payload_user_id = 8'd0;
wire litepciedma0_writer_bufferizeendpoints0_pipe_ce;
wire litepciedma0_writer_bufferizeendpoints0_busy;
reg litepciedma0_writer_bufferizeendpoints0_valid_n = 1'd0;
reg litepciedma0_writer_bufferizeendpoints0_first_n = 1'd0;
reg litepciedma0_writer_bufferizeendpoints0_last_n = 1'd0;
(* DONT_TOUCH="TRUE" *)reg [15:0] litepciedma0_writer_status = 16'd0;
reg litepciedma0_litepciemasterinternalport1_sink_valid = 1'd0;
reg litepciedma0_litepciemasterinternalport1_sink_ready = 1'd0;
wire litepciedma0_litepciemasterinternalport1_sink_first;
wire litepciedma0_litepciemasterinternalport1_sink_last;
wire litepciedma0_litepciemasterinternalport1_sink_payload_we;
wire [31:0] litepciedma0_litepciemasterinternalport1_sink_payload_adr;
wire [9:0] litepciedma0_litepciemasterinternalport1_sink_payload_len;
wire [15:0] litepciedma0_litepciemasterinternalport1_sink_payload_req_id;
reg [7:0] litepciedma0_litepciemasterinternalport1_sink_payload_tag = 8'd0;
wire [127:0] litepciedma0_litepciemasterinternalport1_sink_payload_dat;
wire [7:0] litepciedma0_litepciemasterinternalport1_sink_payload_channel;
wire [7:0] litepciedma0_litepciemasterinternalport1_sink_payload_user_id;
reg litepciedma0_litepciemasterinternalport1_source_valid = 1'd0;
wire litepciedma0_litepciemasterinternalport1_source_ready;
reg litepciedma0_litepciemasterinternalport1_source_first = 1'd0;
reg litepciedma0_litepciemasterinternalport1_source_last = 1'd0;
reg [31:0] litepciedma0_litepciemasterinternalport1_source_payload_adr = 32'd0;
reg [9:0] litepciedma0_litepciemasterinternalport1_source_payload_len = 10'd0;
reg litepciedma0_litepciemasterinternalport1_source_payload_end = 1'd0;
reg [15:0] litepciedma0_litepciemasterinternalport1_source_payload_req_id = 16'd0;
reg [15:0] litepciedma0_litepciemasterinternalport1_source_payload_cmp_id = 16'd0;
reg litepciedma0_litepciemasterinternalport1_source_payload_err = 1'd0;
reg [7:0] litepciedma0_litepciemasterinternalport1_source_payload_tag = 8'd0;
reg [127:0] litepciedma0_litepciemasterinternalport1_source_payload_dat = 128'd0;
reg [7:0] litepciedma0_litepciemasterinternalport1_source_payload_channel = 8'd0;
reg [7:0] litepciedma0_litepciemasterinternalport1_source_payload_user_id = 8'd0;
wire litepciedma0_reader_source_source_valid;
wire litepciedma0_reader_source_source_ready;
wire litepciedma0_reader_source_source_first;
wire litepciedma0_reader_source_source_last;
wire [127:0] litepciedma0_reader_source_source_payload_data;
wire litepciedma0_reader_irq;
reg litepciedma0_reader_enable_storage_full = 1'd0;
wire litepciedma0_reader_enable_storage;
reg litepciedma0_reader_enable_re = 1'd0;
reg [15:0] litepciedma0_reader_packet_nr_storage_full = 16'd0;
wire [15:0] litepciedma0_reader_packet_nr_storage;
reg litepciedma0_reader_packet_nr_re = 1'd0;
(* DONT_TOUCH="TRUE" *)reg [15:0] litepciedma0_reader_status = 16'd0;
wire litepciedma0_reader_table_source_source_valid;
wire litepciedma0_reader_table_source_source_ready;
wire litepciedma0_reader_table_source_source_first;
reg litepciedma0_reader_table_source_source_last = 1'd0;
wire [31:0] litepciedma0_reader_table_source_source_payload_address;
wire [23:0] litepciedma0_reader_table_source_source_payload_length;
wire [7:0] litepciedma0_reader_table_source_source_payload_control;
reg [63:0] litepciedma0_reader_table_value_storage_full = 64'd0;
wire [63:0] litepciedma0_reader_table_value_storage;
reg litepciedma0_reader_table_value_re = 1'd0;
wire litepciedma0_reader_table_we_re;
wire litepciedma0_reader_table_we_r;
reg litepciedma0_reader_table_we_w = 1'd0;
reg litepciedma0_reader_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma0_reader_table_loop_prog_n_storage;
reg litepciedma0_reader_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma0_reader_table_loop_status_status = 16'd0;
wire [7:0] litepciedma0_reader_table_level_status;
wire litepciedma0_reader_table_flush_re;
wire litepciedma0_reader_table_flush_r;
reg litepciedma0_reader_table_flush_w = 1'd0;
reg litepciedma0_reader_table_syncfifo0_sink_valid = 1'd0;
wire litepciedma0_reader_table_syncfifo0_sink_ready;
reg litepciedma0_reader_table_syncfifo0_sink_first = 1'd0;
reg litepciedma0_reader_table_syncfifo0_sink_last = 1'd0;
reg [31:0] litepciedma0_reader_table_syncfifo0_sink_payload_address = 32'd0;
reg [23:0] litepciedma0_reader_table_syncfifo0_sink_payload_length = 24'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_sink_payload_control = 8'd0;
wire litepciedma0_reader_table_syncfifo0_source_valid;
wire litepciedma0_reader_table_syncfifo0_source_ready;
wire litepciedma0_reader_table_syncfifo0_source_first;
wire litepciedma0_reader_table_syncfifo0_source_last;
wire [31:0] litepciedma0_reader_table_syncfifo0_source_payload_address;
wire [23:0] litepciedma0_reader_table_syncfifo0_source_payload_length;
wire [7:0] litepciedma0_reader_table_syncfifo0_source_payload_control;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_we;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_writable;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_re;
wire litepciedma0_reader_table_syncfifo0_syncfifo0_readable;
wire [65:0] litepciedma0_reader_table_syncfifo0_syncfifo0_din;
wire [65:0] litepciedma0_reader_table_syncfifo0_syncfifo0_dout;
reg [8:0] litepciedma0_reader_table_syncfifo0_level = 9'd0;
reg litepciedma0_reader_table_syncfifo0_replace = 1'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_produce = 8'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_consume = 8'd0;
reg [7:0] litepciedma0_reader_table_syncfifo0_wrport_adr = 8'd0;
wire [65:0] litepciedma0_reader_table_syncfifo0_wrport_dat_r;
wire litepciedma0_reader_table_syncfifo0_wrport_we;
wire [65:0] litepciedma0_reader_table_syncfifo0_wrport_dat_w;
wire litepciedma0_reader_table_syncfifo0_do_read;
wire [7:0] litepciedma0_reader_table_syncfifo0_rdport_adr;
wire [65:0] litepciedma0_reader_table_syncfifo0_rdport_dat_r;
wire [31:0] litepciedma0_reader_table_syncfifo0_fifo_in_payload_address;
wire [23:0] litepciedma0_reader_table_syncfifo0_fifo_in_payload_length;
wire [7:0] litepciedma0_reader_table_syncfifo0_fifo_in_payload_control;
wire litepciedma0_reader_table_syncfifo0_fifo_in_first;
wire litepciedma0_reader_table_syncfifo0_fifo_in_last;
wire [31:0] litepciedma0_reader_table_syncfifo0_fifo_out_payload_address;
wire [23:0] litepciedma0_reader_table_syncfifo0_fifo_out_payload_length;
wire [7:0] litepciedma0_reader_table_syncfifo0_fifo_out_payload_control;
wire litepciedma0_reader_table_syncfifo0_fifo_out_first;
wire litepciedma0_reader_table_syncfifo0_fifo_out_last;
wire litepciedma0_reader_table_reset;
reg [15:0] litepciedma0_reader_table_loop_index = 16'd1;
wire litepciedma0_reader_splitter_sink_valid;
reg litepciedma0_reader_splitter_sink_ready = 1'd0;
wire litepciedma0_reader_splitter_sink_first;
wire litepciedma0_reader_splitter_sink_last;
wire [31:0] litepciedma0_reader_splitter_sink_payload_address;
wire [23:0] litepciedma0_reader_splitter_sink_payload_length;
wire [7:0] litepciedma0_reader_splitter_sink_payload_control;
reg litepciedma0_reader_splitter_source_valid = 1'd0;
wire litepciedma0_reader_splitter_source_ready;
reg litepciedma0_reader_splitter_source_first = 1'd0;
reg litepciedma0_reader_splitter_source_last = 1'd0;
wire [31:0] litepciedma0_reader_splitter_source_payload_address;
reg [23:0] litepciedma0_reader_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma0_reader_splitter_source_payload_control;
wire [7:0] litepciedma0_reader_splitter_source_payload_user_id;
reg litepciedma0_reader_splitter_end = 1'd0;
reg [31:0] litepciedma0_reader_splitter_offset = 32'd0;
reg litepciedma0_reader_splitter_offset_reset = 1'd0;
reg litepciedma0_reader_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma0_reader_splitter_user_id = 32'd0;
wire litepciedma0_reader_splitter_user_id_ce;
reg [23:0] litepciedma0_reader_splitter_length = 24'd0;
reg litepciedma0_reader_splitter_length_update = 1'd0;
wire litepciedma0_reader_resetinserter_reset0;
wire litepciedma0_reader_bufferizeendpoints0_sink_valid;
wire litepciedma0_reader_bufferizeendpoints0_sink_ready;
wire litepciedma0_reader_bufferizeendpoints0_sink_first;
wire litepciedma0_reader_bufferizeendpoints0_sink_last;
wire [31:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_address;
wire [23:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_length;
wire [7:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_control;
wire [7:0] litepciedma0_reader_bufferizeendpoints0_sink_payload_user_id;
wire litepciedma0_reader_bufferizeendpoints0_source_valid;
reg litepciedma0_reader_bufferizeendpoints0_source_ready = 1'd0;
wire litepciedma0_reader_bufferizeendpoints0_source_first;
wire litepciedma0_reader_bufferizeendpoints0_source_last;
reg [31:0] litepciedma0_reader_bufferizeendpoints0_source_payload_address = 32'd0;
reg [23:0] litepciedma0_reader_bufferizeendpoints0_source_payload_length = 24'd0;
reg [7:0] litepciedma0_reader_bufferizeendpoints0_source_payload_control = 8'd0;
reg [7:0] litepciedma0_reader_bufferizeendpoints0_source_payload_user_id = 8'd0;
wire litepciedma0_reader_bufferizeendpoints0_pipe_ce;
wire litepciedma0_reader_bufferizeendpoints0_busy;
reg litepciedma0_reader_bufferizeendpoints0_valid_n = 1'd0;
reg litepciedma0_reader_bufferizeendpoints0_first_n = 1'd0;
reg litepciedma0_reader_bufferizeendpoints0_last_n = 1'd0;
reg litepciedma0_reader_request_ready = 1'd0;
wire [7:0] litepciedma0_reader_requests_per_pckt;
reg [7:0] litepciedma0_reader_request_cnt = 8'd0;
reg [15:0] litepciedma0_reader_req_pck_cnt = 16'd0;
reg litepciedma0_reader_request_counted = 1'd1;
reg litepciedma0_reader_allow_request = 1'd0;
wire litepciedma0_reader_fifo_sink_valid;
wire litepciedma0_reader_fifo_sink_ready;
wire litepciedma0_reader_fifo_sink_first;
reg litepciedma0_reader_fifo_sink_last = 1'd0;
wire [127:0] litepciedma0_reader_fifo_sink_payload_data;
wire litepciedma0_reader_fifo_source_valid;
wire litepciedma0_reader_fifo_source_ready;
wire litepciedma0_reader_fifo_source_first;
wire litepciedma0_reader_fifo_source_last;
wire [127:0] litepciedma0_reader_fifo_source_payload_data;
wire litepciedma0_reader_fifo_re;
reg litepciedma0_reader_fifo_readable = 1'd0;
wire litepciedma0_reader_fifo_syncfifo0_we;
wire litepciedma0_reader_fifo_syncfifo0_writable;
wire litepciedma0_reader_fifo_syncfifo0_re;
wire litepciedma0_reader_fifo_syncfifo0_readable;
wire [129:0] litepciedma0_reader_fifo_syncfifo0_din;
wire [129:0] litepciedma0_reader_fifo_syncfifo0_dout;
reg [8:0] litepciedma0_reader_fifo_level0 = 9'd0;
reg litepciedma0_reader_fifo_replace = 1'd0;
reg [7:0] litepciedma0_reader_fifo_produce = 8'd0;
reg [7:0] litepciedma0_reader_fifo_consume = 8'd0;
reg [7:0] litepciedma0_reader_fifo_wrport_adr = 8'd0;
wire [129:0] litepciedma0_reader_fifo_wrport_dat_r;
wire litepciedma0_reader_fifo_wrport_we;
wire [129:0] litepciedma0_reader_fifo_wrport_dat_w;
wire litepciedma0_reader_fifo_do_read;
wire [7:0] litepciedma0_reader_fifo_rdport_adr;
wire [129:0] litepciedma0_reader_fifo_rdport_dat_r;
wire litepciedma0_reader_fifo_rdport_re;
wire [8:0] litepciedma0_reader_fifo_level1;
wire [127:0] litepciedma0_reader_fifo_fifo_in_payload_data;
wire litepciedma0_reader_fifo_fifo_in_first;
wire litepciedma0_reader_fifo_fifo_in_last;
wire [127:0] litepciedma0_reader_fifo_fifo_out_payload_data;
wire litepciedma0_reader_fifo_fifo_out_first;
wire litepciedma0_reader_fifo_fifo_out_last;
wire litepciedma0_reader_resetinserter_reset1;
reg [15:0] litepciedma0_reader_sent_pck_cnt = 16'd1;
reg [31:0] litepciedma0_reader_sent_cnt = 32'd0;
reg litepciedma0_reader_flush = 1'd0;
reg [15:0] litepciedma0_reader_flush_nr_storage_full = 16'd0;
wire [15:0] litepciedma0_reader_flush_nr_storage;
reg litepciedma0_reader_flush_nr_re = 1'd0;
reg [15:0] litepciedma0_reader_flush_nbytes_storage_full = 16'd0;
wire [15:0] litepciedma0_reader_flush_nbytes_storage;
reg litepciedma0_reader_flush_nbytes_re = 1'd0;
reg litepciedma0_reader_flush_nbytes_we = 1'd0;
reg [15:0] litepciedma0_reader_flush_nbytes_dat_w = 16'd0;
reg [7:0] litepciedma0_reader_last_user_id = 8'd255;
reg [63:0] litepciedma0_reader_sent_dbg = 64'd0;
reg litepciedma0_reader_bad_fifo_write = 1'd0;
wire [13:0] litepciedma0_reader_fifo_level_status;
wire [13:0] litepciedma0_writer_fifo_level_status;
wire litepciedma0_syncfifo0_sink_valid;
wire litepciedma0_syncfifo0_sink_ready;
wire litepciedma0_syncfifo0_sink_first;
wire litepciedma0_syncfifo0_sink_last;
wire [127:0] litepciedma0_syncfifo0_sink_payload_data;
wire litepciedma0_syncfifo0_source_valid;
wire litepciedma0_syncfifo0_source_ready;
wire litepciedma0_syncfifo0_source_first;
wire litepciedma0_syncfifo0_source_last;
wire [127:0] litepciedma0_syncfifo0_source_payload_data;
wire litepciedma0_syncfifo0_re;
reg litepciedma0_syncfifo0_readable = 1'd0;
wire litepciedma0_syncfifo0_syncfifo0_we;
wire litepciedma0_syncfifo0_syncfifo0_writable;
wire litepciedma0_syncfifo0_syncfifo0_re;
wire litepciedma0_syncfifo0_syncfifo0_readable;
wire [129:0] litepciedma0_syncfifo0_syncfifo0_din;
wire [129:0] litepciedma0_syncfifo0_syncfifo0_dout;
reg [9:0] litepciedma0_syncfifo0_level0 = 10'd0;
reg litepciedma0_syncfifo0_replace = 1'd0;
reg [9:0] litepciedma0_syncfifo0_produce = 10'd0;
reg [9:0] litepciedma0_syncfifo0_consume = 10'd0;
reg [9:0] litepciedma0_syncfifo0_wrport_adr = 10'd0;
wire [129:0] litepciedma0_syncfifo0_wrport_dat_r;
wire litepciedma0_syncfifo0_wrport_we;
wire [129:0] litepciedma0_syncfifo0_wrport_dat_w;
wire litepciedma0_syncfifo0_do_read;
wire [9:0] litepciedma0_syncfifo0_rdport_adr;
wire [129:0] litepciedma0_syncfifo0_rdport_dat_r;
wire litepciedma0_syncfifo0_rdport_re;
wire [9:0] litepciedma0_syncfifo0_level1;
wire [127:0] litepciedma0_syncfifo0_fifo_in_payload_data;
wire litepciedma0_syncfifo0_fifo_in_first;
wire litepciedma0_syncfifo0_fifo_in_last;
wire [127:0] litepciedma0_syncfifo0_fifo_out_payload_data;
wire litepciedma0_syncfifo0_fifo_out_first;
wire litepciedma0_syncfifo0_fifo_out_last;
wire litepciedma0_reader_fifo_reset;
wire litepciedma0_syncfifo1_sink_valid;
wire litepciedma0_syncfifo1_sink_ready;
reg litepciedma0_syncfifo1_sink_first = 1'd0;
wire litepciedma0_syncfifo1_sink_last;
wire [127:0] litepciedma0_syncfifo1_sink_payload_data;
wire litepciedma0_syncfifo1_source_valid;
wire litepciedma0_syncfifo1_source_ready;
wire litepciedma0_syncfifo1_source_first;
wire litepciedma0_syncfifo1_source_last;
wire [127:0] litepciedma0_syncfifo1_source_payload_data;
wire litepciedma0_syncfifo1_re;
reg litepciedma0_syncfifo1_readable = 1'd0;
wire litepciedma0_syncfifo1_syncfifo1_we;
wire litepciedma0_syncfifo1_syncfifo1_writable;
wire litepciedma0_syncfifo1_syncfifo1_re;
wire litepciedma0_syncfifo1_syncfifo1_readable;
wire [129:0] litepciedma0_syncfifo1_syncfifo1_din;
wire [129:0] litepciedma0_syncfifo1_syncfifo1_dout;
reg [9:0] litepciedma0_syncfifo1_level0 = 10'd0;
reg litepciedma0_syncfifo1_replace = 1'd0;
reg [9:0] litepciedma0_syncfifo1_produce = 10'd0;
reg [9:0] litepciedma0_syncfifo1_consume = 10'd0;
reg [9:0] litepciedma0_syncfifo1_wrport_adr = 10'd0;
wire [129:0] litepciedma0_syncfifo1_wrport_dat_r;
wire litepciedma0_syncfifo1_wrport_we;
wire [129:0] litepciedma0_syncfifo1_wrport_dat_w;
wire litepciedma0_syncfifo1_do_read;
wire [9:0] litepciedma0_syncfifo1_rdport_adr;
wire [129:0] litepciedma0_syncfifo1_rdport_dat_r;
wire litepciedma0_syncfifo1_rdport_re;
wire [9:0] litepciedma0_syncfifo1_level1;
wire [127:0] litepciedma0_syncfifo1_fifo_in_payload_data;
wire litepciedma0_syncfifo1_fifo_in_first;
wire litepciedma0_syncfifo1_fifo_in_last;
wire [127:0] litepciedma0_syncfifo1_fifo_out_payload_data;
wire litepciedma0_syncfifo1_fifo_out_first;
wire litepciedma0_syncfifo1_fifo_out_last;
wire litepciedma0_writer_fifo_reset;
wire litepciedma0_next_source_source_valid;
wire litepciedma0_next_source_source_ready;
wire litepciedma0_next_source_source_last;
wire [127:0] litepciedma0_next_source_source_payload_data;
reg litepciedma1_litepciemasterinternalport2_sink_valid = 1'd0;
reg litepciedma1_litepciemasterinternalport2_sink_ready = 1'd0;
wire litepciedma1_litepciemasterinternalport2_sink_first;
wire litepciedma1_litepciemasterinternalport2_sink_last;
wire litepciedma1_litepciemasterinternalport2_sink_payload_we;
wire [31:0] litepciedma1_litepciemasterinternalport2_sink_payload_adr;
wire [9:0] litepciedma1_litepciemasterinternalport2_sink_payload_len;
wire [15:0] litepciedma1_litepciemasterinternalport2_sink_payload_req_id;
wire [7:0] litepciedma1_litepciemasterinternalport2_sink_payload_tag;
wire [127:0] litepciedma1_litepciemasterinternalport2_sink_payload_dat;
wire [7:0] litepciedma1_litepciemasterinternalport2_sink_payload_channel;
wire [7:0] litepciedma1_litepciemasterinternalport2_sink_payload_user_id;
reg litepciedma1_litepciemasterinternalport2_source_valid = 1'd0;
reg litepciedma1_litepciemasterinternalport2_source_ready = 1'd0;
reg litepciedma1_litepciemasterinternalport2_source_first = 1'd0;
reg litepciedma1_litepciemasterinternalport2_source_last = 1'd0;
reg [31:0] litepciedma1_litepciemasterinternalport2_source_payload_adr = 32'd0;
reg [9:0] litepciedma1_litepciemasterinternalport2_source_payload_len = 10'd0;
reg litepciedma1_litepciemasterinternalport2_source_payload_end = 1'd0;
reg [15:0] litepciedma1_litepciemasterinternalport2_source_payload_req_id = 16'd0;
reg [15:0] litepciedma1_litepciemasterinternalport2_source_payload_cmp_id = 16'd0;
reg litepciedma1_litepciemasterinternalport2_source_payload_err = 1'd0;
reg [7:0] litepciedma1_litepciemasterinternalport2_source_payload_tag = 8'd0;
reg [127:0] litepciedma1_litepciemasterinternalport2_source_payload_dat = 128'd0;
reg [7:0] litepciedma1_litepciemasterinternalport2_source_payload_channel = 8'd0;
reg [7:0] litepciedma1_litepciemasterinternalport2_source_payload_user_id = 8'd0;
wire litepciedma1_writer_sink_sink_valid;
wire litepciedma1_writer_sink_sink_ready;
wire litepciedma1_writer_sink_sink_first;
wire litepciedma1_writer_sink_sink_last;
wire [127:0] litepciedma1_writer_sink_sink_payload_data;
wire litepciedma1_writer_irq;
reg litepciedma1_writer_enable_storage_full = 1'd0;
wire litepciedma1_writer_enable_storage;
reg litepciedma1_writer_enable_re = 1'd0;
reg litepciedma1_writer_allow_requests_storage_full = 1'd0;
wire litepciedma1_writer_allow_requests_storage;
reg litepciedma1_writer_allow_requests_re = 1'd0;
reg litepciedma1_writer_fifo_re = 1'd0;
reg litepciedma1_writer_fifo_readable = 1'd0;
wire litepciedma1_writer_fifo_syncfifo1_we;
wire litepciedma1_writer_fifo_syncfifo1_writable;
wire litepciedma1_writer_fifo_syncfifo1_re;
wire litepciedma1_writer_fifo_syncfifo1_readable;
wire [128:0] litepciedma1_writer_fifo_syncfifo1_din;
wire [128:0] litepciedma1_writer_fifo_syncfifo1_dout;
reg [7:0] litepciedma1_writer_fifo_level0 = 8'd0;
reg litepciedma1_writer_fifo_replace = 1'd0;
reg [6:0] litepciedma1_writer_fifo_produce = 7'd0;
reg [6:0] litepciedma1_writer_fifo_consume = 7'd0;
reg [6:0] litepciedma1_writer_fifo_wrport_adr = 7'd0;
wire [128:0] litepciedma1_writer_fifo_wrport_dat_r;
wire litepciedma1_writer_fifo_wrport_we;
wire [128:0] litepciedma1_writer_fifo_wrport_dat_w;
wire litepciedma1_writer_fifo_do_read;
wire [6:0] litepciedma1_writer_fifo_rdport_adr;
wire [128:0] litepciedma1_writer_fifo_rdport_dat_r;
wire litepciedma1_writer_fifo_rdport_re;
wire [7:0] litepciedma1_writer_fifo_level1;
wire litepciedma1_writer_resetinserter_reset0;
reg litepciedma1_writer_request_ready = 1'd0;
reg [12:0] litepciedma1_writer_counter = 13'd0;
reg litepciedma1_writer_counter_reset = 1'd0;
reg litepciedma1_writer_counter_ce = 1'd0;
wire litepciedma1_writer_table_source_source_valid;
wire litepciedma1_writer_table_source_source_ready;
wire litepciedma1_writer_table_source_source_first;
reg litepciedma1_writer_table_source_source_last = 1'd0;
wire [31:0] litepciedma1_writer_table_source_source_payload_address;
wire [23:0] litepciedma1_writer_table_source_source_payload_length;
wire [7:0] litepciedma1_writer_table_source_source_payload_control;
reg [63:0] litepciedma1_writer_table_value_storage_full = 64'd0;
wire [63:0] litepciedma1_writer_table_value_storage;
reg litepciedma1_writer_table_value_re = 1'd0;
wire litepciedma1_writer_table_we_re;
wire litepciedma1_writer_table_we_r;
reg litepciedma1_writer_table_we_w = 1'd0;
reg litepciedma1_writer_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma1_writer_table_loop_prog_n_storage;
reg litepciedma1_writer_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma1_writer_table_loop_status_status = 16'd0;
wire [7:0] litepciedma1_writer_table_level_status;
wire litepciedma1_writer_table_flush_re;
wire litepciedma1_writer_table_flush_r;
reg litepciedma1_writer_table_flush_w = 1'd0;
reg litepciedma1_writer_table_syncfifo1_sink_valid = 1'd0;
wire litepciedma1_writer_table_syncfifo1_sink_ready;
reg litepciedma1_writer_table_syncfifo1_sink_first = 1'd0;
reg litepciedma1_writer_table_syncfifo1_sink_last = 1'd0;
reg [31:0] litepciedma1_writer_table_syncfifo1_sink_payload_address = 32'd0;
reg [23:0] litepciedma1_writer_table_syncfifo1_sink_payload_length = 24'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_sink_payload_control = 8'd0;
wire litepciedma1_writer_table_syncfifo1_source_valid;
wire litepciedma1_writer_table_syncfifo1_source_ready;
wire litepciedma1_writer_table_syncfifo1_source_first;
wire litepciedma1_writer_table_syncfifo1_source_last;
wire [31:0] litepciedma1_writer_table_syncfifo1_source_payload_address;
wire [23:0] litepciedma1_writer_table_syncfifo1_source_payload_length;
wire [7:0] litepciedma1_writer_table_syncfifo1_source_payload_control;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_we;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_writable;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_re;
wire litepciedma1_writer_table_syncfifo1_syncfifo1_readable;
wire [65:0] litepciedma1_writer_table_syncfifo1_syncfifo1_din;
wire [65:0] litepciedma1_writer_table_syncfifo1_syncfifo1_dout;
reg [8:0] litepciedma1_writer_table_syncfifo1_level = 9'd0;
reg litepciedma1_writer_table_syncfifo1_replace = 1'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_produce = 8'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_consume = 8'd0;
reg [7:0] litepciedma1_writer_table_syncfifo1_wrport_adr = 8'd0;
wire [65:0] litepciedma1_writer_table_syncfifo1_wrport_dat_r;
wire litepciedma1_writer_table_syncfifo1_wrport_we;
wire [65:0] litepciedma1_writer_table_syncfifo1_wrport_dat_w;
wire litepciedma1_writer_table_syncfifo1_do_read;
wire [7:0] litepciedma1_writer_table_syncfifo1_rdport_adr;
wire [65:0] litepciedma1_writer_table_syncfifo1_rdport_dat_r;
wire [31:0] litepciedma1_writer_table_syncfifo1_fifo_in_payload_address;
wire [23:0] litepciedma1_writer_table_syncfifo1_fifo_in_payload_length;
wire [7:0] litepciedma1_writer_table_syncfifo1_fifo_in_payload_control;
wire litepciedma1_writer_table_syncfifo1_fifo_in_first;
wire litepciedma1_writer_table_syncfifo1_fifo_in_last;
wire [31:0] litepciedma1_writer_table_syncfifo1_fifo_out_payload_address;
wire [23:0] litepciedma1_writer_table_syncfifo1_fifo_out_payload_length;
wire [7:0] litepciedma1_writer_table_syncfifo1_fifo_out_payload_control;
wire litepciedma1_writer_table_syncfifo1_fifo_out_first;
wire litepciedma1_writer_table_syncfifo1_fifo_out_last;
wire litepciedma1_writer_table_reset;
reg [15:0] litepciedma1_writer_table_loop_index = 16'd1;
wire litepciedma1_writer_splitter_sink_valid;
reg litepciedma1_writer_splitter_sink_ready = 1'd0;
wire litepciedma1_writer_splitter_sink_first;
wire litepciedma1_writer_splitter_sink_last;
wire [31:0] litepciedma1_writer_splitter_sink_payload_address;
wire [23:0] litepciedma1_writer_splitter_sink_payload_length;
wire [7:0] litepciedma1_writer_splitter_sink_payload_control;
reg litepciedma1_writer_splitter_source_valid = 1'd0;
wire litepciedma1_writer_splitter_source_ready;
reg litepciedma1_writer_splitter_source_first = 1'd0;
reg litepciedma1_writer_splitter_source_last = 1'd0;
wire [31:0] litepciedma1_writer_splitter_source_payload_address;
reg [23:0] litepciedma1_writer_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma1_writer_splitter_source_payload_control;
wire [7:0] litepciedma1_writer_splitter_source_payload_user_id;
reg litepciedma1_writer_splitter_end = 1'd0;
reg [31:0] litepciedma1_writer_splitter_offset = 32'd0;
reg litepciedma1_writer_splitter_offset_reset = 1'd0;
reg litepciedma1_writer_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma1_writer_splitter_user_id = 32'd0;
wire litepciedma1_writer_splitter_user_id_ce;
reg [23:0] litepciedma1_writer_splitter_length = 24'd0;
reg litepciedma1_writer_splitter_length_update = 1'd0;
wire litepciedma1_writer_resetinserter_reset1;
wire litepciedma1_writer_bufferizeendpoints1_sink_valid;
wire litepciedma1_writer_bufferizeendpoints1_sink_ready;
wire litepciedma1_writer_bufferizeendpoints1_sink_first;
wire litepciedma1_writer_bufferizeendpoints1_sink_last;
wire [31:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_address;
wire [23:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_length;
wire [7:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_control;
wire [7:0] litepciedma1_writer_bufferizeendpoints1_sink_payload_user_id;
wire litepciedma1_writer_bufferizeendpoints1_source_valid;
reg litepciedma1_writer_bufferizeendpoints1_source_ready = 1'd0;
wire litepciedma1_writer_bufferizeendpoints1_source_first;
wire litepciedma1_writer_bufferizeendpoints1_source_last;
reg [31:0] litepciedma1_writer_bufferizeendpoints1_source_payload_address = 32'd0;
reg [23:0] litepciedma1_writer_bufferizeendpoints1_source_payload_length = 24'd0;
reg [7:0] litepciedma1_writer_bufferizeendpoints1_source_payload_control = 8'd0;
reg [7:0] litepciedma1_writer_bufferizeendpoints1_source_payload_user_id = 8'd0;
wire litepciedma1_writer_bufferizeendpoints1_pipe_ce;
wire litepciedma1_writer_bufferizeendpoints1_busy;
reg litepciedma1_writer_bufferizeendpoints1_valid_n = 1'd0;
reg litepciedma1_writer_bufferizeendpoints1_first_n = 1'd0;
reg litepciedma1_writer_bufferizeendpoints1_last_n = 1'd0;
(* DONT_TOUCH="TRUE" *)reg [15:0] litepciedma1_writer_status = 16'd0;
reg litepciedma1_litepciemasterinternalport3_sink_valid = 1'd0;
reg litepciedma1_litepciemasterinternalport3_sink_ready = 1'd0;
wire litepciedma1_litepciemasterinternalport3_sink_first;
wire litepciedma1_litepciemasterinternalport3_sink_last;
wire litepciedma1_litepciemasterinternalport3_sink_payload_we;
wire [31:0] litepciedma1_litepciemasterinternalport3_sink_payload_adr;
wire [9:0] litepciedma1_litepciemasterinternalport3_sink_payload_len;
wire [15:0] litepciedma1_litepciemasterinternalport3_sink_payload_req_id;
reg [7:0] litepciedma1_litepciemasterinternalport3_sink_payload_tag = 8'd0;
wire [127:0] litepciedma1_litepciemasterinternalport3_sink_payload_dat;
wire [7:0] litepciedma1_litepciemasterinternalport3_sink_payload_channel;
wire [7:0] litepciedma1_litepciemasterinternalport3_sink_payload_user_id;
reg litepciedma1_litepciemasterinternalport3_source_valid = 1'd0;
wire litepciedma1_litepciemasterinternalport3_source_ready;
reg litepciedma1_litepciemasterinternalport3_source_first = 1'd0;
reg litepciedma1_litepciemasterinternalport3_source_last = 1'd0;
reg [31:0] litepciedma1_litepciemasterinternalport3_source_payload_adr = 32'd0;
reg [9:0] litepciedma1_litepciemasterinternalport3_source_payload_len = 10'd0;
reg litepciedma1_litepciemasterinternalport3_source_payload_end = 1'd0;
reg [15:0] litepciedma1_litepciemasterinternalport3_source_payload_req_id = 16'd0;
reg [15:0] litepciedma1_litepciemasterinternalport3_source_payload_cmp_id = 16'd0;
reg litepciedma1_litepciemasterinternalport3_source_payload_err = 1'd0;
reg [7:0] litepciedma1_litepciemasterinternalport3_source_payload_tag = 8'd0;
reg [127:0] litepciedma1_litepciemasterinternalport3_source_payload_dat = 128'd0;
reg [7:0] litepciedma1_litepciemasterinternalport3_source_payload_channel = 8'd0;
reg [7:0] litepciedma1_litepciemasterinternalport3_source_payload_user_id = 8'd0;
wire litepciedma1_reader_source_source_valid;
wire litepciedma1_reader_source_source_ready;
wire litepciedma1_reader_source_source_first;
wire litepciedma1_reader_source_source_last;
wire [127:0] litepciedma1_reader_source_source_payload_data;
wire litepciedma1_reader_irq;
reg litepciedma1_reader_enable_storage_full = 1'd0;
wire litepciedma1_reader_enable_storage;
reg litepciedma1_reader_enable_re = 1'd0;
reg [15:0] litepciedma1_reader_packet_nr_storage_full = 16'd0;
wire [15:0] litepciedma1_reader_packet_nr_storage;
reg litepciedma1_reader_packet_nr_re = 1'd0;
(* DONT_TOUCH="TRUE" *)reg [15:0] litepciedma1_reader_status = 16'd0;
wire litepciedma1_reader_table_source_source_valid;
wire litepciedma1_reader_table_source_source_ready;
wire litepciedma1_reader_table_source_source_first;
reg litepciedma1_reader_table_source_source_last = 1'd0;
wire [31:0] litepciedma1_reader_table_source_source_payload_address;
wire [23:0] litepciedma1_reader_table_source_source_payload_length;
wire [7:0] litepciedma1_reader_table_source_source_payload_control;
reg [63:0] litepciedma1_reader_table_value_storage_full = 64'd0;
wire [63:0] litepciedma1_reader_table_value_storage;
reg litepciedma1_reader_table_value_re = 1'd0;
wire litepciedma1_reader_table_we_re;
wire litepciedma1_reader_table_we_r;
reg litepciedma1_reader_table_we_w = 1'd0;
reg litepciedma1_reader_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma1_reader_table_loop_prog_n_storage;
reg litepciedma1_reader_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma1_reader_table_loop_status_status = 16'd0;
wire [7:0] litepciedma1_reader_table_level_status;
wire litepciedma1_reader_table_flush_re;
wire litepciedma1_reader_table_flush_r;
reg litepciedma1_reader_table_flush_w = 1'd0;
reg litepciedma1_reader_table_syncfifo1_sink_valid = 1'd0;
wire litepciedma1_reader_table_syncfifo1_sink_ready;
reg litepciedma1_reader_table_syncfifo1_sink_first = 1'd0;
reg litepciedma1_reader_table_syncfifo1_sink_last = 1'd0;
reg [31:0] litepciedma1_reader_table_syncfifo1_sink_payload_address = 32'd0;
reg [23:0] litepciedma1_reader_table_syncfifo1_sink_payload_length = 24'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_sink_payload_control = 8'd0;
wire litepciedma1_reader_table_syncfifo1_source_valid;
wire litepciedma1_reader_table_syncfifo1_source_ready;
wire litepciedma1_reader_table_syncfifo1_source_first;
wire litepciedma1_reader_table_syncfifo1_source_last;
wire [31:0] litepciedma1_reader_table_syncfifo1_source_payload_address;
wire [23:0] litepciedma1_reader_table_syncfifo1_source_payload_length;
wire [7:0] litepciedma1_reader_table_syncfifo1_source_payload_control;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_we;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_writable;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_re;
wire litepciedma1_reader_table_syncfifo1_syncfifo1_readable;
wire [65:0] litepciedma1_reader_table_syncfifo1_syncfifo1_din;
wire [65:0] litepciedma1_reader_table_syncfifo1_syncfifo1_dout;
reg [8:0] litepciedma1_reader_table_syncfifo1_level = 9'd0;
reg litepciedma1_reader_table_syncfifo1_replace = 1'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_produce = 8'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_consume = 8'd0;
reg [7:0] litepciedma1_reader_table_syncfifo1_wrport_adr = 8'd0;
wire [65:0] litepciedma1_reader_table_syncfifo1_wrport_dat_r;
wire litepciedma1_reader_table_syncfifo1_wrport_we;
wire [65:0] litepciedma1_reader_table_syncfifo1_wrport_dat_w;
wire litepciedma1_reader_table_syncfifo1_do_read;
wire [7:0] litepciedma1_reader_table_syncfifo1_rdport_adr;
wire [65:0] litepciedma1_reader_table_syncfifo1_rdport_dat_r;
wire [31:0] litepciedma1_reader_table_syncfifo1_fifo_in_payload_address;
wire [23:0] litepciedma1_reader_table_syncfifo1_fifo_in_payload_length;
wire [7:0] litepciedma1_reader_table_syncfifo1_fifo_in_payload_control;
wire litepciedma1_reader_table_syncfifo1_fifo_in_first;
wire litepciedma1_reader_table_syncfifo1_fifo_in_last;
wire [31:0] litepciedma1_reader_table_syncfifo1_fifo_out_payload_address;
wire [23:0] litepciedma1_reader_table_syncfifo1_fifo_out_payload_length;
wire [7:0] litepciedma1_reader_table_syncfifo1_fifo_out_payload_control;
wire litepciedma1_reader_table_syncfifo1_fifo_out_first;
wire litepciedma1_reader_table_syncfifo1_fifo_out_last;
wire litepciedma1_reader_table_reset;
reg [15:0] litepciedma1_reader_table_loop_index = 16'd1;
wire litepciedma1_reader_splitter_sink_valid;
reg litepciedma1_reader_splitter_sink_ready = 1'd0;
wire litepciedma1_reader_splitter_sink_first;
wire litepciedma1_reader_splitter_sink_last;
wire [31:0] litepciedma1_reader_splitter_sink_payload_address;
wire [23:0] litepciedma1_reader_splitter_sink_payload_length;
wire [7:0] litepciedma1_reader_splitter_sink_payload_control;
reg litepciedma1_reader_splitter_source_valid = 1'd0;
wire litepciedma1_reader_splitter_source_ready;
reg litepciedma1_reader_splitter_source_first = 1'd0;
reg litepciedma1_reader_splitter_source_last = 1'd0;
wire [31:0] litepciedma1_reader_splitter_source_payload_address;
reg [23:0] litepciedma1_reader_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma1_reader_splitter_source_payload_control;
wire [7:0] litepciedma1_reader_splitter_source_payload_user_id;
reg litepciedma1_reader_splitter_end = 1'd0;
reg [31:0] litepciedma1_reader_splitter_offset = 32'd0;
reg litepciedma1_reader_splitter_offset_reset = 1'd0;
reg litepciedma1_reader_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma1_reader_splitter_user_id = 32'd0;
wire litepciedma1_reader_splitter_user_id_ce;
reg [23:0] litepciedma1_reader_splitter_length = 24'd0;
reg litepciedma1_reader_splitter_length_update = 1'd0;
wire litepciedma1_reader_resetinserter_reset0;
wire litepciedma1_reader_bufferizeendpoints1_sink_valid;
wire litepciedma1_reader_bufferizeendpoints1_sink_ready;
wire litepciedma1_reader_bufferizeendpoints1_sink_first;
wire litepciedma1_reader_bufferizeendpoints1_sink_last;
wire [31:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_address;
wire [23:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_length;
wire [7:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_control;
wire [7:0] litepciedma1_reader_bufferizeendpoints1_sink_payload_user_id;
wire litepciedma1_reader_bufferizeendpoints1_source_valid;
reg litepciedma1_reader_bufferizeendpoints1_source_ready = 1'd0;
wire litepciedma1_reader_bufferizeendpoints1_source_first;
wire litepciedma1_reader_bufferizeendpoints1_source_last;
reg [31:0] litepciedma1_reader_bufferizeendpoints1_source_payload_address = 32'd0;
reg [23:0] litepciedma1_reader_bufferizeendpoints1_source_payload_length = 24'd0;
reg [7:0] litepciedma1_reader_bufferizeendpoints1_source_payload_control = 8'd0;
reg [7:0] litepciedma1_reader_bufferizeendpoints1_source_payload_user_id = 8'd0;
wire litepciedma1_reader_bufferizeendpoints1_pipe_ce;
wire litepciedma1_reader_bufferizeendpoints1_busy;
reg litepciedma1_reader_bufferizeendpoints1_valid_n = 1'd0;
reg litepciedma1_reader_bufferizeendpoints1_first_n = 1'd0;
reg litepciedma1_reader_bufferizeendpoints1_last_n = 1'd0;
reg litepciedma1_reader_request_ready = 1'd0;
wire [7:0] litepciedma1_reader_requests_per_pckt;
reg [7:0] litepciedma1_reader_request_cnt = 8'd0;
reg [15:0] litepciedma1_reader_req_pck_cnt = 16'd0;
reg litepciedma1_reader_request_counted = 1'd1;
reg litepciedma1_reader_allow_request = 1'd0;
wire litepciedma1_reader_fifo_sink_valid;
wire litepciedma1_reader_fifo_sink_ready;
wire litepciedma1_reader_fifo_sink_first;
reg litepciedma1_reader_fifo_sink_last = 1'd0;
wire [127:0] litepciedma1_reader_fifo_sink_payload_data;
wire litepciedma1_reader_fifo_source_valid;
wire litepciedma1_reader_fifo_source_ready;
wire litepciedma1_reader_fifo_source_first;
wire litepciedma1_reader_fifo_source_last;
wire [127:0] litepciedma1_reader_fifo_source_payload_data;
wire litepciedma1_reader_fifo_re;
reg litepciedma1_reader_fifo_readable = 1'd0;
wire litepciedma1_reader_fifo_syncfifo1_we;
wire litepciedma1_reader_fifo_syncfifo1_writable;
wire litepciedma1_reader_fifo_syncfifo1_re;
wire litepciedma1_reader_fifo_syncfifo1_readable;
wire [129:0] litepciedma1_reader_fifo_syncfifo1_din;
wire [129:0] litepciedma1_reader_fifo_syncfifo1_dout;
reg [8:0] litepciedma1_reader_fifo_level0 = 9'd0;
reg litepciedma1_reader_fifo_replace = 1'd0;
reg [7:0] litepciedma1_reader_fifo_produce = 8'd0;
reg [7:0] litepciedma1_reader_fifo_consume = 8'd0;
reg [7:0] litepciedma1_reader_fifo_wrport_adr = 8'd0;
wire [129:0] litepciedma1_reader_fifo_wrport_dat_r;
wire litepciedma1_reader_fifo_wrport_we;
wire [129:0] litepciedma1_reader_fifo_wrport_dat_w;
wire litepciedma1_reader_fifo_do_read;
wire [7:0] litepciedma1_reader_fifo_rdport_adr;
wire [129:0] litepciedma1_reader_fifo_rdport_dat_r;
wire litepciedma1_reader_fifo_rdport_re;
wire [8:0] litepciedma1_reader_fifo_level1;
wire [127:0] litepciedma1_reader_fifo_fifo_in_payload_data;
wire litepciedma1_reader_fifo_fifo_in_first;
wire litepciedma1_reader_fifo_fifo_in_last;
wire [127:0] litepciedma1_reader_fifo_fifo_out_payload_data;
wire litepciedma1_reader_fifo_fifo_out_first;
wire litepciedma1_reader_fifo_fifo_out_last;
wire litepciedma1_reader_resetinserter_reset1;
reg [15:0] litepciedma1_reader_sent_pck_cnt = 16'd1;
reg [31:0] litepciedma1_reader_sent_cnt = 32'd0;
reg litepciedma1_reader_flush = 1'd0;
reg [15:0] litepciedma1_reader_flush_nr_storage_full = 16'd0;
wire [15:0] litepciedma1_reader_flush_nr_storage;
reg litepciedma1_reader_flush_nr_re = 1'd0;
reg [15:0] litepciedma1_reader_flush_nbytes_storage_full = 16'd0;
wire [15:0] litepciedma1_reader_flush_nbytes_storage;
reg litepciedma1_reader_flush_nbytes_re = 1'd0;
reg litepciedma1_reader_flush_nbytes_we = 1'd0;
reg [15:0] litepciedma1_reader_flush_nbytes_dat_w = 16'd0;
reg [7:0] litepciedma1_reader_last_user_id = 8'd255;
reg [63:0] litepciedma1_reader_sent_dbg = 64'd0;
reg litepciedma1_reader_bad_fifo_write = 1'd0;
wire [13:0] litepciedma1_reader_fifo_level_status;
wire [13:0] litepciedma1_writer_fifo_level_status;
wire litepciedma1_syncfifo2_sink_valid;
wire litepciedma1_syncfifo2_sink_ready;
wire litepciedma1_syncfifo2_sink_first;
wire litepciedma1_syncfifo2_sink_last;
wire [127:0] litepciedma1_syncfifo2_sink_payload_data;
wire litepciedma1_syncfifo2_source_valid;
wire litepciedma1_syncfifo2_source_ready;
wire litepciedma1_syncfifo2_source_first;
wire litepciedma1_syncfifo2_source_last;
wire [127:0] litepciedma1_syncfifo2_source_payload_data;
wire litepciedma1_syncfifo2_re;
reg litepciedma1_syncfifo2_readable = 1'd0;
wire litepciedma1_syncfifo2_syncfifo2_we;
wire litepciedma1_syncfifo2_syncfifo2_writable;
wire litepciedma1_syncfifo2_syncfifo2_re;
wire litepciedma1_syncfifo2_syncfifo2_readable;
wire [129:0] litepciedma1_syncfifo2_syncfifo2_din;
wire [129:0] litepciedma1_syncfifo2_syncfifo2_dout;
reg [9:0] litepciedma1_syncfifo2_level0 = 10'd0;
reg litepciedma1_syncfifo2_replace = 1'd0;
reg [9:0] litepciedma1_syncfifo2_produce = 10'd0;
reg [9:0] litepciedma1_syncfifo2_consume = 10'd0;
reg [9:0] litepciedma1_syncfifo2_wrport_adr = 10'd0;
wire [129:0] litepciedma1_syncfifo2_wrport_dat_r;
wire litepciedma1_syncfifo2_wrport_we;
wire [129:0] litepciedma1_syncfifo2_wrport_dat_w;
wire litepciedma1_syncfifo2_do_read;
wire [9:0] litepciedma1_syncfifo2_rdport_adr;
wire [129:0] litepciedma1_syncfifo2_rdport_dat_r;
wire litepciedma1_syncfifo2_rdport_re;
wire [9:0] litepciedma1_syncfifo2_level1;
wire [127:0] litepciedma1_syncfifo2_fifo_in_payload_data;
wire litepciedma1_syncfifo2_fifo_in_first;
wire litepciedma1_syncfifo2_fifo_in_last;
wire [127:0] litepciedma1_syncfifo2_fifo_out_payload_data;
wire litepciedma1_syncfifo2_fifo_out_first;
wire litepciedma1_syncfifo2_fifo_out_last;
wire litepciedma1_reader_fifo_reset;
wire litepciedma1_syncfifo3_sink_valid;
wire litepciedma1_syncfifo3_sink_ready;
reg litepciedma1_syncfifo3_sink_first = 1'd0;
wire litepciedma1_syncfifo3_sink_last;
wire [127:0] litepciedma1_syncfifo3_sink_payload_data;
wire litepciedma1_syncfifo3_source_valid;
wire litepciedma1_syncfifo3_source_ready;
wire litepciedma1_syncfifo3_source_first;
wire litepciedma1_syncfifo3_source_last;
wire [127:0] litepciedma1_syncfifo3_source_payload_data;
wire litepciedma1_syncfifo3_re;
reg litepciedma1_syncfifo3_readable = 1'd0;
wire litepciedma1_syncfifo3_syncfifo3_we;
wire litepciedma1_syncfifo3_syncfifo3_writable;
wire litepciedma1_syncfifo3_syncfifo3_re;
wire litepciedma1_syncfifo3_syncfifo3_readable;
wire [129:0] litepciedma1_syncfifo3_syncfifo3_din;
wire [129:0] litepciedma1_syncfifo3_syncfifo3_dout;
reg [9:0] litepciedma1_syncfifo3_level0 = 10'd0;
reg litepciedma1_syncfifo3_replace = 1'd0;
reg [9:0] litepciedma1_syncfifo3_produce = 10'd0;
reg [9:0] litepciedma1_syncfifo3_consume = 10'd0;
reg [9:0] litepciedma1_syncfifo3_wrport_adr = 10'd0;
wire [129:0] litepciedma1_syncfifo3_wrport_dat_r;
wire litepciedma1_syncfifo3_wrport_we;
wire [129:0] litepciedma1_syncfifo3_wrport_dat_w;
wire litepciedma1_syncfifo3_do_read;
wire [9:0] litepciedma1_syncfifo3_rdport_adr;
wire [129:0] litepciedma1_syncfifo3_rdport_dat_r;
wire litepciedma1_syncfifo3_rdport_re;
wire [9:0] litepciedma1_syncfifo3_level1;
wire [127:0] litepciedma1_syncfifo3_fifo_in_payload_data;
wire litepciedma1_syncfifo3_fifo_in_first;
wire litepciedma1_syncfifo3_fifo_in_last;
wire [127:0] litepciedma1_syncfifo3_fifo_out_payload_data;
wire litepciedma1_syncfifo3_fifo_out_first;
wire litepciedma1_syncfifo3_fifo_out_last;
wire litepciedma1_writer_fifo_reset;
wire litepciedma1_next_source_source_valid;
wire litepciedma1_next_source_source_ready;
wire litepciedma1_next_source_source_last;
wire [127:0] litepciedma1_next_source_source_payload_data;
reg litepciedma2_litepciemasterinternalport4_sink_valid = 1'd0;
reg litepciedma2_litepciemasterinternalport4_sink_ready = 1'd0;
wire litepciedma2_litepciemasterinternalport4_sink_first;
wire litepciedma2_litepciemasterinternalport4_sink_last;
wire litepciedma2_litepciemasterinternalport4_sink_payload_we;
wire [31:0] litepciedma2_litepciemasterinternalport4_sink_payload_adr;
wire [9:0] litepciedma2_litepciemasterinternalport4_sink_payload_len;
wire [15:0] litepciedma2_litepciemasterinternalport4_sink_payload_req_id;
wire [7:0] litepciedma2_litepciemasterinternalport4_sink_payload_tag;
wire [127:0] litepciedma2_litepciemasterinternalport4_sink_payload_dat;
wire [7:0] litepciedma2_litepciemasterinternalport4_sink_payload_channel;
wire [7:0] litepciedma2_litepciemasterinternalport4_sink_payload_user_id;
reg litepciedma2_litepciemasterinternalport4_source_valid = 1'd0;
reg litepciedma2_litepciemasterinternalport4_source_ready = 1'd0;
reg litepciedma2_litepciemasterinternalport4_source_first = 1'd0;
reg litepciedma2_litepciemasterinternalport4_source_last = 1'd0;
reg [31:0] litepciedma2_litepciemasterinternalport4_source_payload_adr = 32'd0;
reg [9:0] litepciedma2_litepciemasterinternalport4_source_payload_len = 10'd0;
reg litepciedma2_litepciemasterinternalport4_source_payload_end = 1'd0;
reg [15:0] litepciedma2_litepciemasterinternalport4_source_payload_req_id = 16'd0;
reg [15:0] litepciedma2_litepciemasterinternalport4_source_payload_cmp_id = 16'd0;
reg litepciedma2_litepciemasterinternalport4_source_payload_err = 1'd0;
reg [7:0] litepciedma2_litepciemasterinternalport4_source_payload_tag = 8'd0;
reg [127:0] litepciedma2_litepciemasterinternalport4_source_payload_dat = 128'd0;
reg [7:0] litepciedma2_litepciemasterinternalport4_source_payload_channel = 8'd0;
reg [7:0] litepciedma2_litepciemasterinternalport4_source_payload_user_id = 8'd0;
wire litepciedma2_writer_sink_sink_valid;
wire litepciedma2_writer_sink_sink_ready;
wire litepciedma2_writer_sink_sink_first;
wire litepciedma2_writer_sink_sink_last;
wire [127:0] litepciedma2_writer_sink_sink_payload_data;
wire litepciedma2_writer_irq;
reg litepciedma2_writer_enable_storage_full = 1'd0;
wire litepciedma2_writer_enable_storage;
reg litepciedma2_writer_enable_re = 1'd0;
reg litepciedma2_writer_allow_requests_storage_full = 1'd0;
wire litepciedma2_writer_allow_requests_storage;
reg litepciedma2_writer_allow_requests_re = 1'd0;
reg litepciedma2_writer_fifo_re = 1'd0;
reg litepciedma2_writer_fifo_readable = 1'd0;
wire litepciedma2_writer_fifo_syncfifo2_we;
wire litepciedma2_writer_fifo_syncfifo2_writable;
wire litepciedma2_writer_fifo_syncfifo2_re;
wire litepciedma2_writer_fifo_syncfifo2_readable;
wire [128:0] litepciedma2_writer_fifo_syncfifo2_din;
wire [128:0] litepciedma2_writer_fifo_syncfifo2_dout;
reg [7:0] litepciedma2_writer_fifo_level0 = 8'd0;
reg litepciedma2_writer_fifo_replace = 1'd0;
reg [6:0] litepciedma2_writer_fifo_produce = 7'd0;
reg [6:0] litepciedma2_writer_fifo_consume = 7'd0;
reg [6:0] litepciedma2_writer_fifo_wrport_adr = 7'd0;
wire [128:0] litepciedma2_writer_fifo_wrport_dat_r;
wire litepciedma2_writer_fifo_wrport_we;
wire [128:0] litepciedma2_writer_fifo_wrport_dat_w;
wire litepciedma2_writer_fifo_do_read;
wire [6:0] litepciedma2_writer_fifo_rdport_adr;
wire [128:0] litepciedma2_writer_fifo_rdport_dat_r;
wire litepciedma2_writer_fifo_rdport_re;
wire [7:0] litepciedma2_writer_fifo_level1;
wire litepciedma2_writer_resetinserter_reset0;
reg litepciedma2_writer_request_ready = 1'd0;
reg [12:0] litepciedma2_writer_counter = 13'd0;
reg litepciedma2_writer_counter_reset = 1'd0;
reg litepciedma2_writer_counter_ce = 1'd0;
wire litepciedma2_writer_table_source_source_valid;
wire litepciedma2_writer_table_source_source_ready;
wire litepciedma2_writer_table_source_source_first;
reg litepciedma2_writer_table_source_source_last = 1'd0;
wire [31:0] litepciedma2_writer_table_source_source_payload_address;
wire [23:0] litepciedma2_writer_table_source_source_payload_length;
wire [7:0] litepciedma2_writer_table_source_source_payload_control;
reg [63:0] litepciedma2_writer_table_value_storage_full = 64'd0;
wire [63:0] litepciedma2_writer_table_value_storage;
reg litepciedma2_writer_table_value_re = 1'd0;
wire litepciedma2_writer_table_we_re;
wire litepciedma2_writer_table_we_r;
reg litepciedma2_writer_table_we_w = 1'd0;
reg litepciedma2_writer_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma2_writer_table_loop_prog_n_storage;
reg litepciedma2_writer_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma2_writer_table_loop_status_status = 16'd0;
wire [7:0] litepciedma2_writer_table_level_status;
wire litepciedma2_writer_table_flush_re;
wire litepciedma2_writer_table_flush_r;
reg litepciedma2_writer_table_flush_w = 1'd0;
reg litepciedma2_writer_table_syncfifo2_sink_valid = 1'd0;
wire litepciedma2_writer_table_syncfifo2_sink_ready;
reg litepciedma2_writer_table_syncfifo2_sink_first = 1'd0;
reg litepciedma2_writer_table_syncfifo2_sink_last = 1'd0;
reg [31:0] litepciedma2_writer_table_syncfifo2_sink_payload_address = 32'd0;
reg [23:0] litepciedma2_writer_table_syncfifo2_sink_payload_length = 24'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_sink_payload_control = 8'd0;
wire litepciedma2_writer_table_syncfifo2_source_valid;
wire litepciedma2_writer_table_syncfifo2_source_ready;
wire litepciedma2_writer_table_syncfifo2_source_first;
wire litepciedma2_writer_table_syncfifo2_source_last;
wire [31:0] litepciedma2_writer_table_syncfifo2_source_payload_address;
wire [23:0] litepciedma2_writer_table_syncfifo2_source_payload_length;
wire [7:0] litepciedma2_writer_table_syncfifo2_source_payload_control;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_we;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_writable;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_re;
wire litepciedma2_writer_table_syncfifo2_syncfifo2_readable;
wire [65:0] litepciedma2_writer_table_syncfifo2_syncfifo2_din;
wire [65:0] litepciedma2_writer_table_syncfifo2_syncfifo2_dout;
reg [8:0] litepciedma2_writer_table_syncfifo2_level = 9'd0;
reg litepciedma2_writer_table_syncfifo2_replace = 1'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_produce = 8'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_consume = 8'd0;
reg [7:0] litepciedma2_writer_table_syncfifo2_wrport_adr = 8'd0;
wire [65:0] litepciedma2_writer_table_syncfifo2_wrport_dat_r;
wire litepciedma2_writer_table_syncfifo2_wrport_we;
wire [65:0] litepciedma2_writer_table_syncfifo2_wrport_dat_w;
wire litepciedma2_writer_table_syncfifo2_do_read;
wire [7:0] litepciedma2_writer_table_syncfifo2_rdport_adr;
wire [65:0] litepciedma2_writer_table_syncfifo2_rdport_dat_r;
wire [31:0] litepciedma2_writer_table_syncfifo2_fifo_in_payload_address;
wire [23:0] litepciedma2_writer_table_syncfifo2_fifo_in_payload_length;
wire [7:0] litepciedma2_writer_table_syncfifo2_fifo_in_payload_control;
wire litepciedma2_writer_table_syncfifo2_fifo_in_first;
wire litepciedma2_writer_table_syncfifo2_fifo_in_last;
wire [31:0] litepciedma2_writer_table_syncfifo2_fifo_out_payload_address;
wire [23:0] litepciedma2_writer_table_syncfifo2_fifo_out_payload_length;
wire [7:0] litepciedma2_writer_table_syncfifo2_fifo_out_payload_control;
wire litepciedma2_writer_table_syncfifo2_fifo_out_first;
wire litepciedma2_writer_table_syncfifo2_fifo_out_last;
wire litepciedma2_writer_table_reset;
reg [15:0] litepciedma2_writer_table_loop_index = 16'd1;
wire litepciedma2_writer_splitter_sink_valid;
reg litepciedma2_writer_splitter_sink_ready = 1'd0;
wire litepciedma2_writer_splitter_sink_first;
wire litepciedma2_writer_splitter_sink_last;
wire [31:0] litepciedma2_writer_splitter_sink_payload_address;
wire [23:0] litepciedma2_writer_splitter_sink_payload_length;
wire [7:0] litepciedma2_writer_splitter_sink_payload_control;
reg litepciedma2_writer_splitter_source_valid = 1'd0;
wire litepciedma2_writer_splitter_source_ready;
reg litepciedma2_writer_splitter_source_first = 1'd0;
reg litepciedma2_writer_splitter_source_last = 1'd0;
wire [31:0] litepciedma2_writer_splitter_source_payload_address;
reg [23:0] litepciedma2_writer_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma2_writer_splitter_source_payload_control;
wire [7:0] litepciedma2_writer_splitter_source_payload_user_id;
reg litepciedma2_writer_splitter_end = 1'd0;
reg [31:0] litepciedma2_writer_splitter_offset = 32'd0;
reg litepciedma2_writer_splitter_offset_reset = 1'd0;
reg litepciedma2_writer_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma2_writer_splitter_user_id = 32'd0;
wire litepciedma2_writer_splitter_user_id_ce;
reg [23:0] litepciedma2_writer_splitter_length = 24'd0;
reg litepciedma2_writer_splitter_length_update = 1'd0;
wire litepciedma2_writer_resetinserter_reset1;
wire litepciedma2_writer_bufferizeendpoints2_sink_valid;
wire litepciedma2_writer_bufferizeendpoints2_sink_ready;
wire litepciedma2_writer_bufferizeendpoints2_sink_first;
wire litepciedma2_writer_bufferizeendpoints2_sink_last;
wire [31:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_address;
wire [23:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_length;
wire [7:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_control;
wire [7:0] litepciedma2_writer_bufferizeendpoints2_sink_payload_user_id;
wire litepciedma2_writer_bufferizeendpoints2_source_valid;
reg litepciedma2_writer_bufferizeendpoints2_source_ready = 1'd0;
wire litepciedma2_writer_bufferizeendpoints2_source_first;
wire litepciedma2_writer_bufferizeendpoints2_source_last;
reg [31:0] litepciedma2_writer_bufferizeendpoints2_source_payload_address = 32'd0;
reg [23:0] litepciedma2_writer_bufferizeendpoints2_source_payload_length = 24'd0;
reg [7:0] litepciedma2_writer_bufferizeendpoints2_source_payload_control = 8'd0;
reg [7:0] litepciedma2_writer_bufferizeendpoints2_source_payload_user_id = 8'd0;
wire litepciedma2_writer_bufferizeendpoints2_pipe_ce;
wire litepciedma2_writer_bufferizeendpoints2_busy;
reg litepciedma2_writer_bufferizeendpoints2_valid_n = 1'd0;
reg litepciedma2_writer_bufferizeendpoints2_first_n = 1'd0;
reg litepciedma2_writer_bufferizeendpoints2_last_n = 1'd0;
(* DONT_TOUCH="TRUE" *)reg [15:0] litepciedma2_writer_status = 16'd0;
reg litepciedma2_litepciemasterinternalport5_sink_valid = 1'd0;
reg litepciedma2_litepciemasterinternalport5_sink_ready = 1'd0;
wire litepciedma2_litepciemasterinternalport5_sink_first;
wire litepciedma2_litepciemasterinternalport5_sink_last;
wire litepciedma2_litepciemasterinternalport5_sink_payload_we;
wire [31:0] litepciedma2_litepciemasterinternalport5_sink_payload_adr;
wire [9:0] litepciedma2_litepciemasterinternalport5_sink_payload_len;
wire [15:0] litepciedma2_litepciemasterinternalport5_sink_payload_req_id;
reg [7:0] litepciedma2_litepciemasterinternalport5_sink_payload_tag = 8'd0;
wire [127:0] litepciedma2_litepciemasterinternalport5_sink_payload_dat;
wire [7:0] litepciedma2_litepciemasterinternalport5_sink_payload_channel;
wire [7:0] litepciedma2_litepciemasterinternalport5_sink_payload_user_id;
reg litepciedma2_litepciemasterinternalport5_source_valid = 1'd0;
wire litepciedma2_litepciemasterinternalport5_source_ready;
reg litepciedma2_litepciemasterinternalport5_source_first = 1'd0;
reg litepciedma2_litepciemasterinternalport5_source_last = 1'd0;
reg [31:0] litepciedma2_litepciemasterinternalport5_source_payload_adr = 32'd0;
reg [9:0] litepciedma2_litepciemasterinternalport5_source_payload_len = 10'd0;
reg litepciedma2_litepciemasterinternalport5_source_payload_end = 1'd0;
reg [15:0] litepciedma2_litepciemasterinternalport5_source_payload_req_id = 16'd0;
reg [15:0] litepciedma2_litepciemasterinternalport5_source_payload_cmp_id = 16'd0;
reg litepciedma2_litepciemasterinternalport5_source_payload_err = 1'd0;
reg [7:0] litepciedma2_litepciemasterinternalport5_source_payload_tag = 8'd0;
reg [127:0] litepciedma2_litepciemasterinternalport5_source_payload_dat = 128'd0;
reg [7:0] litepciedma2_litepciemasterinternalport5_source_payload_channel = 8'd0;
reg [7:0] litepciedma2_litepciemasterinternalport5_source_payload_user_id = 8'd0;
wire litepciedma2_reader_source_source_valid;
wire litepciedma2_reader_source_source_ready;
wire litepciedma2_reader_source_source_first;
wire litepciedma2_reader_source_source_last;
wire [127:0] litepciedma2_reader_source_source_payload_data;
wire litepciedma2_reader_irq;
reg litepciedma2_reader_enable_storage_full = 1'd0;
wire litepciedma2_reader_enable_storage;
reg litepciedma2_reader_enable_re = 1'd0;
reg [15:0] litepciedma2_reader_packet_nr_storage_full = 16'd0;
wire [15:0] litepciedma2_reader_packet_nr_storage;
reg litepciedma2_reader_packet_nr_re = 1'd0;
(* DONT_TOUCH="TRUE" *)reg [15:0] litepciedma2_reader_status = 16'd0;
wire litepciedma2_reader_table_source_source_valid;
wire litepciedma2_reader_table_source_source_ready;
wire litepciedma2_reader_table_source_source_first;
reg litepciedma2_reader_table_source_source_last = 1'd0;
wire [31:0] litepciedma2_reader_table_source_source_payload_address;
wire [23:0] litepciedma2_reader_table_source_source_payload_length;
wire [7:0] litepciedma2_reader_table_source_source_payload_control;
reg [63:0] litepciedma2_reader_table_value_storage_full = 64'd0;
wire [63:0] litepciedma2_reader_table_value_storage;
reg litepciedma2_reader_table_value_re = 1'd0;
wire litepciedma2_reader_table_we_re;
wire litepciedma2_reader_table_we_r;
reg litepciedma2_reader_table_we_w = 1'd0;
reg litepciedma2_reader_table_loop_prog_n_storage_full = 1'd0;
wire litepciedma2_reader_table_loop_prog_n_storage;
reg litepciedma2_reader_table_loop_prog_n_re = 1'd0;
reg [15:0] litepciedma2_reader_table_loop_status_status = 16'd0;
wire [7:0] litepciedma2_reader_table_level_status;
wire litepciedma2_reader_table_flush_re;
wire litepciedma2_reader_table_flush_r;
reg litepciedma2_reader_table_flush_w = 1'd0;
reg litepciedma2_reader_table_syncfifo2_sink_valid = 1'd0;
wire litepciedma2_reader_table_syncfifo2_sink_ready;
reg litepciedma2_reader_table_syncfifo2_sink_first = 1'd0;
reg litepciedma2_reader_table_syncfifo2_sink_last = 1'd0;
reg [31:0] litepciedma2_reader_table_syncfifo2_sink_payload_address = 32'd0;
reg [23:0] litepciedma2_reader_table_syncfifo2_sink_payload_length = 24'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_sink_payload_control = 8'd0;
wire litepciedma2_reader_table_syncfifo2_source_valid;
wire litepciedma2_reader_table_syncfifo2_source_ready;
wire litepciedma2_reader_table_syncfifo2_source_first;
wire litepciedma2_reader_table_syncfifo2_source_last;
wire [31:0] litepciedma2_reader_table_syncfifo2_source_payload_address;
wire [23:0] litepciedma2_reader_table_syncfifo2_source_payload_length;
wire [7:0] litepciedma2_reader_table_syncfifo2_source_payload_control;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_we;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_writable;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_re;
wire litepciedma2_reader_table_syncfifo2_syncfifo2_readable;
wire [65:0] litepciedma2_reader_table_syncfifo2_syncfifo2_din;
wire [65:0] litepciedma2_reader_table_syncfifo2_syncfifo2_dout;
reg [8:0] litepciedma2_reader_table_syncfifo2_level = 9'd0;
reg litepciedma2_reader_table_syncfifo2_replace = 1'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_produce = 8'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_consume = 8'd0;
reg [7:0] litepciedma2_reader_table_syncfifo2_wrport_adr = 8'd0;
wire [65:0] litepciedma2_reader_table_syncfifo2_wrport_dat_r;
wire litepciedma2_reader_table_syncfifo2_wrport_we;
wire [65:0] litepciedma2_reader_table_syncfifo2_wrport_dat_w;
wire litepciedma2_reader_table_syncfifo2_do_read;
wire [7:0] litepciedma2_reader_table_syncfifo2_rdport_adr;
wire [65:0] litepciedma2_reader_table_syncfifo2_rdport_dat_r;
wire [31:0] litepciedma2_reader_table_syncfifo2_fifo_in_payload_address;
wire [23:0] litepciedma2_reader_table_syncfifo2_fifo_in_payload_length;
wire [7:0] litepciedma2_reader_table_syncfifo2_fifo_in_payload_control;
wire litepciedma2_reader_table_syncfifo2_fifo_in_first;
wire litepciedma2_reader_table_syncfifo2_fifo_in_last;
wire [31:0] litepciedma2_reader_table_syncfifo2_fifo_out_payload_address;
wire [23:0] litepciedma2_reader_table_syncfifo2_fifo_out_payload_length;
wire [7:0] litepciedma2_reader_table_syncfifo2_fifo_out_payload_control;
wire litepciedma2_reader_table_syncfifo2_fifo_out_first;
wire litepciedma2_reader_table_syncfifo2_fifo_out_last;
wire litepciedma2_reader_table_reset;
reg [15:0] litepciedma2_reader_table_loop_index = 16'd1;
wire litepciedma2_reader_splitter_sink_valid;
reg litepciedma2_reader_splitter_sink_ready = 1'd0;
wire litepciedma2_reader_splitter_sink_first;
wire litepciedma2_reader_splitter_sink_last;
wire [31:0] litepciedma2_reader_splitter_sink_payload_address;
wire [23:0] litepciedma2_reader_splitter_sink_payload_length;
wire [7:0] litepciedma2_reader_splitter_sink_payload_control;
reg litepciedma2_reader_splitter_source_valid = 1'd0;
wire litepciedma2_reader_splitter_source_ready;
reg litepciedma2_reader_splitter_source_first = 1'd0;
reg litepciedma2_reader_splitter_source_last = 1'd0;
wire [31:0] litepciedma2_reader_splitter_source_payload_address;
reg [23:0] litepciedma2_reader_splitter_source_payload_length = 24'd0;
wire [7:0] litepciedma2_reader_splitter_source_payload_control;
wire [7:0] litepciedma2_reader_splitter_source_payload_user_id;
reg litepciedma2_reader_splitter_end = 1'd0;
reg [31:0] litepciedma2_reader_splitter_offset = 32'd0;
reg litepciedma2_reader_splitter_offset_reset = 1'd0;
reg litepciedma2_reader_splitter_offset_ce = 1'd0;
reg [31:0] litepciedma2_reader_splitter_user_id = 32'd0;
wire litepciedma2_reader_splitter_user_id_ce;
reg [23:0] litepciedma2_reader_splitter_length = 24'd0;
reg litepciedma2_reader_splitter_length_update = 1'd0;
wire litepciedma2_reader_resetinserter_reset0;
wire litepciedma2_reader_bufferizeendpoints2_sink_valid;
wire litepciedma2_reader_bufferizeendpoints2_sink_ready;
wire litepciedma2_reader_bufferizeendpoints2_sink_first;
wire litepciedma2_reader_bufferizeendpoints2_sink_last;
wire [31:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_address;
wire [23:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_length;
wire [7:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_control;
wire [7:0] litepciedma2_reader_bufferizeendpoints2_sink_payload_user_id;
wire litepciedma2_reader_bufferizeendpoints2_source_valid;
reg litepciedma2_reader_bufferizeendpoints2_source_ready = 1'd0;
wire litepciedma2_reader_bufferizeendpoints2_source_first;
wire litepciedma2_reader_bufferizeendpoints2_source_last;
reg [31:0] litepciedma2_reader_bufferizeendpoints2_source_payload_address = 32'd0;
reg [23:0] litepciedma2_reader_bufferizeendpoints2_source_payload_length = 24'd0;
reg [7:0] litepciedma2_reader_bufferizeendpoints2_source_payload_control = 8'd0;
reg [7:0] litepciedma2_reader_bufferizeendpoints2_source_payload_user_id = 8'd0;
wire litepciedma2_reader_bufferizeendpoints2_pipe_ce;
wire litepciedma2_reader_bufferizeendpoints2_busy;
reg litepciedma2_reader_bufferizeendpoints2_valid_n = 1'd0;
reg litepciedma2_reader_bufferizeendpoints2_first_n = 1'd0;
reg litepciedma2_reader_bufferizeendpoints2_last_n = 1'd0;
reg litepciedma2_reader_request_ready = 1'd0;
wire [7:0] litepciedma2_reader_requests_per_pckt;
reg [7:0] litepciedma2_reader_request_cnt = 8'd0;
reg [15:0] litepciedma2_reader_req_pck_cnt = 16'd0;
reg litepciedma2_reader_request_counted = 1'd1;
reg litepciedma2_reader_allow_request = 1'd0;
wire litepciedma2_reader_fifo_sink_valid;
wire litepciedma2_reader_fifo_sink_ready;
wire litepciedma2_reader_fifo_sink_first;
reg litepciedma2_reader_fifo_sink_last = 1'd0;
wire [127:0] litepciedma2_reader_fifo_sink_payload_data;
wire litepciedma2_reader_fifo_source_valid;
wire litepciedma2_reader_fifo_source_ready;
wire litepciedma2_reader_fifo_source_first;
wire litepciedma2_reader_fifo_source_last;
wire [127:0] litepciedma2_reader_fifo_source_payload_data;
wire litepciedma2_reader_fifo_re;
reg litepciedma2_reader_fifo_readable = 1'd0;
wire litepciedma2_reader_fifo_syncfifo2_we;
wire litepciedma2_reader_fifo_syncfifo2_writable;
wire litepciedma2_reader_fifo_syncfifo2_re;
wire litepciedma2_reader_fifo_syncfifo2_readable;
wire [129:0] litepciedma2_reader_fifo_syncfifo2_din;
wire [129:0] litepciedma2_reader_fifo_syncfifo2_dout;
reg [8:0] litepciedma2_reader_fifo_level0 = 9'd0;
reg litepciedma2_reader_fifo_replace = 1'd0;
reg [7:0] litepciedma2_reader_fifo_produce = 8'd0;
reg [7:0] litepciedma2_reader_fifo_consume = 8'd0;
reg [7:0] litepciedma2_reader_fifo_wrport_adr = 8'd0;
wire [129:0] litepciedma2_reader_fifo_wrport_dat_r;
wire litepciedma2_reader_fifo_wrport_we;
wire [129:0] litepciedma2_reader_fifo_wrport_dat_w;
wire litepciedma2_reader_fifo_do_read;
wire [7:0] litepciedma2_reader_fifo_rdport_adr;
wire [129:0] litepciedma2_reader_fifo_rdport_dat_r;
wire litepciedma2_reader_fifo_rdport_re;
wire [8:0] litepciedma2_reader_fifo_level1;
wire [127:0] litepciedma2_reader_fifo_fifo_in_payload_data;
wire litepciedma2_reader_fifo_fifo_in_first;
wire litepciedma2_reader_fifo_fifo_in_last;
wire [127:0] litepciedma2_reader_fifo_fifo_out_payload_data;
wire litepciedma2_reader_fifo_fifo_out_first;
wire litepciedma2_reader_fifo_fifo_out_last;
wire litepciedma2_reader_resetinserter_reset1;
reg [15:0] litepciedma2_reader_sent_pck_cnt = 16'd1;
reg [31:0] litepciedma2_reader_sent_cnt = 32'd0;
reg litepciedma2_reader_flush = 1'd0;
reg [15:0] litepciedma2_reader_flush_nr_storage_full = 16'd0;
wire [15:0] litepciedma2_reader_flush_nr_storage;
reg litepciedma2_reader_flush_nr_re = 1'd0;
reg [15:0] litepciedma2_reader_flush_nbytes_storage_full = 16'd0;
wire [15:0] litepciedma2_reader_flush_nbytes_storage;
reg litepciedma2_reader_flush_nbytes_re = 1'd0;
reg litepciedma2_reader_flush_nbytes_we = 1'd0;
reg [15:0] litepciedma2_reader_flush_nbytes_dat_w = 16'd0;
reg [7:0] litepciedma2_reader_last_user_id = 8'd255;
reg [63:0] litepciedma2_reader_sent_dbg = 64'd0;
reg litepciedma2_reader_bad_fifo_write = 1'd0;
wire [13:0] litepciedma2_reader_fifo_level_status;
wire [13:0] litepciedma2_writer_fifo_level_status;
wire litepciedma2_syncfifo4_sink_valid;
wire litepciedma2_syncfifo4_sink_ready;
wire litepciedma2_syncfifo4_sink_first;
wire litepciedma2_syncfifo4_sink_last;
wire [127:0] litepciedma2_syncfifo4_sink_payload_data;
wire litepciedma2_syncfifo4_source_valid;
wire litepciedma2_syncfifo4_source_ready;
wire litepciedma2_syncfifo4_source_first;
wire litepciedma2_syncfifo4_source_last;
wire [127:0] litepciedma2_syncfifo4_source_payload_data;
wire litepciedma2_syncfifo4_re;
reg litepciedma2_syncfifo4_readable = 1'd0;
wire litepciedma2_syncfifo4_syncfifo4_we;
wire litepciedma2_syncfifo4_syncfifo4_writable;
wire litepciedma2_syncfifo4_syncfifo4_re;
wire litepciedma2_syncfifo4_syncfifo4_readable;
wire [129:0] litepciedma2_syncfifo4_syncfifo4_din;
wire [129:0] litepciedma2_syncfifo4_syncfifo4_dout;
reg [9:0] litepciedma2_syncfifo4_level0 = 10'd0;
reg litepciedma2_syncfifo4_replace = 1'd0;
reg [9:0] litepciedma2_syncfifo4_produce = 10'd0;
reg [9:0] litepciedma2_syncfifo4_consume = 10'd0;
reg [9:0] litepciedma2_syncfifo4_wrport_adr = 10'd0;
wire [129:0] litepciedma2_syncfifo4_wrport_dat_r;
wire litepciedma2_syncfifo4_wrport_we;
wire [129:0] litepciedma2_syncfifo4_wrport_dat_w;
wire litepciedma2_syncfifo4_do_read;
wire [9:0] litepciedma2_syncfifo4_rdport_adr;
wire [129:0] litepciedma2_syncfifo4_rdport_dat_r;
wire litepciedma2_syncfifo4_rdport_re;
wire [9:0] litepciedma2_syncfifo4_level1;
wire [127:0] litepciedma2_syncfifo4_fifo_in_payload_data;
wire litepciedma2_syncfifo4_fifo_in_first;
wire litepciedma2_syncfifo4_fifo_in_last;
wire [127:0] litepciedma2_syncfifo4_fifo_out_payload_data;
wire litepciedma2_syncfifo4_fifo_out_first;
wire litepciedma2_syncfifo4_fifo_out_last;
wire litepciedma2_reader_fifo_reset;
wire litepciedma2_syncfifo5_sink_valid;
wire litepciedma2_syncfifo5_sink_ready;
reg litepciedma2_syncfifo5_sink_first = 1'd0;
wire litepciedma2_syncfifo5_sink_last;
wire [127:0] litepciedma2_syncfifo5_sink_payload_data;
wire litepciedma2_syncfifo5_source_valid;
wire litepciedma2_syncfifo5_source_ready;
wire litepciedma2_syncfifo5_source_first;
wire litepciedma2_syncfifo5_source_last;
wire [127:0] litepciedma2_syncfifo5_source_payload_data;
wire litepciedma2_syncfifo5_re;
reg litepciedma2_syncfifo5_readable = 1'd0;
wire litepciedma2_syncfifo5_syncfifo5_we;
wire litepciedma2_syncfifo5_syncfifo5_writable;
wire litepciedma2_syncfifo5_syncfifo5_re;
wire litepciedma2_syncfifo5_syncfifo5_readable;
wire [129:0] litepciedma2_syncfifo5_syncfifo5_din;
wire [129:0] litepciedma2_syncfifo5_syncfifo5_dout;
reg [9:0] litepciedma2_syncfifo5_level0 = 10'd0;
reg litepciedma2_syncfifo5_replace = 1'd0;
reg [9:0] litepciedma2_syncfifo5_produce = 10'd0;
reg [9:0] litepciedma2_syncfifo5_consume = 10'd0;
reg [9:0] litepciedma2_syncfifo5_wrport_adr = 10'd0;
wire [129:0] litepciedma2_syncfifo5_wrport_dat_r;
wire litepciedma2_syncfifo5_wrport_we;
wire [129:0] litepciedma2_syncfifo5_wrport_dat_w;
wire litepciedma2_syncfifo5_do_read;
wire [9:0] litepciedma2_syncfifo5_rdport_adr;
wire [129:0] litepciedma2_syncfifo5_rdport_dat_r;
wire litepciedma2_syncfifo5_rdport_re;
wire [9:0] litepciedma2_syncfifo5_level1;
wire [127:0] litepciedma2_syncfifo5_fifo_in_payload_data;
wire litepciedma2_syncfifo5_fifo_in_first;
wire litepciedma2_syncfifo5_fifo_in_last;
wire [127:0] litepciedma2_syncfifo5_fifo_out_payload_data;
wire litepciedma2_syncfifo5_fifo_out_first;
wire litepciedma2_syncfifo5_fifo_out_last;
wire litepciedma2_writer_fifo_reset;
wire litepciedma2_next_source_source_valid;
wire litepciedma2_next_source_source_ready;
wire litepciedma2_next_source_source_last;
wire [127:0] litepciedma2_next_source_source_payload_data;
reg [1:0] subfragments_litepcietlpdepacketizer_state = 2'd0;
reg [1:0] subfragments_litepcietlpdepacketizer_next_state = 2'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 = 1'd0;
reg pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value0 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce0 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value1 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce1 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value2 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce2 = 1'd0;
reg [31:0] subfragments_litepcietlpdepacketizer_next_value3 = 32'd0;
reg subfragments_litepcietlpdepacketizer_next_value_ce3 = 1'd0;
reg subfragments_litepcietlppacketizer_state = 1'd0;
reg subfragments_litepcietlppacketizer_next_state = 1'd0;
wire subfragments_sel;
reg subfragments_master_in_sink_valid = 1'd0;
reg subfragments_master_in_sink_ready = 1'd0;
reg subfragments_master_in_sink_first = 1'd0;
reg subfragments_master_in_sink_last = 1'd0;
reg subfragments_master_in_sink_payload_we = 1'd0;
reg [31:0] subfragments_master_in_sink_payload_adr = 32'd0;
reg [9:0] subfragments_master_in_sink_payload_len = 10'd0;
reg [15:0] subfragments_master_in_sink_payload_req_id = 16'd0;
reg [7:0] subfragments_master_in_sink_payload_tag = 8'd0;
reg [127:0] subfragments_master_in_sink_payload_dat = 128'd0;
reg [7:0] subfragments_master_in_sink_payload_channel = 8'd0;
reg [7:0] subfragments_master_in_sink_payload_user_id = 8'd0;
reg subfragments_master_in_source_valid = 1'd0;
reg subfragments_master_in_source_ready = 1'd0;
reg subfragments_master_in_source_first = 1'd0;
reg subfragments_master_in_source_last = 1'd0;
reg [31:0] subfragments_master_in_source_payload_adr = 32'd0;
reg [9:0] subfragments_master_in_source_payload_len = 10'd0;
reg subfragments_master_in_source_payload_end = 1'd0;
reg [15:0] subfragments_master_in_source_payload_req_id = 16'd0;
reg [15:0] subfragments_master_in_source_payload_cmp_id = 16'd0;
reg subfragments_master_in_source_payload_err = 1'd0;
reg [7:0] subfragments_master_in_source_payload_tag = 8'd0;
reg [127:0] subfragments_master_in_source_payload_dat = 128'd0;
reg [7:0] subfragments_master_in_source_payload_channel = 8'd0;
reg [7:0] subfragments_master_in_source_payload_user_id = 8'd0;
reg subfragments_master_out_sink_valid = 1'd0;
reg subfragments_master_out_sink_ready = 1'd0;
wire subfragments_master_out_sink_first;
wire subfragments_master_out_sink_last;
wire subfragments_master_out_sink_payload_we;
wire [31:0] subfragments_master_out_sink_payload_adr;
wire [9:0] subfragments_master_out_sink_payload_len;
wire [15:0] subfragments_master_out_sink_payload_req_id;
reg [7:0] subfragments_master_out_sink_payload_tag = 8'd0;
wire [127:0] subfragments_master_out_sink_payload_dat;
wire [7:0] subfragments_master_out_sink_payload_channel;
wire [7:0] subfragments_master_out_sink_payload_user_id;
wire subfragments_master_out_source_valid;
reg subfragments_master_out_source_ready = 1'd0;
wire subfragments_master_out_source_first;
wire subfragments_master_out_source_last;
wire [31:0] subfragments_master_out_source_payload_adr;
wire [9:0] subfragments_master_out_source_payload_len;
wire subfragments_master_out_source_payload_end;
wire [15:0] subfragments_master_out_source_payload_req_id;
wire [15:0] subfragments_master_out_source_payload_cmp_id;
wire subfragments_master_out_source_payload_err;
wire [7:0] subfragments_master_out_source_payload_tag;
wire [127:0] subfragments_master_out_source_payload_dat;
wire [7:0] subfragments_master_out_source_payload_channel;
wire [7:0] subfragments_master_out_source_payload_user_id;
reg subfragments_tags_queue_sink_valid = 1'd0;
wire subfragments_tags_queue_sink_ready;
reg subfragments_tags_queue_sink_first = 1'd0;
reg subfragments_tags_queue_sink_last = 1'd0;
reg [1:0] subfragments_tags_queue_sink_payload_tag = 2'd0;
wire subfragments_tags_queue_source_valid;
reg subfragments_tags_queue_source_ready = 1'd0;
wire subfragments_tags_queue_source_first;
wire subfragments_tags_queue_source_last;
wire [1:0] subfragments_tags_queue_source_payload_tag;
wire subfragments_tags_queue_re;
reg subfragments_tags_queue_readable = 1'd0;
wire subfragments_tags_queue_syncfifo_we;
wire subfragments_tags_queue_syncfifo_writable;
wire subfragments_tags_queue_syncfifo_re;
wire subfragments_tags_queue_syncfifo_readable;
wire [3:0] subfragments_tags_queue_syncfifo_din;
wire [3:0] subfragments_tags_queue_syncfifo_dout;
reg [2:0] subfragments_tags_queue_level0 = 3'd0;
reg subfragments_tags_queue_replace = 1'd0;
reg [1:0] subfragments_tags_queue_produce = 2'd0;
reg [1:0] subfragments_tags_queue_consume = 2'd0;
reg [1:0] subfragments_tags_queue_wrport_adr = 2'd0;
wire [3:0] subfragments_tags_queue_wrport_dat_r;
wire subfragments_tags_queue_wrport_we;
wire [3:0] subfragments_tags_queue_wrport_dat_w;
wire subfragments_tags_queue_do_read;
wire [1:0] subfragments_tags_queue_rdport_adr;
wire [3:0] subfragments_tags_queue_rdport_dat_r;
wire subfragments_tags_queue_rdport_re;
wire [2:0] subfragments_tags_queue_level1;
wire [1:0] subfragments_tags_queue_fifo_in_payload_tag;
wire subfragments_tags_queue_fifo_in_first;
wire subfragments_tags_queue_fifo_in_last;
wire [1:0] subfragments_tags_queue_fifo_out_payload_tag;
wire subfragments_tags_queue_fifo_out_first;
wire subfragments_tags_queue_fifo_out_last;
reg subfragments_requests_queue_sink_valid = 1'd0;
wire subfragments_requests_queue_sink_ready;
reg subfragments_requests_queue_sink_first = 1'd0;
reg subfragments_requests_queue_sink_last = 1'd0;
wire [1:0] subfragments_requests_queue_sink_payload_tag;
wire [7:0] subfragments_requests_queue_sink_payload_channel;
wire [7:0] subfragments_requests_queue_sink_payload_user_id;
wire subfragments_requests_queue_source_valid;
reg subfragments_requests_queue_source_ready = 1'd0;
wire subfragments_requests_queue_source_first;
wire subfragments_requests_queue_source_last;
wire [1:0] subfragments_requests_queue_source_payload_tag;
wire [7:0] subfragments_requests_queue_source_payload_channel;
wire [7:0] subfragments_requests_queue_source_payload_user_id;
wire subfragments_requests_queue_re;
reg subfragments_requests_queue_readable = 1'd0;
wire subfragments_requests_queue_syncfifo_we;
wire subfragments_requests_queue_syncfifo_writable;
wire subfragments_requests_queue_syncfifo_re;
wire subfragments_requests_queue_syncfifo_readable;
wire [19:0] subfragments_requests_queue_syncfifo_din;
wire [19:0] subfragments_requests_queue_syncfifo_dout;
reg [2:0] subfragments_requests_queue_level0 = 3'd0;
reg subfragments_requests_queue_replace = 1'd0;
reg [1:0] subfragments_requests_queue_produce = 2'd0;
reg [1:0] subfragments_requests_queue_consume = 2'd0;
reg [1:0] subfragments_requests_queue_wrport_adr = 2'd0;
wire [19:0] subfragments_requests_queue_wrport_dat_r;
wire subfragments_requests_queue_wrport_we;
wire [19:0] subfragments_requests_queue_wrport_dat_w;
wire subfragments_requests_queue_do_read;
wire [1:0] subfragments_requests_queue_rdport_adr;
wire [19:0] subfragments_requests_queue_rdport_dat_r;
wire subfragments_requests_queue_rdport_re;
wire [2:0] subfragments_requests_queue_level1;
wire [1:0] subfragments_requests_queue_fifo_in_payload_tag;
wire [7:0] subfragments_requests_queue_fifo_in_payload_channel;
wire [7:0] subfragments_requests_queue_fifo_in_payload_user_id;
wire subfragments_requests_queue_fifo_in_first;
wire subfragments_requests_queue_fifo_in_last;
wire [1:0] subfragments_requests_queue_fifo_out_payload_tag;
wire [7:0] subfragments_requests_queue_fifo_out_payload_channel;
wire [7:0] subfragments_requests_queue_fifo_out_payload_user_id;
wire subfragments_requests_queue_fifo_out_first;
wire subfragments_requests_queue_fifo_out_last;
reg subfragments_cmp_reorder_valid = 1'd0;
reg subfragments_cmp_reorder_ready = 1'd0;
wire subfragments_cmp_reorder_first;
wire subfragments_cmp_reorder_last;
wire [31:0] subfragments_cmp_reorder_payload_adr;
wire [9:0] subfragments_cmp_reorder_payload_len;
wire subfragments_cmp_reorder_payload_end;
wire [15:0] subfragments_cmp_reorder_payload_req_id;
wire [15:0] subfragments_cmp_reorder_payload_cmp_id;
wire subfragments_cmp_reorder_payload_err;
wire [7:0] subfragments_cmp_reorder_payload_tag;
wire [127:0] subfragments_cmp_reorder_payload_dat;
wire [7:0] subfragments_cmp_reorder_payload_channel;
wire [7:0] subfragments_cmp_reorder_payload_user_id;
reg subfragments_syncfifo0_sink_valid = 1'd0;
wire subfragments_syncfifo0_sink_ready;
reg subfragments_syncfifo0_sink_first = 1'd0;
reg subfragments_syncfifo0_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo0_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo0_sink_payload_len = 10'd0;
reg subfragments_syncfifo0_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo0_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo0_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo0_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo0_sink_payload_tag = 8'd0;
reg [127:0] subfragments_syncfifo0_sink_payload_dat = 128'd0;
reg [7:0] subfragments_syncfifo0_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo0_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo0_source_valid;
reg subfragments_syncfifo0_source_ready = 1'd0;
wire subfragments_syncfifo0_source_first;
wire subfragments_syncfifo0_source_last;
wire [31:0] subfragments_syncfifo0_source_payload_adr;
wire [9:0] subfragments_syncfifo0_source_payload_len;
wire subfragments_syncfifo0_source_payload_end;
wire [15:0] subfragments_syncfifo0_source_payload_req_id;
wire [15:0] subfragments_syncfifo0_source_payload_cmp_id;
wire subfragments_syncfifo0_source_payload_err;
wire [7:0] subfragments_syncfifo0_source_payload_tag;
wire [127:0] subfragments_syncfifo0_source_payload_dat;
wire [7:0] subfragments_syncfifo0_source_payload_channel;
wire [7:0] subfragments_syncfifo0_source_payload_user_id;
wire subfragments_syncfifo0_re;
reg subfragments_syncfifo0_readable = 1'd0;
wire subfragments_syncfifo0_syncfifo0_we;
wire subfragments_syncfifo0_syncfifo0_writable;
wire subfragments_syncfifo0_syncfifo0_re;
wire subfragments_syncfifo0_syncfifo0_readable;
wire [229:0] subfragments_syncfifo0_syncfifo0_din;
wire [229:0] subfragments_syncfifo0_syncfifo0_dout;
reg [7:0] subfragments_syncfifo0_level0 = 8'd0;
reg subfragments_syncfifo0_replace = 1'd0;
reg [6:0] subfragments_syncfifo0_produce = 7'd0;
reg [6:0] subfragments_syncfifo0_consume = 7'd0;
reg [6:0] subfragments_syncfifo0_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo0_wrport_dat_r;
wire subfragments_syncfifo0_wrport_we;
wire [229:0] subfragments_syncfifo0_wrport_dat_w;
wire subfragments_syncfifo0_do_read;
wire [6:0] subfragments_syncfifo0_rdport_adr;
wire [229:0] subfragments_syncfifo0_rdport_dat_r;
wire subfragments_syncfifo0_rdport_re;
wire [7:0] subfragments_syncfifo0_level1;
wire [31:0] subfragments_syncfifo0_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo0_fifo_in_payload_len;
wire subfragments_syncfifo0_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo0_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo0_fifo_in_payload_cmp_id;
wire subfragments_syncfifo0_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo0_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_user_id;
wire subfragments_syncfifo0_fifo_in_first;
wire subfragments_syncfifo0_fifo_in_last;
wire [31:0] subfragments_syncfifo0_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo0_fifo_out_payload_len;
wire subfragments_syncfifo0_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo0_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo0_fifo_out_payload_cmp_id;
wire subfragments_syncfifo0_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo0_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_user_id;
wire subfragments_syncfifo0_fifo_out_first;
wire subfragments_syncfifo0_fifo_out_last;
reg subfragments_syncfifo1_sink_valid = 1'd0;
wire subfragments_syncfifo1_sink_ready;
reg subfragments_syncfifo1_sink_first = 1'd0;
reg subfragments_syncfifo1_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo1_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo1_sink_payload_len = 10'd0;
reg subfragments_syncfifo1_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo1_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo1_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo1_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo1_sink_payload_tag = 8'd0;
reg [127:0] subfragments_syncfifo1_sink_payload_dat = 128'd0;
reg [7:0] subfragments_syncfifo1_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo1_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo1_source_valid;
reg subfragments_syncfifo1_source_ready = 1'd0;
wire subfragments_syncfifo1_source_first;
wire subfragments_syncfifo1_source_last;
wire [31:0] subfragments_syncfifo1_source_payload_adr;
wire [9:0] subfragments_syncfifo1_source_payload_len;
wire subfragments_syncfifo1_source_payload_end;
wire [15:0] subfragments_syncfifo1_source_payload_req_id;
wire [15:0] subfragments_syncfifo1_source_payload_cmp_id;
wire subfragments_syncfifo1_source_payload_err;
wire [7:0] subfragments_syncfifo1_source_payload_tag;
wire [127:0] subfragments_syncfifo1_source_payload_dat;
wire [7:0] subfragments_syncfifo1_source_payload_channel;
wire [7:0] subfragments_syncfifo1_source_payload_user_id;
wire subfragments_syncfifo1_re;
reg subfragments_syncfifo1_readable = 1'd0;
wire subfragments_syncfifo1_syncfifo1_we;
wire subfragments_syncfifo1_syncfifo1_writable;
wire subfragments_syncfifo1_syncfifo1_re;
wire subfragments_syncfifo1_syncfifo1_readable;
wire [229:0] subfragments_syncfifo1_syncfifo1_din;
wire [229:0] subfragments_syncfifo1_syncfifo1_dout;
reg [7:0] subfragments_syncfifo1_level0 = 8'd0;
reg subfragments_syncfifo1_replace = 1'd0;
reg [6:0] subfragments_syncfifo1_produce = 7'd0;
reg [6:0] subfragments_syncfifo1_consume = 7'd0;
reg [6:0] subfragments_syncfifo1_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo1_wrport_dat_r;
wire subfragments_syncfifo1_wrport_we;
wire [229:0] subfragments_syncfifo1_wrport_dat_w;
wire subfragments_syncfifo1_do_read;
wire [6:0] subfragments_syncfifo1_rdport_adr;
wire [229:0] subfragments_syncfifo1_rdport_dat_r;
wire subfragments_syncfifo1_rdport_re;
wire [7:0] subfragments_syncfifo1_level1;
wire [31:0] subfragments_syncfifo1_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo1_fifo_in_payload_len;
wire subfragments_syncfifo1_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo1_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo1_fifo_in_payload_cmp_id;
wire subfragments_syncfifo1_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo1_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_user_id;
wire subfragments_syncfifo1_fifo_in_first;
wire subfragments_syncfifo1_fifo_in_last;
wire [31:0] subfragments_syncfifo1_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo1_fifo_out_payload_len;
wire subfragments_syncfifo1_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo1_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo1_fifo_out_payload_cmp_id;
wire subfragments_syncfifo1_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo1_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_user_id;
wire subfragments_syncfifo1_fifo_out_first;
wire subfragments_syncfifo1_fifo_out_last;
reg subfragments_syncfifo2_sink_valid = 1'd0;
wire subfragments_syncfifo2_sink_ready;
reg subfragments_syncfifo2_sink_first = 1'd0;
reg subfragments_syncfifo2_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo2_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo2_sink_payload_len = 10'd0;
reg subfragments_syncfifo2_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo2_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo2_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo2_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo2_sink_payload_tag = 8'd0;
reg [127:0] subfragments_syncfifo2_sink_payload_dat = 128'd0;
reg [7:0] subfragments_syncfifo2_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo2_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo2_source_valid;
reg subfragments_syncfifo2_source_ready = 1'd0;
wire subfragments_syncfifo2_source_first;
wire subfragments_syncfifo2_source_last;
wire [31:0] subfragments_syncfifo2_source_payload_adr;
wire [9:0] subfragments_syncfifo2_source_payload_len;
wire subfragments_syncfifo2_source_payload_end;
wire [15:0] subfragments_syncfifo2_source_payload_req_id;
wire [15:0] subfragments_syncfifo2_source_payload_cmp_id;
wire subfragments_syncfifo2_source_payload_err;
wire [7:0] subfragments_syncfifo2_source_payload_tag;
wire [127:0] subfragments_syncfifo2_source_payload_dat;
wire [7:0] subfragments_syncfifo2_source_payload_channel;
wire [7:0] subfragments_syncfifo2_source_payload_user_id;
wire subfragments_syncfifo2_re;
reg subfragments_syncfifo2_readable = 1'd0;
wire subfragments_syncfifo2_syncfifo2_we;
wire subfragments_syncfifo2_syncfifo2_writable;
wire subfragments_syncfifo2_syncfifo2_re;
wire subfragments_syncfifo2_syncfifo2_readable;
wire [229:0] subfragments_syncfifo2_syncfifo2_din;
wire [229:0] subfragments_syncfifo2_syncfifo2_dout;
reg [7:0] subfragments_syncfifo2_level0 = 8'd0;
reg subfragments_syncfifo2_replace = 1'd0;
reg [6:0] subfragments_syncfifo2_produce = 7'd0;
reg [6:0] subfragments_syncfifo2_consume = 7'd0;
reg [6:0] subfragments_syncfifo2_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo2_wrport_dat_r;
wire subfragments_syncfifo2_wrport_we;
wire [229:0] subfragments_syncfifo2_wrport_dat_w;
wire subfragments_syncfifo2_do_read;
wire [6:0] subfragments_syncfifo2_rdport_adr;
wire [229:0] subfragments_syncfifo2_rdport_dat_r;
wire subfragments_syncfifo2_rdport_re;
wire [7:0] subfragments_syncfifo2_level1;
wire [31:0] subfragments_syncfifo2_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo2_fifo_in_payload_len;
wire subfragments_syncfifo2_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo2_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo2_fifo_in_payload_cmp_id;
wire subfragments_syncfifo2_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo2_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_user_id;
wire subfragments_syncfifo2_fifo_in_first;
wire subfragments_syncfifo2_fifo_in_last;
wire [31:0] subfragments_syncfifo2_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo2_fifo_out_payload_len;
wire subfragments_syncfifo2_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo2_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo2_fifo_out_payload_cmp_id;
wire subfragments_syncfifo2_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo2_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_user_id;
wire subfragments_syncfifo2_fifo_out_first;
wire subfragments_syncfifo2_fifo_out_last;
reg subfragments_syncfifo3_sink_valid = 1'd0;
wire subfragments_syncfifo3_sink_ready;
reg subfragments_syncfifo3_sink_first = 1'd0;
reg subfragments_syncfifo3_sink_last = 1'd0;
reg [31:0] subfragments_syncfifo3_sink_payload_adr = 32'd0;
reg [9:0] subfragments_syncfifo3_sink_payload_len = 10'd0;
reg subfragments_syncfifo3_sink_payload_end = 1'd0;
reg [15:0] subfragments_syncfifo3_sink_payload_req_id = 16'd0;
reg [15:0] subfragments_syncfifo3_sink_payload_cmp_id = 16'd0;
reg subfragments_syncfifo3_sink_payload_err = 1'd0;
reg [7:0] subfragments_syncfifo3_sink_payload_tag = 8'd0;
reg [127:0] subfragments_syncfifo3_sink_payload_dat = 128'd0;
reg [7:0] subfragments_syncfifo3_sink_payload_channel = 8'd0;
reg [7:0] subfragments_syncfifo3_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo3_source_valid;
reg subfragments_syncfifo3_source_ready = 1'd0;
wire subfragments_syncfifo3_source_first;
wire subfragments_syncfifo3_source_last;
wire [31:0] subfragments_syncfifo3_source_payload_adr;
wire [9:0] subfragments_syncfifo3_source_payload_len;
wire subfragments_syncfifo3_source_payload_end;
wire [15:0] subfragments_syncfifo3_source_payload_req_id;
wire [15:0] subfragments_syncfifo3_source_payload_cmp_id;
wire subfragments_syncfifo3_source_payload_err;
wire [7:0] subfragments_syncfifo3_source_payload_tag;
wire [127:0] subfragments_syncfifo3_source_payload_dat;
wire [7:0] subfragments_syncfifo3_source_payload_channel;
wire [7:0] subfragments_syncfifo3_source_payload_user_id;
wire subfragments_syncfifo3_re;
reg subfragments_syncfifo3_readable = 1'd0;
wire subfragments_syncfifo3_syncfifo3_we;
wire subfragments_syncfifo3_syncfifo3_writable;
wire subfragments_syncfifo3_syncfifo3_re;
wire subfragments_syncfifo3_syncfifo3_readable;
wire [229:0] subfragments_syncfifo3_syncfifo3_din;
wire [229:0] subfragments_syncfifo3_syncfifo3_dout;
reg [7:0] subfragments_syncfifo3_level0 = 8'd0;
reg subfragments_syncfifo3_replace = 1'd0;
reg [6:0] subfragments_syncfifo3_produce = 7'd0;
reg [6:0] subfragments_syncfifo3_consume = 7'd0;
reg [6:0] subfragments_syncfifo3_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo3_wrport_dat_r;
wire subfragments_syncfifo3_wrport_we;
wire [229:0] subfragments_syncfifo3_wrport_dat_w;
wire subfragments_syncfifo3_do_read;
wire [6:0] subfragments_syncfifo3_rdport_adr;
wire [229:0] subfragments_syncfifo3_rdport_dat_r;
wire subfragments_syncfifo3_rdport_re;
wire [7:0] subfragments_syncfifo3_level1;
wire [31:0] subfragments_syncfifo3_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo3_fifo_in_payload_len;
wire subfragments_syncfifo3_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo3_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo3_fifo_in_payload_cmp_id;
wire subfragments_syncfifo3_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo3_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_user_id;
wire subfragments_syncfifo3_fifo_in_first;
wire subfragments_syncfifo3_fifo_in_last;
wire [31:0] subfragments_syncfifo3_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo3_fifo_out_payload_len;
wire subfragments_syncfifo3_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo3_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo3_fifo_out_payload_cmp_id;
wire subfragments_syncfifo3_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo3_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_user_id;
wire subfragments_syncfifo3_fifo_out_first;
wire subfragments_syncfifo3_fifo_out_last;
reg [1:0] subfragments_fill_tag = 2'd0;
reg [2:0] subfragments_arbiter0_request = 3'd0;
reg [1:0] subfragments_arbiter0_grant = 2'd0;
reg subfragments_arbiter0_status0_first = 1'd1;
reg subfragments_arbiter0_status0_last = 1'd0;
wire subfragments_arbiter0_status0_ongoing0;
reg subfragments_arbiter0_status0_ongoing1 = 1'd0;
reg subfragments_arbiter0_status1_first = 1'd1;
reg subfragments_arbiter0_status1_last = 1'd0;
wire subfragments_arbiter0_status1_ongoing0;
reg subfragments_arbiter0_status1_ongoing1 = 1'd0;
reg subfragments_arbiter0_status2_first = 1'd1;
reg subfragments_arbiter0_status2_last = 1'd0;
wire subfragments_arbiter0_status2_ongoing0;
reg subfragments_arbiter0_status2_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher0_sel0 = 3'd0;
reg subfragments_dispatcher0_first = 1'd1;
reg subfragments_dispatcher0_last = 1'd0;
wire subfragments_dispatcher0_ongoing0;
reg subfragments_dispatcher0_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher0_sel1 = 3'd0;
reg [2:0] subfragments_dispatcher0_sel_ongoing = 3'd0;
reg subfragments_sink_valid = 1'd0;
reg subfragments_sink_ready = 1'd0;
reg subfragments_sink_first = 1'd0;
reg subfragments_sink_last = 1'd0;
reg subfragments_sink_payload_we = 1'd0;
reg [31:0] subfragments_sink_payload_adr = 32'd0;
reg [9:0] subfragments_sink_payload_len = 10'd0;
reg [15:0] subfragments_sink_payload_req_id = 16'd0;
reg [7:0] subfragments_sink_payload_tag = 8'd0;
reg [127:0] subfragments_sink_payload_dat = 128'd0;
reg [7:0] subfragments_sink_payload_channel = 8'd0;
reg [7:0] subfragments_sink_payload_user_id = 8'd0;
reg subfragments_source_valid = 1'd0;
reg subfragments_source_ready = 1'd0;
reg subfragments_source_first = 1'd0;
reg subfragments_source_last = 1'd0;
reg [31:0] subfragments_source_payload_adr = 32'd0;
reg [9:0] subfragments_source_payload_len = 10'd0;
reg subfragments_source_payload_end = 1'd0;
reg [15:0] subfragments_source_payload_req_id = 16'd0;
reg [15:0] subfragments_source_payload_cmp_id = 16'd0;
reg subfragments_source_payload_err = 1'd0;
reg [7:0] subfragments_source_payload_tag = 8'd0;
reg [127:0] subfragments_source_payload_dat = 128'd0;
reg [7:0] subfragments_source_payload_channel = 8'd0;
reg [7:0] subfragments_source_payload_user_id = 8'd0;
reg [2:0] subfragments_arbiter1_request = 3'd0;
reg [1:0] subfragments_arbiter1_grant = 2'd0;
reg subfragments_arbiter1_status3_first = 1'd1;
reg subfragments_arbiter1_status3_last = 1'd0;
wire subfragments_arbiter1_status3_ongoing0;
reg subfragments_arbiter1_status3_ongoing1 = 1'd0;
reg subfragments_arbiter1_status4_first = 1'd1;
reg subfragments_arbiter1_status4_last = 1'd0;
wire subfragments_arbiter1_status4_ongoing0;
reg subfragments_arbiter1_status4_ongoing1 = 1'd0;
reg subfragments_arbiter1_status5_first = 1'd1;
reg subfragments_arbiter1_status5_last = 1'd0;
wire subfragments_arbiter1_status5_ongoing0;
reg subfragments_arbiter1_status5_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher1_sel0 = 3'd0;
reg subfragments_dispatcher1_first = 1'd1;
reg subfragments_dispatcher1_last = 1'd0;
wire subfragments_dispatcher1_ongoing0;
reg subfragments_dispatcher1_ongoing1 = 1'd0;
reg [2:0] subfragments_dispatcher1_sel1 = 3'd0;
reg [2:0] subfragments_dispatcher1_sel_ongoing = 3'd0;
reg [1:0] subfragments_arbiter2_request = 2'd0;
reg subfragments_arbiter2_grant = 1'd0;
reg subfragments_arbiter2_status6_first = 1'd1;
reg subfragments_arbiter2_status6_last = 1'd0;
wire subfragments_arbiter2_status6_ongoing0;
reg subfragments_arbiter2_status6_ongoing1 = 1'd0;
reg subfragments_arbiter2_status7_first = 1'd1;
reg subfragments_arbiter2_status7_last = 1'd0;
wire subfragments_arbiter2_status7_ongoing0;
reg subfragments_arbiter2_status7_ongoing1 = 1'd0;
reg [1:0] subfragments_fsm0_state0 = 2'd0;
reg [1:0] subfragments_fsm0_next_state0 = 2'd0;
reg [1:0] subfragments_fsm1_state0 = 2'd0;
reg [1:0] subfragments_fsm1_next_state0 = 2'd0;
reg [1:0] subfragments_fill_tag_litepciecrossbar_next_value = 2'd0;
reg subfragments_fill_tag_litepciecrossbar_next_value_ce = 1'd0;
reg [2:0] subfragments_state = 3'd0;
reg [2:0] subfragments_next_state = 3'd0;
reg [1:0] subfragments_bufferizeendpoints0_state0 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints0_next_state0 = 2'd0;
reg subfragments_fsm0_state1 = 1'd0;
reg subfragments_fsm0_next_state1 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints0_state1 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints0_next_state1 = 2'd0;
reg subfragments_fsm0_state2 = 1'd0;
reg subfragments_fsm0_next_state2 = 1'd0;
reg [7:0] litepciedma0_reader_request_cnt_litepciedma0_next_value0 = 8'd0;
reg litepciedma0_reader_request_cnt_litepciedma0_next_value_ce0 = 1'd0;
reg litepciedma0_reader_request_counted_litepciedma0_next_value1 = 1'd0;
reg litepciedma0_reader_request_counted_litepciedma0_next_value_ce1 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints1_state0 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints1_next_state0 = 2'd0;
reg subfragments_fsm1_state1 = 1'd0;
reg subfragments_fsm1_next_state1 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints1_state1 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints1_next_state1 = 2'd0;
reg subfragments_fsm1_state2 = 1'd0;
reg subfragments_fsm1_next_state2 = 1'd0;
reg [7:0] litepciedma1_reader_request_cnt_litepciedma1_next_value0 = 8'd0;
reg litepciedma1_reader_request_cnt_litepciedma1_next_value_ce0 = 1'd0;
reg litepciedma1_reader_request_counted_litepciedma1_next_value1 = 1'd0;
reg litepciedma1_reader_request_counted_litepciedma1_next_value_ce1 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints2_state0 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints2_next_state0 = 2'd0;
reg subfragments_fsm2_state0 = 1'd0;
reg subfragments_fsm2_next_state0 = 1'd0;
reg [1:0] subfragments_bufferizeendpoints2_state1 = 2'd0;
reg [1:0] subfragments_bufferizeendpoints2_next_state1 = 2'd0;
reg subfragments_fsm2_state1 = 1'd0;
reg subfragments_fsm2_next_state1 = 1'd0;
reg [7:0] litepciedma2_reader_request_cnt_litepciedma2_next_value0 = 8'd0;
reg litepciedma2_reader_request_cnt_litepciedma2_next_value_ce0 = 1'd0;
reg litepciedma2_reader_request_counted_litepciedma2_next_value1 = 1'd0;
reg litepciedma2_reader_request_counted_litepciedma2_next_value_ce1 = 1'd0;
wire [29:0] litepciecore_shared_adr;
wire [31:0] litepciecore_shared_dat_w;
reg [31:0] litepciecore_shared_dat_r = 32'd0;
wire [3:0] litepciecore_shared_sel;
wire litepciecore_shared_cyc;
wire litepciecore_shared_stb;
reg litepciecore_shared_ack = 1'd0;
wire litepciecore_shared_we;
wire [2:0] litepciecore_shared_cti;
wire [1:0] litepciecore_shared_bte;
wire litepciecore_shared_err;
wire litepciecore_request;
wire litepciecore_grant;
reg [1:0] litepciecore_slave_sel = 2'd0;
reg [1:0] litepciecore_slave_sel_r = 2'd0;
reg litepciecore_error = 1'd0;
wire litepciecore_wait;
wire litepciecore_done;
reg [19:0] litepciecore_count = 20'd1000000;
wire [13:0] litepciecore_interface0_bank_bus_adr;
wire litepciecore_interface0_bank_bus_we;
wire [31:0] litepciecore_interface0_bank_bus_dat_w;
reg [31:0] litepciecore_interface0_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank0_cntrl15_re;
wire [31:0] litepciecore_csrbank0_cntrl15_r;
wire [31:0] litepciecore_csrbank0_cntrl15_w;
wire litepciecore_csrbank0_cntrl14_re;
wire [31:0] litepciecore_csrbank0_cntrl14_r;
wire [31:0] litepciecore_csrbank0_cntrl14_w;
wire litepciecore_csrbank0_cntrl13_re;
wire [31:0] litepciecore_csrbank0_cntrl13_r;
wire [31:0] litepciecore_csrbank0_cntrl13_w;
wire litepciecore_csrbank0_cntrl12_re;
wire [31:0] litepciecore_csrbank0_cntrl12_r;
wire [31:0] litepciecore_csrbank0_cntrl12_w;
wire litepciecore_csrbank0_cntrl11_re;
wire [31:0] litepciecore_csrbank0_cntrl11_r;
wire [31:0] litepciecore_csrbank0_cntrl11_w;
wire litepciecore_csrbank0_cntrl10_re;
wire [31:0] litepciecore_csrbank0_cntrl10_r;
wire [31:0] litepciecore_csrbank0_cntrl10_w;
wire litepciecore_csrbank0_cntrl9_re;
wire [31:0] litepciecore_csrbank0_cntrl9_r;
wire [31:0] litepciecore_csrbank0_cntrl9_w;
wire litepciecore_csrbank0_cntrl8_re;
wire [31:0] litepciecore_csrbank0_cntrl8_r;
wire [31:0] litepciecore_csrbank0_cntrl8_w;
wire litepciecore_csrbank0_cntrl7_re;
wire [31:0] litepciecore_csrbank0_cntrl7_r;
wire [31:0] litepciecore_csrbank0_cntrl7_w;
wire litepciecore_csrbank0_cntrl6_re;
wire [31:0] litepciecore_csrbank0_cntrl6_r;
wire [31:0] litepciecore_csrbank0_cntrl6_w;
wire litepciecore_csrbank0_cntrl5_re;
wire [31:0] litepciecore_csrbank0_cntrl5_r;
wire [31:0] litepciecore_csrbank0_cntrl5_w;
wire litepciecore_csrbank0_cntrl4_re;
wire [31:0] litepciecore_csrbank0_cntrl4_r;
wire [31:0] litepciecore_csrbank0_cntrl4_w;
wire litepciecore_csrbank0_cntrl3_re;
wire [31:0] litepciecore_csrbank0_cntrl3_r;
wire [31:0] litepciecore_csrbank0_cntrl3_w;
wire litepciecore_csrbank0_cntrl2_re;
wire [31:0] litepciecore_csrbank0_cntrl2_r;
wire [31:0] litepciecore_csrbank0_cntrl2_w;
wire litepciecore_csrbank0_cntrl1_re;
wire [31:0] litepciecore_csrbank0_cntrl1_r;
wire [31:0] litepciecore_csrbank0_cntrl1_w;
wire litepciecore_csrbank0_cntrl0_re;
wire [31:0] litepciecore_csrbank0_cntrl0_r;
wire [31:0] litepciecore_csrbank0_cntrl0_w;
wire litepciecore_csrbank0_enable0_re;
wire litepciecore_csrbank0_enable0_r;
wire litepciecore_csrbank0_enable0_w;
wire litepciecore_csrbank0_test0_re;
wire [31:0] litepciecore_csrbank0_test0_r;
wire [31:0] litepciecore_csrbank0_test0_w;
wire litepciecore_csrbank0_ndma_re;
wire [3:0] litepciecore_csrbank0_ndma_r;
wire [3:0] litepciecore_csrbank0_ndma_w;
wire litepciecore_csrbank0_enable_both0_re;
wire litepciecore_csrbank0_enable_both0_r;
wire litepciecore_csrbank0_enable_both0_w;
wire litepciecore_csrbank0_sel;
wire [13:0] litepciecore_sram_bus_adr;
wire litepciecore_sram_bus_we;
wire [31:0] litepciecore_sram_bus_dat_w;
reg [31:0] litepciecore_sram_bus_dat_r = 32'd0;
wire [5:0] litepciecore_adr;
wire [7:0] litepciecore_dat_r;
wire litepciecore_sel;
reg litepciecore_sel_r = 1'd0;
wire [13:0] litepciecore_interface1_bank_bus_adr;
wire litepciecore_interface1_bank_bus_we;
wire [31:0] litepciecore_interface1_bank_bus_dat_w;
reg [31:0] litepciecore_interface1_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank1_writer_enable0_re;
wire litepciecore_csrbank1_writer_enable0_r;
wire litepciecore_csrbank1_writer_enable0_w;
wire litepciecore_csrbank1_writer_allow_requests0_re;
wire litepciecore_csrbank1_writer_allow_requests0_r;
wire litepciecore_csrbank1_writer_allow_requests0_w;
wire litepciecore_csrbank1_writer_table_value1_re;
wire [31:0] litepciecore_csrbank1_writer_table_value1_r;
wire [31:0] litepciecore_csrbank1_writer_table_value1_w;
wire litepciecore_csrbank1_writer_table_value0_re;
wire [31:0] litepciecore_csrbank1_writer_table_value0_r;
wire [31:0] litepciecore_csrbank1_writer_table_value0_w;
wire litepciecore_csrbank1_writer_table_loop_prog_n0_re;
wire litepciecore_csrbank1_writer_table_loop_prog_n0_r;
wire litepciecore_csrbank1_writer_table_loop_prog_n0_w;
wire litepciecore_csrbank1_writer_table_loop_status_re;
wire [15:0] litepciecore_csrbank1_writer_table_loop_status_r;
wire [15:0] litepciecore_csrbank1_writer_table_loop_status_w;
wire litepciecore_csrbank1_writer_table_level_re;
wire [7:0] litepciecore_csrbank1_writer_table_level_r;
wire [7:0] litepciecore_csrbank1_writer_table_level_w;
wire litepciecore_csrbank1_writer_current_packet_re;
wire [15:0] litepciecore_csrbank1_writer_current_packet_r;
wire [15:0] litepciecore_csrbank1_writer_current_packet_w;
wire litepciecore_csrbank1_reader_enable0_re;
wire litepciecore_csrbank1_reader_enable0_r;
wire litepciecore_csrbank1_reader_enable0_w;
wire litepciecore_csrbank1_reader_packet_nr0_re;
wire [15:0] litepciecore_csrbank1_reader_packet_nr0_r;
wire [15:0] litepciecore_csrbank1_reader_packet_nr0_w;
wire litepciecore_csrbank1_reader_current_packet_re;
wire [15:0] litepciecore_csrbank1_reader_current_packet_r;
wire [15:0] litepciecore_csrbank1_reader_current_packet_w;
wire litepciecore_csrbank1_reader_table_value1_re;
wire [31:0] litepciecore_csrbank1_reader_table_value1_r;
wire [31:0] litepciecore_csrbank1_reader_table_value1_w;
wire litepciecore_csrbank1_reader_table_value0_re;
wire [31:0] litepciecore_csrbank1_reader_table_value0_r;
wire [31:0] litepciecore_csrbank1_reader_table_value0_w;
wire litepciecore_csrbank1_reader_table_loop_prog_n0_re;
wire litepciecore_csrbank1_reader_table_loop_prog_n0_r;
wire litepciecore_csrbank1_reader_table_loop_prog_n0_w;
wire litepciecore_csrbank1_reader_table_loop_status_re;
wire [15:0] litepciecore_csrbank1_reader_table_loop_status_r;
wire [15:0] litepciecore_csrbank1_reader_table_loop_status_w;
wire litepciecore_csrbank1_reader_table_level_re;
wire [7:0] litepciecore_csrbank1_reader_table_level_r;
wire [7:0] litepciecore_csrbank1_reader_table_level_w;
wire litepciecore_csrbank1_reader_flush_nr0_re;
wire [15:0] litepciecore_csrbank1_reader_flush_nr0_r;
wire [15:0] litepciecore_csrbank1_reader_flush_nr0_w;
wire litepciecore_csrbank1_reader_flush_nbytes0_re;
wire [15:0] litepciecore_csrbank1_reader_flush_nbytes0_r;
wire [15:0] litepciecore_csrbank1_reader_flush_nbytes0_w;
wire litepciecore_csrbank1_buffering_reader_fifo_level_re;
wire [13:0] litepciecore_csrbank1_buffering_reader_fifo_level_r;
wire [13:0] litepciecore_csrbank1_buffering_reader_fifo_level_w;
wire litepciecore_csrbank1_buffering_writer_fifo_level_re;
wire [13:0] litepciecore_csrbank1_buffering_writer_fifo_level_r;
wire [13:0] litepciecore_csrbank1_buffering_writer_fifo_level_w;
wire litepciecore_csrbank1_sel;
wire [13:0] litepciecore_interface2_bank_bus_adr;
wire litepciecore_interface2_bank_bus_we;
wire [31:0] litepciecore_interface2_bank_bus_dat_w;
reg [31:0] litepciecore_interface2_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank2_writer_enable0_re;
wire litepciecore_csrbank2_writer_enable0_r;
wire litepciecore_csrbank2_writer_enable0_w;
wire litepciecore_csrbank2_writer_allow_requests0_re;
wire litepciecore_csrbank2_writer_allow_requests0_r;
wire litepciecore_csrbank2_writer_allow_requests0_w;
wire litepciecore_csrbank2_writer_table_value1_re;
wire [31:0] litepciecore_csrbank2_writer_table_value1_r;
wire [31:0] litepciecore_csrbank2_writer_table_value1_w;
wire litepciecore_csrbank2_writer_table_value0_re;
wire [31:0] litepciecore_csrbank2_writer_table_value0_r;
wire [31:0] litepciecore_csrbank2_writer_table_value0_w;
wire litepciecore_csrbank2_writer_table_loop_prog_n0_re;
wire litepciecore_csrbank2_writer_table_loop_prog_n0_r;
wire litepciecore_csrbank2_writer_table_loop_prog_n0_w;
wire litepciecore_csrbank2_writer_table_loop_status_re;
wire [15:0] litepciecore_csrbank2_writer_table_loop_status_r;
wire [15:0] litepciecore_csrbank2_writer_table_loop_status_w;
wire litepciecore_csrbank2_writer_table_level_re;
wire [7:0] litepciecore_csrbank2_writer_table_level_r;
wire [7:0] litepciecore_csrbank2_writer_table_level_w;
wire litepciecore_csrbank2_writer_current_packet_re;
wire [15:0] litepciecore_csrbank2_writer_current_packet_r;
wire [15:0] litepciecore_csrbank2_writer_current_packet_w;
wire litepciecore_csrbank2_reader_enable0_re;
wire litepciecore_csrbank2_reader_enable0_r;
wire litepciecore_csrbank2_reader_enable0_w;
wire litepciecore_csrbank2_reader_packet_nr0_re;
wire [15:0] litepciecore_csrbank2_reader_packet_nr0_r;
wire [15:0] litepciecore_csrbank2_reader_packet_nr0_w;
wire litepciecore_csrbank2_reader_current_packet_re;
wire [15:0] litepciecore_csrbank2_reader_current_packet_r;
wire [15:0] litepciecore_csrbank2_reader_current_packet_w;
wire litepciecore_csrbank2_reader_table_value1_re;
wire [31:0] litepciecore_csrbank2_reader_table_value1_r;
wire [31:0] litepciecore_csrbank2_reader_table_value1_w;
wire litepciecore_csrbank2_reader_table_value0_re;
wire [31:0] litepciecore_csrbank2_reader_table_value0_r;
wire [31:0] litepciecore_csrbank2_reader_table_value0_w;
wire litepciecore_csrbank2_reader_table_loop_prog_n0_re;
wire litepciecore_csrbank2_reader_table_loop_prog_n0_r;
wire litepciecore_csrbank2_reader_table_loop_prog_n0_w;
wire litepciecore_csrbank2_reader_table_loop_status_re;
wire [15:0] litepciecore_csrbank2_reader_table_loop_status_r;
wire [15:0] litepciecore_csrbank2_reader_table_loop_status_w;
wire litepciecore_csrbank2_reader_table_level_re;
wire [7:0] litepciecore_csrbank2_reader_table_level_r;
wire [7:0] litepciecore_csrbank2_reader_table_level_w;
wire litepciecore_csrbank2_reader_flush_nr0_re;
wire [15:0] litepciecore_csrbank2_reader_flush_nr0_r;
wire [15:0] litepciecore_csrbank2_reader_flush_nr0_w;
wire litepciecore_csrbank2_reader_flush_nbytes0_re;
wire [15:0] litepciecore_csrbank2_reader_flush_nbytes0_r;
wire [15:0] litepciecore_csrbank2_reader_flush_nbytes0_w;
wire litepciecore_csrbank2_buffering_reader_fifo_level_re;
wire [13:0] litepciecore_csrbank2_buffering_reader_fifo_level_r;
wire [13:0] litepciecore_csrbank2_buffering_reader_fifo_level_w;
wire litepciecore_csrbank2_buffering_writer_fifo_level_re;
wire [13:0] litepciecore_csrbank2_buffering_writer_fifo_level_r;
wire [13:0] litepciecore_csrbank2_buffering_writer_fifo_level_w;
wire litepciecore_csrbank2_sel;
wire [13:0] litepciecore_interface3_bank_bus_adr;
wire litepciecore_interface3_bank_bus_we;
wire [31:0] litepciecore_interface3_bank_bus_dat_w;
reg [31:0] litepciecore_interface3_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank3_writer_enable0_re;
wire litepciecore_csrbank3_writer_enable0_r;
wire litepciecore_csrbank3_writer_enable0_w;
wire litepciecore_csrbank3_writer_allow_requests0_re;
wire litepciecore_csrbank3_writer_allow_requests0_r;
wire litepciecore_csrbank3_writer_allow_requests0_w;
wire litepciecore_csrbank3_writer_table_value1_re;
wire [31:0] litepciecore_csrbank3_writer_table_value1_r;
wire [31:0] litepciecore_csrbank3_writer_table_value1_w;
wire litepciecore_csrbank3_writer_table_value0_re;
wire [31:0] litepciecore_csrbank3_writer_table_value0_r;
wire [31:0] litepciecore_csrbank3_writer_table_value0_w;
wire litepciecore_csrbank3_writer_table_loop_prog_n0_re;
wire litepciecore_csrbank3_writer_table_loop_prog_n0_r;
wire litepciecore_csrbank3_writer_table_loop_prog_n0_w;
wire litepciecore_csrbank3_writer_table_loop_status_re;
wire [15:0] litepciecore_csrbank3_writer_table_loop_status_r;
wire [15:0] litepciecore_csrbank3_writer_table_loop_status_w;
wire litepciecore_csrbank3_writer_table_level_re;
wire [7:0] litepciecore_csrbank3_writer_table_level_r;
wire [7:0] litepciecore_csrbank3_writer_table_level_w;
wire litepciecore_csrbank3_writer_current_packet_re;
wire [15:0] litepciecore_csrbank3_writer_current_packet_r;
wire [15:0] litepciecore_csrbank3_writer_current_packet_w;
wire litepciecore_csrbank3_reader_enable0_re;
wire litepciecore_csrbank3_reader_enable0_r;
wire litepciecore_csrbank3_reader_enable0_w;
wire litepciecore_csrbank3_reader_packet_nr0_re;
wire [15:0] litepciecore_csrbank3_reader_packet_nr0_r;
wire [15:0] litepciecore_csrbank3_reader_packet_nr0_w;
wire litepciecore_csrbank3_reader_current_packet_re;
wire [15:0] litepciecore_csrbank3_reader_current_packet_r;
wire [15:0] litepciecore_csrbank3_reader_current_packet_w;
wire litepciecore_csrbank3_reader_table_value1_re;
wire [31:0] litepciecore_csrbank3_reader_table_value1_r;
wire [31:0] litepciecore_csrbank3_reader_table_value1_w;
wire litepciecore_csrbank3_reader_table_value0_re;
wire [31:0] litepciecore_csrbank3_reader_table_value0_r;
wire [31:0] litepciecore_csrbank3_reader_table_value0_w;
wire litepciecore_csrbank3_reader_table_loop_prog_n0_re;
wire litepciecore_csrbank3_reader_table_loop_prog_n0_r;
wire litepciecore_csrbank3_reader_table_loop_prog_n0_w;
wire litepciecore_csrbank3_reader_table_loop_status_re;
wire [15:0] litepciecore_csrbank3_reader_table_loop_status_r;
wire [15:0] litepciecore_csrbank3_reader_table_loop_status_w;
wire litepciecore_csrbank3_reader_table_level_re;
wire [7:0] litepciecore_csrbank3_reader_table_level_r;
wire [7:0] litepciecore_csrbank3_reader_table_level_w;
wire litepciecore_csrbank3_reader_flush_nr0_re;
wire [15:0] litepciecore_csrbank3_reader_flush_nr0_r;
wire [15:0] litepciecore_csrbank3_reader_flush_nr0_w;
wire litepciecore_csrbank3_reader_flush_nbytes0_re;
wire [15:0] litepciecore_csrbank3_reader_flush_nbytes0_r;
wire [15:0] litepciecore_csrbank3_reader_flush_nbytes0_w;
wire litepciecore_csrbank3_buffering_reader_fifo_level_re;
wire [13:0] litepciecore_csrbank3_buffering_reader_fifo_level_r;
wire [13:0] litepciecore_csrbank3_buffering_reader_fifo_level_w;
wire litepciecore_csrbank3_buffering_writer_fifo_level_re;
wire [13:0] litepciecore_csrbank3_buffering_writer_fifo_level_r;
wire [13:0] litepciecore_csrbank3_buffering_writer_fifo_level_w;
wire litepciecore_csrbank3_sel;
wire [13:0] litepciecore_interface4_bank_bus_adr;
wire litepciecore_interface4_bank_bus_we;
wire [31:0] litepciecore_interface4_bank_bus_dat_w;
reg [31:0] litepciecore_interface4_bank_bus_dat_r = 32'd0;
wire litepciecore_csrbank4_lnk_up_re;
wire litepciecore_csrbank4_lnk_up_r;
wire litepciecore_csrbank4_lnk_up_w;
wire litepciecore_csrbank4_msi_enable_re;
wire litepciecore_csrbank4_msi_enable_r;
wire litepciecore_csrbank4_msi_enable_w;
wire litepciecore_csrbank4_bus_master_enable_re;
wire litepciecore_csrbank4_bus_master_enable_r;
wire litepciecore_csrbank4_bus_master_enable_w;
wire litepciecore_csrbank4_max_request_size_re;
wire [15:0] litepciecore_csrbank4_max_request_size_r;
wire [15:0] litepciecore_csrbank4_max_request_size_w;
wire litepciecore_csrbank4_max_payload_size_re;
wire [15:0] litepciecore_csrbank4_max_payload_size_r;
wire [15:0] litepciecore_csrbank4_max_payload_size_w;
wire litepciecore_csrbank4_sel;
wire [31:0] slice_proxy0;
wire [31:0] slice_proxy1;
wire [31:0] slice_proxy2;
wire [31:0] slice_proxy3;
wire [31:0] slice_proxy4;
wire [31:0] slice_proxy5;
wire [31:0] slice_proxy6;
wire [31:0] slice_proxy7;
wire [31:0] slice_proxy8;
wire [31:0] slice_proxy9;
wire [31:0] slice_proxy10;
wire [31:0] slice_proxy11;
wire [31:0] slice_proxy12;
wire [31:0] slice_proxy13;
wire [31:0] slice_proxy14;
wire [31:0] slice_proxy15;
wire [3:0] slice_proxy16;
wire [3:0] slice_proxy17;
wire [3:0] slice_proxy18;
wire [3:0] slice_proxy19;
wire [3:0] slice_proxy20;
wire [3:0] slice_proxy21;
wire [3:0] slice_proxy22;
wire [3:0] slice_proxy23;
wire [3:0] slice_proxy24;
wire [3:0] slice_proxy25;
wire [3:0] slice_proxy26;
wire [3:0] slice_proxy27;
wire [3:0] slice_proxy28;
wire [3:0] slice_proxy29;
wire [3:0] slice_proxy30;
wire [3:0] slice_proxy31;
wire [31:0] t_slice_proxy0;
wire [31:0] t_slice_proxy1;
wire [31:0] t_slice_proxy2;
wire [31:0] t_slice_proxy3;
wire [3:0] t_slice_proxy4;
wire [3:0] t_slice_proxy5;
wire [3:0] t_slice_proxy6;
wire [3:0] t_slice_proxy7;
wire [31:0] rhs_slice_proxy0;
wire [31:0] rhs_slice_proxy1;
wire [31:0] rhs_slice_proxy2;
wire [31:0] rhs_slice_proxy3;
wire [31:0] rhs_slice_proxy4;
wire [31:0] rhs_slice_proxy5;
wire [31:0] rhs_slice_proxy6;
wire [31:0] rhs_slice_proxy7;
wire [31:0] rhs_slice_proxy8;
wire [31:0] rhs_slice_proxy9;
wire [31:0] rhs_slice_proxy10;
wire [31:0] rhs_slice_proxy11;
wire [31:0] rhs_slice_proxy12;
wire [31:0] rhs_slice_proxy13;
wire [31:0] rhs_slice_proxy14;
wire [31:0] rhs_slice_proxy15;
reg [29:0] array_muxed0 = 30'd0;
reg [31:0] array_muxed1 = 32'd0;
reg [3:0] array_muxed2 = 4'd0;
reg array_muxed3 = 1'd0;
reg array_muxed4 = 1'd0;
reg array_muxed5 = 1'd0;
reg [2:0] array_muxed6 = 3'd0;
reg [1:0] array_muxed7 = 2'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl0_regs0 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl0_regs1 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl1_regs0 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl1_regs1 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl2_regs0 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl2_regs1 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl3_regs0 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl3_regs1 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl4_regs0 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl4_regs1 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl5_regs0 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [2:0] xilinxmultiregimpl5_regs1 = 3'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg xilinxmultiregimpl6_regs0 = 1'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg xilinxmultiregimpl6_regs1 = 1'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg xilinxmultiregimpl7_regs0 = 1'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg xilinxmultiregimpl7_regs1 = 1'd0;
wire xilinxmultiregimpl7;
(* register_balancing = "no", shreg_extract = "no" *) reg xilinxmultiregimpl8_regs0 = 1'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg xilinxmultiregimpl8_regs1 = 1'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [15:0] xilinxmultiregimpl9_regs0 = 16'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [15:0] xilinxmultiregimpl9_regs1 = 16'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [15:0] xilinxmultiregimpl10_regs0 = 16'd0;
(* register_balancing = "no", shreg_extract = "no" *) reg [15:0] xilinxmultiregimpl10_regs1 = 16'd0;

assign dma_writer0_valid = litepciedma0_next_source_source_valid;
assign litepciedma0_next_source_source_ready = dma_writer0_ready;
assign dma_writer0_last = litepciedma0_next_source_source_last;
assign dma_writer0_data = litepciedma0_next_source_source_payload_data;
assign dma_writer0_enable = litepciedma0_reader_enable_storage;
assign litepciedma0_syncfifo1_sink_valid = dma_reader0_valid;
assign dma_reader0_ready = litepciedma0_syncfifo1_sink_ready;
assign litepciedma0_syncfifo1_sink_last = dma_reader0_last;
assign litepciedma0_syncfifo1_sink_payload_data = dma_reader0_data;
assign dma_reader0_enable = litepciedma0_writer_enable_storage;
assign dma_writer1_valid = litepciedma1_next_source_source_valid;
assign litepciedma1_next_source_source_ready = dma_writer1_ready;
assign dma_writer1_last = litepciedma1_next_source_source_last;
assign dma_writer1_data = litepciedma1_next_source_source_payload_data;
assign dma_writer1_enable = litepciedma1_reader_enable_storage;
assign litepciedma1_syncfifo3_sink_valid = dma_reader1_valid;
assign dma_reader1_ready = litepciedma1_syncfifo3_sink_ready;
assign litepciedma1_syncfifo3_sink_last = dma_reader1_last;
assign litepciedma1_syncfifo3_sink_payload_data = dma_reader1_data;
assign dma_reader1_enable = litepciedma1_writer_enable_storage;
assign dma_writer2_valid = litepciedma2_next_source_source_valid;
assign litepciedma2_next_source_source_ready = dma_writer2_ready;
assign dma_writer2_last = litepciedma2_next_source_source_last;
assign dma_writer2_data = litepciedma2_next_source_source_payload_data;
assign dma_writer2_enable = litepciedma2_reader_enable_storage;
assign litepciedma2_syncfifo5_sink_valid = dma_reader2_valid;
assign dma_reader2_ready = litepciedma2_syncfifo5_sink_ready;
assign litepciedma2_syncfifo5_sink_last = dma_reader2_last;
assign litepciedma2_syncfifo5_sink_payload_data = dma_reader2_data;
assign dma_reader2_enable = litepciedma2_writer_enable_storage;
assign cntrl_writer_data = cntrl_storage;
assign cntrl_writer_valid = cntrl_re;
assign cntrl_dat_w = cntrl_reader_data;
assign cntrl_we = cntrl_reader_valid;
assign cntrl_enable = enable_storage;
always @(*) begin
	sram_we <= 4'd0;
	sram_we[0] <= (((sram_bus_cyc & sram_bus_stb) & sram_bus_we) & sram_bus_sel[0]);
	sram_we[1] <= (((sram_bus_cyc & sram_bus_stb) & sram_bus_we) & sram_bus_sel[1]);
	sram_we[2] <= (((sram_bus_cyc & sram_bus_stb) & sram_bus_we) & sram_bus_sel[2]);
	sram_we[3] <= (((sram_bus_cyc & sram_bus_stb) & sram_bus_we) & sram_bus_sel[3]);
end
assign sram_adr = sram_bus_adr[9:0];
assign sram_bus_dat_r = sram_dat_r;
assign sram_dat_w = sram_bus_dat_w;
assign sys_clk = clk125;
assign pcie_phy_tx_buffer_sink_valid = pcie_phy_sink_sink_valid;
assign pcie_phy_sink_sink_ready = pcie_phy_tx_buffer_sink_ready;
assign pcie_phy_tx_buffer_sink_first = pcie_phy_sink_sink_first;
assign pcie_phy_tx_buffer_sink_last = pcie_phy_sink_sink_last;
assign pcie_phy_tx_buffer_sink_payload_dat = pcie_phy_sink_sink_payload_dat;
assign pcie_phy_tx_buffer_sink_payload_be = pcie_phy_sink_sink_payload_be;
assign pcie_phy_tx_cdc_sink_valid = pcie_phy_tx_buffer_source_valid;
assign pcie_phy_tx_buffer_source_ready = pcie_phy_tx_cdc_sink_ready;
assign pcie_phy_tx_cdc_sink_first = pcie_phy_tx_buffer_source_first;
assign pcie_phy_tx_cdc_sink_last = pcie_phy_tx_buffer_source_last;
assign pcie_phy_tx_cdc_sink_payload_dat = pcie_phy_tx_buffer_source_payload_dat;
assign pcie_phy_tx_cdc_sink_payload_be = pcie_phy_tx_buffer_source_payload_be;
assign pcie_phy_rx_buffer_sink_valid = pcie_phy_rx_cdc_source_valid;
assign pcie_phy_rx_cdc_source_ready = pcie_phy_rx_buffer_sink_ready;
assign pcie_phy_rx_buffer_sink_first = pcie_phy_rx_cdc_source_first;
assign pcie_phy_rx_buffer_sink_last = pcie_phy_rx_cdc_source_last;
assign pcie_phy_rx_buffer_sink_payload_dat = pcie_phy_rx_cdc_source_payload_dat;
assign pcie_phy_rx_buffer_sink_payload_be = pcie_phy_rx_cdc_source_payload_be;
assign pcie_phy_source_source_valid = pcie_phy_rx_buffer_source_valid;
assign pcie_phy_rx_buffer_source_ready = pcie_phy_source_source_ready;
assign pcie_phy_source_source_first = pcie_phy_rx_buffer_source_first;
assign pcie_phy_source_source_last = pcie_phy_rx_buffer_source_last;
assign pcie_phy_source_source_payload_dat = pcie_phy_rx_buffer_source_payload_dat;
assign pcie_phy_source_source_payload_be = pcie_phy_rx_buffer_source_payload_be;
assign pcie_phy_msi_cdc_sink_valid = pcie_phy_msi_valid;
assign pcie_phy_msi_ready = pcie_phy_msi_cdc_sink_ready;
assign pcie_phy_msi_cdc_sink_first = pcie_phy_msi_first;
assign pcie_phy_msi_cdc_sink_last = pcie_phy_msi_last;
assign pcie_phy_msi_cdc_sink_payload_dat = pcie_phy_msi_payload_dat;
assign pcie_phy_rx_cdc_sink_last = pcie_phy_m_axis_rx_tuser[21];
assign pcie_phy_tx_buffer_pipe_ce = (pcie_phy_tx_buffer_source_ready | (~pcie_phy_tx_buffer_valid_n));
assign pcie_phy_tx_buffer_sink_ready = pcie_phy_tx_buffer_pipe_ce;
assign pcie_phy_tx_buffer_source_valid = pcie_phy_tx_buffer_valid_n;
assign pcie_phy_tx_buffer_busy = (1'd0 | pcie_phy_tx_buffer_valid_n);
assign pcie_phy_tx_buffer_source_first = pcie_phy_tx_buffer_first_n;
assign pcie_phy_tx_buffer_source_last = pcie_phy_tx_buffer_last_n;
assign pcie_phy_tx_cdc_asyncfifo_din = {pcie_phy_tx_cdc_fifo_in_last, pcie_phy_tx_cdc_fifo_in_first, pcie_phy_tx_cdc_fifo_in_payload_be, pcie_phy_tx_cdc_fifo_in_payload_dat};
assign {pcie_phy_tx_cdc_fifo_out_last, pcie_phy_tx_cdc_fifo_out_first, pcie_phy_tx_cdc_fifo_out_payload_be, pcie_phy_tx_cdc_fifo_out_payload_dat} = pcie_phy_tx_cdc_asyncfifo_dout;
assign pcie_phy_tx_cdc_sink_ready = pcie_phy_tx_cdc_asyncfifo_writable;
assign pcie_phy_tx_cdc_asyncfifo_we = pcie_phy_tx_cdc_sink_valid;
assign pcie_phy_tx_cdc_fifo_in_first = pcie_phy_tx_cdc_sink_first;
assign pcie_phy_tx_cdc_fifo_in_last = pcie_phy_tx_cdc_sink_last;
assign pcie_phy_tx_cdc_fifo_in_payload_dat = pcie_phy_tx_cdc_sink_payload_dat;
assign pcie_phy_tx_cdc_fifo_in_payload_be = pcie_phy_tx_cdc_sink_payload_be;
assign pcie_phy_tx_cdc_source_valid = pcie_phy_tx_cdc_asyncfifo_readable;
assign pcie_phy_tx_cdc_source_first = pcie_phy_tx_cdc_fifo_out_first;
assign pcie_phy_tx_cdc_source_last = pcie_phy_tx_cdc_fifo_out_last;
assign pcie_phy_tx_cdc_source_payload_dat = pcie_phy_tx_cdc_fifo_out_payload_dat;
assign pcie_phy_tx_cdc_source_payload_be = pcie_phy_tx_cdc_fifo_out_payload_be;
assign pcie_phy_tx_cdc_asyncfifo_re = pcie_phy_tx_cdc_source_ready;
assign pcie_phy_tx_cdc_graycounter0_ce = (pcie_phy_tx_cdc_asyncfifo_writable & pcie_phy_tx_cdc_asyncfifo_we);
assign pcie_phy_tx_cdc_graycounter1_ce = (pcie_phy_tx_cdc_asyncfifo_readable & pcie_phy_tx_cdc_asyncfifo_re);
assign pcie_phy_tx_cdc_asyncfifo_writable = (((pcie_phy_tx_cdc_graycounter0_q[2] == pcie_phy_tx_cdc_consume_wdomain[2]) | (pcie_phy_tx_cdc_graycounter0_q[1] == pcie_phy_tx_cdc_consume_wdomain[1])) | (pcie_phy_tx_cdc_graycounter0_q[0] != pcie_phy_tx_cdc_consume_wdomain[0]));
assign pcie_phy_tx_cdc_asyncfifo_readable = (pcie_phy_tx_cdc_graycounter1_q != pcie_phy_tx_cdc_produce_rdomain);
assign pcie_phy_tx_cdc_wrport_adr = pcie_phy_tx_cdc_graycounter0_q_binary[1:0];
assign pcie_phy_tx_cdc_wrport_dat_w = pcie_phy_tx_cdc_asyncfifo_din;
assign pcie_phy_tx_cdc_wrport_we = pcie_phy_tx_cdc_graycounter0_ce;
assign pcie_phy_tx_cdc_rdport_adr = pcie_phy_tx_cdc_graycounter1_q_next_binary[1:0];
assign pcie_phy_tx_cdc_asyncfifo_dout = pcie_phy_tx_cdc_rdport_dat_r;
always @(*) begin
	pcie_phy_tx_cdc_graycounter0_q_next_binary <= 3'd0;
	if (pcie_phy_tx_cdc_graycounter0_ce) begin
		pcie_phy_tx_cdc_graycounter0_q_next_binary <= (pcie_phy_tx_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		pcie_phy_tx_cdc_graycounter0_q_next_binary <= pcie_phy_tx_cdc_graycounter0_q_binary;
	end
end
assign pcie_phy_tx_cdc_graycounter0_q_next = (pcie_phy_tx_cdc_graycounter0_q_next_binary ^ pcie_phy_tx_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	pcie_phy_tx_cdc_graycounter1_q_next_binary <= 3'd0;
	if (pcie_phy_tx_cdc_graycounter1_ce) begin
		pcie_phy_tx_cdc_graycounter1_q_next_binary <= (pcie_phy_tx_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		pcie_phy_tx_cdc_graycounter1_q_next_binary <= pcie_phy_tx_cdc_graycounter1_q_binary;
	end
end
assign pcie_phy_tx_cdc_graycounter1_q_next = (pcie_phy_tx_cdc_graycounter1_q_next_binary ^ pcie_phy_tx_cdc_graycounter1_q_next_binary[2:1]);
assign pcie_phy_rx_buffer_pipe_ce = (pcie_phy_rx_buffer_source_ready | (~pcie_phy_rx_buffer_valid_n));
assign pcie_phy_rx_buffer_sink_ready = pcie_phy_rx_buffer_pipe_ce;
assign pcie_phy_rx_buffer_source_valid = pcie_phy_rx_buffer_valid_n;
assign pcie_phy_rx_buffer_busy = (1'd0 | pcie_phy_rx_buffer_valid_n);
assign pcie_phy_rx_buffer_source_first = pcie_phy_rx_buffer_first_n;
assign pcie_phy_rx_buffer_source_last = pcie_phy_rx_buffer_last_n;
assign pcie_phy_rx_cdc_asyncfifo_din = {pcie_phy_rx_cdc_fifo_in_last, pcie_phy_rx_cdc_fifo_in_first, pcie_phy_rx_cdc_fifo_in_payload_be, pcie_phy_rx_cdc_fifo_in_payload_dat};
assign {pcie_phy_rx_cdc_fifo_out_last, pcie_phy_rx_cdc_fifo_out_first, pcie_phy_rx_cdc_fifo_out_payload_be, pcie_phy_rx_cdc_fifo_out_payload_dat} = pcie_phy_rx_cdc_asyncfifo_dout;
assign pcie_phy_rx_cdc_sink_ready = pcie_phy_rx_cdc_asyncfifo_writable;
assign pcie_phy_rx_cdc_asyncfifo_we = pcie_phy_rx_cdc_sink_valid;
assign pcie_phy_rx_cdc_fifo_in_first = pcie_phy_rx_cdc_sink_first;
assign pcie_phy_rx_cdc_fifo_in_last = pcie_phy_rx_cdc_sink_last;
assign pcie_phy_rx_cdc_fifo_in_payload_dat = pcie_phy_rx_cdc_sink_payload_dat;
assign pcie_phy_rx_cdc_fifo_in_payload_be = pcie_phy_rx_cdc_sink_payload_be;
assign pcie_phy_rx_cdc_source_valid = pcie_phy_rx_cdc_asyncfifo_readable;
assign pcie_phy_rx_cdc_source_first = pcie_phy_rx_cdc_fifo_out_first;
assign pcie_phy_rx_cdc_source_last = pcie_phy_rx_cdc_fifo_out_last;
assign pcie_phy_rx_cdc_source_payload_dat = pcie_phy_rx_cdc_fifo_out_payload_dat;
assign pcie_phy_rx_cdc_source_payload_be = pcie_phy_rx_cdc_fifo_out_payload_be;
assign pcie_phy_rx_cdc_asyncfifo_re = pcie_phy_rx_cdc_source_ready;
assign pcie_phy_rx_cdc_graycounter0_ce = (pcie_phy_rx_cdc_asyncfifo_writable & pcie_phy_rx_cdc_asyncfifo_we);
assign pcie_phy_rx_cdc_graycounter1_ce = (pcie_phy_rx_cdc_asyncfifo_readable & pcie_phy_rx_cdc_asyncfifo_re);
assign pcie_phy_rx_cdc_asyncfifo_writable = (((pcie_phy_rx_cdc_graycounter0_q[2] == pcie_phy_rx_cdc_consume_wdomain[2]) | (pcie_phy_rx_cdc_graycounter0_q[1] == pcie_phy_rx_cdc_consume_wdomain[1])) | (pcie_phy_rx_cdc_graycounter0_q[0] != pcie_phy_rx_cdc_consume_wdomain[0]));
assign pcie_phy_rx_cdc_asyncfifo_readable = (pcie_phy_rx_cdc_graycounter1_q != pcie_phy_rx_cdc_produce_rdomain);
assign pcie_phy_rx_cdc_wrport_adr = pcie_phy_rx_cdc_graycounter0_q_binary[1:0];
assign pcie_phy_rx_cdc_wrport_dat_w = pcie_phy_rx_cdc_asyncfifo_din;
assign pcie_phy_rx_cdc_wrport_we = pcie_phy_rx_cdc_graycounter0_ce;
assign pcie_phy_rx_cdc_rdport_adr = pcie_phy_rx_cdc_graycounter1_q_next_binary[1:0];
assign pcie_phy_rx_cdc_asyncfifo_dout = pcie_phy_rx_cdc_rdport_dat_r;
always @(*) begin
	pcie_phy_rx_cdc_graycounter0_q_next_binary <= 3'd0;
	if (pcie_phy_rx_cdc_graycounter0_ce) begin
		pcie_phy_rx_cdc_graycounter0_q_next_binary <= (pcie_phy_rx_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		pcie_phy_rx_cdc_graycounter0_q_next_binary <= pcie_phy_rx_cdc_graycounter0_q_binary;
	end
end
assign pcie_phy_rx_cdc_graycounter0_q_next = (pcie_phy_rx_cdc_graycounter0_q_next_binary ^ pcie_phy_rx_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	pcie_phy_rx_cdc_graycounter1_q_next_binary <= 3'd0;
	if (pcie_phy_rx_cdc_graycounter1_ce) begin
		pcie_phy_rx_cdc_graycounter1_q_next_binary <= (pcie_phy_rx_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		pcie_phy_rx_cdc_graycounter1_q_next_binary <= pcie_phy_rx_cdc_graycounter1_q_binary;
	end
end
assign pcie_phy_rx_cdc_graycounter1_q_next = (pcie_phy_rx_cdc_graycounter1_q_next_binary ^ pcie_phy_rx_cdc_graycounter1_q_next_binary[2:1]);
assign pcie_phy_msi_cdc_asyncfifo_din = {pcie_phy_msi_cdc_fifo_in_last, pcie_phy_msi_cdc_fifo_in_first, pcie_phy_msi_cdc_fifo_in_payload_dat};
assign {pcie_phy_msi_cdc_fifo_out_last, pcie_phy_msi_cdc_fifo_out_first, pcie_phy_msi_cdc_fifo_out_payload_dat} = pcie_phy_msi_cdc_asyncfifo_dout;
assign pcie_phy_msi_cdc_sink_ready = pcie_phy_msi_cdc_asyncfifo_writable;
assign pcie_phy_msi_cdc_asyncfifo_we = pcie_phy_msi_cdc_sink_valid;
assign pcie_phy_msi_cdc_fifo_in_first = pcie_phy_msi_cdc_sink_first;
assign pcie_phy_msi_cdc_fifo_in_last = pcie_phy_msi_cdc_sink_last;
assign pcie_phy_msi_cdc_fifo_in_payload_dat = pcie_phy_msi_cdc_sink_payload_dat;
assign pcie_phy_msi_cdc_source_valid = pcie_phy_msi_cdc_asyncfifo_readable;
assign pcie_phy_msi_cdc_source_first = pcie_phy_msi_cdc_fifo_out_first;
assign pcie_phy_msi_cdc_source_last = pcie_phy_msi_cdc_fifo_out_last;
assign pcie_phy_msi_cdc_source_payload_dat = pcie_phy_msi_cdc_fifo_out_payload_dat;
assign pcie_phy_msi_cdc_asyncfifo_re = pcie_phy_msi_cdc_source_ready;
assign pcie_phy_msi_cdc_graycounter0_ce = (pcie_phy_msi_cdc_asyncfifo_writable & pcie_phy_msi_cdc_asyncfifo_we);
assign pcie_phy_msi_cdc_graycounter1_ce = (pcie_phy_msi_cdc_asyncfifo_readable & pcie_phy_msi_cdc_asyncfifo_re);
assign pcie_phy_msi_cdc_asyncfifo_writable = (((pcie_phy_msi_cdc_graycounter0_q[2] == pcie_phy_msi_cdc_consume_wdomain[2]) | (pcie_phy_msi_cdc_graycounter0_q[1] == pcie_phy_msi_cdc_consume_wdomain[1])) | (pcie_phy_msi_cdc_graycounter0_q[0] != pcie_phy_msi_cdc_consume_wdomain[0]));
assign pcie_phy_msi_cdc_asyncfifo_readable = (pcie_phy_msi_cdc_graycounter1_q != pcie_phy_msi_cdc_produce_rdomain);
assign pcie_phy_msi_cdc_wrport_adr = pcie_phy_msi_cdc_graycounter0_q_binary[1:0];
assign pcie_phy_msi_cdc_wrport_dat_w = pcie_phy_msi_cdc_asyncfifo_din;
assign pcie_phy_msi_cdc_wrport_we = pcie_phy_msi_cdc_graycounter0_ce;
assign pcie_phy_msi_cdc_rdport_adr = pcie_phy_msi_cdc_graycounter1_q_next_binary[1:0];
assign pcie_phy_msi_cdc_asyncfifo_dout = pcie_phy_msi_cdc_rdport_dat_r;
always @(*) begin
	pcie_phy_msi_cdc_graycounter0_q_next_binary <= 3'd0;
	if (pcie_phy_msi_cdc_graycounter0_ce) begin
		pcie_phy_msi_cdc_graycounter0_q_next_binary <= (pcie_phy_msi_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		pcie_phy_msi_cdc_graycounter0_q_next_binary <= pcie_phy_msi_cdc_graycounter0_q_binary;
	end
end
assign pcie_phy_msi_cdc_graycounter0_q_next = (pcie_phy_msi_cdc_graycounter0_q_next_binary ^ pcie_phy_msi_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	pcie_phy_msi_cdc_graycounter1_q_next_binary <= 3'd0;
	if (pcie_phy_msi_cdc_graycounter1_ce) begin
		pcie_phy_msi_cdc_graycounter1_q_next_binary <= (pcie_phy_msi_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		pcie_phy_msi_cdc_graycounter1_q_next_binary <= pcie_phy_msi_cdc_graycounter1_q_binary;
	end
end
assign pcie_phy_msi_cdc_graycounter1_q_next = (pcie_phy_msi_cdc_graycounter1_q_next_binary ^ pcie_phy_msi_cdc_graycounter1_q_next_binary[2:1]);
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_valid = pcie_phy_source_source_valid;
assign pcie_phy_source_source_ready = pcie_endpoint_litepcietlpdepacketizer_sink_sink_ready;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_first = pcie_phy_source_source_first;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_last = pcie_phy_source_source_last;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_dat = pcie_phy_source_source_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_be = pcie_phy_source_source_payload_be;
assign pcie_phy_sink_sink_valid = pcie_endpoint_source_source_valid;
assign pcie_endpoint_source_source_ready = pcie_phy_sink_sink_ready;
assign pcie_phy_sink_sink_first = pcie_endpoint_source_source_first;
assign pcie_phy_sink_sink_last = pcie_endpoint_source_source_last;
assign pcie_phy_sink_sink_payload_dat = pcie_endpoint_source_source_payload_dat;
assign pcie_phy_sink_sink_payload_be = pcie_endpoint_source_source_payload_be;
assign pcie_endpoint_slave_source_valid = pcie_endpoint_litepcietlpdepacketizer_req_source_valid;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_ready = pcie_endpoint_slave_source_ready;
assign pcie_endpoint_slave_source_first = pcie_endpoint_litepcietlpdepacketizer_req_source_first;
assign pcie_endpoint_slave_source_last = pcie_endpoint_litepcietlpdepacketizer_req_source_last;
assign pcie_endpoint_slave_source_payload_we = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_we;
assign pcie_endpoint_slave_source_payload_adr = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_adr;
assign pcie_endpoint_slave_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_len;
assign pcie_endpoint_slave_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_req_id;
assign pcie_endpoint_slave_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_tag;
assign pcie_endpoint_slave_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_dat;
assign pcie_endpoint_slave_source_payload_channel = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_channel;
assign pcie_endpoint_slave_source_payload_user_id = pcie_endpoint_litepcietlpdepacketizer_req_source_payload_user_id;
assign pcie_endpoint_cmp_sink_valid = pcie_endpoint_slave_sink_valid;
assign pcie_endpoint_slave_sink_ready = pcie_endpoint_cmp_sink_ready;
assign pcie_endpoint_cmp_sink_first = pcie_endpoint_slave_sink_first;
assign pcie_endpoint_cmp_sink_last = pcie_endpoint_slave_sink_last;
assign pcie_endpoint_cmp_sink_payload_adr = pcie_endpoint_slave_sink_payload_adr;
assign pcie_endpoint_cmp_sink_payload_len = pcie_endpoint_slave_sink_payload_len;
assign pcie_endpoint_cmp_sink_payload_end = pcie_endpoint_slave_sink_payload_end;
assign pcie_endpoint_cmp_sink_payload_req_id = pcie_endpoint_slave_sink_payload_req_id;
assign pcie_endpoint_cmp_sink_payload_cmp_id = pcie_endpoint_slave_sink_payload_cmp_id;
assign pcie_endpoint_cmp_sink_payload_err = pcie_endpoint_slave_sink_payload_err;
assign pcie_endpoint_cmp_sink_payload_tag = pcie_endpoint_slave_sink_payload_tag;
assign pcie_endpoint_cmp_sink_payload_dat = pcie_endpoint_slave_sink_payload_dat;
assign pcie_endpoint_cmp_sink_payload_channel = pcie_endpoint_slave_sink_payload_channel;
assign pcie_endpoint_cmp_sink_payload_user_id = pcie_endpoint_slave_sink_payload_user_id;
assign pcie_endpoint_req_sink_valid = pcie_endpoint_master_sink_valid;
assign pcie_endpoint_master_sink_ready = pcie_endpoint_req_sink_ready;
assign pcie_endpoint_req_sink_first = pcie_endpoint_master_sink_first;
assign pcie_endpoint_req_sink_last = pcie_endpoint_master_sink_last;
assign pcie_endpoint_req_sink_payload_we = pcie_endpoint_master_sink_payload_we;
assign pcie_endpoint_req_sink_payload_adr = pcie_endpoint_master_sink_payload_adr;
assign pcie_endpoint_req_sink_payload_len = pcie_endpoint_master_sink_payload_len;
assign pcie_endpoint_req_sink_payload_req_id = pcie_endpoint_master_sink_payload_req_id;
assign pcie_endpoint_req_sink_payload_tag = pcie_endpoint_master_sink_payload_tag;
assign pcie_endpoint_req_sink_payload_dat = pcie_endpoint_master_sink_payload_dat;
assign pcie_endpoint_req_sink_payload_channel = pcie_endpoint_master_sink_payload_channel;
assign pcie_endpoint_req_sink_payload_user_id = pcie_endpoint_master_sink_payload_user_id;
assign pcie_endpoint_master_source_valid = pcie_endpoint_litepcietlpdepacketizer_cmp_source_valid;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_ready = pcie_endpoint_master_source_ready;
assign pcie_endpoint_master_source_first = pcie_endpoint_litepcietlpdepacketizer_cmp_source_first;
assign pcie_endpoint_master_source_last = pcie_endpoint_litepcietlpdepacketizer_cmp_source_last;
assign pcie_endpoint_master_source_payload_adr = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_adr;
assign pcie_endpoint_master_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_len;
assign pcie_endpoint_master_source_payload_end = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_end;
assign pcie_endpoint_master_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_req_id;
assign pcie_endpoint_master_source_payload_cmp_id = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_cmp_id;
assign pcie_endpoint_master_source_payload_err = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_err;
assign pcie_endpoint_master_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_tag;
assign pcie_endpoint_master_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_dat;
assign pcie_endpoint_master_source_payload_channel = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_channel;
assign pcie_endpoint_master_source_payload_user_id = pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_user_id;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid = pcie_endpoint_litepcietlpdepacketizer_sink_sink_valid;
assign pcie_endpoint_litepcietlpdepacketizer_sink_sink_ready = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_first = pcie_endpoint_litepcietlpdepacketizer_sink_sink_first;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last = pcie_endpoint_litepcietlpdepacketizer_sink_sink_last;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat = pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be = pcie_endpoint_litepcietlpdepacketizer_sink_sink_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid;
assign pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_ready = pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
assign pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd0;
	if ((({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 1'd0) | ({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 7'd64))) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd0;
	end else begin
		if ((({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 7'd74) | ({pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type} == 4'd10))) begin
			pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd1;
		end
	end
end
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid = pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid;
assign pcie_endpoint_litepcietlpdepacketizer_endpoint0_ready = pcie_endpoint_litepcietlpdepacketizer_tlp_req_ready;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_first = pcie_endpoint_litepcietlpdepacketizer_endpoint0_first;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_last = pcie_endpoint_litepcietlpdepacketizer_endpoint0_last;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_dat = pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_be = pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_address = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[95:66];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_attr = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[13:12];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_ep = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[14];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_first_be = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[35:32];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
end
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_last_be = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[39:36];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_length = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[9:0];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_requester_id = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[63:48];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tag = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[47:40];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tc = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[22:20];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_td = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[15];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type <= pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type;
	pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
end
assign pcie_endpoint_litepcietlpdepacketizer_req_source_valid = pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_we = (pcie_endpoint_litepcietlpdepacketizer_tlp_req_valid & ({pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_fmt, pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_type} == 7'd64));
assign pcie_endpoint_litepcietlpdepacketizer_tlp_req_ready = pcie_endpoint_litepcietlpdepacketizer_req_source_ready;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_first = pcie_endpoint_litepcietlpdepacketizer_tlp_req_first;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_last = pcie_endpoint_litepcietlpdepacketizer_tlp_req_last;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_adr = {($signed({1'd0, pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_address}) & 33'sd4295098367), pcie_endpoint_litepcietlpdepacketizer};
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_length;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_requester_id;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_tag;
assign pcie_endpoint_litepcietlpdepacketizer_req_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_tlp_req_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_valid = pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid;
assign pcie_endpoint_litepcietlpdepacketizer_endpoint1_ready = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_ready;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_first = pcie_endpoint_litepcietlpdepacketizer_endpoint1_first;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_last = pcie_endpoint_litepcietlpdepacketizer_endpoint1_last;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_dat = pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_be = pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_attr = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[13:12];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_bcm = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[44];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_byte_count = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[43:32];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_completer_id = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[63:48];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_ep = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[14];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
end
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[9:0];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_lower_address = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[70:64];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_requester_id = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[95:80];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_status = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[47:45];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tag = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[79:72];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tc = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[22:20];
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_td = pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[15];
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type <= pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type;
	pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_type <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
end
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_valid = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_valid;
assign pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_ready = pcie_endpoint_litepcietlpdepacketizer_cmp_source_ready;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_first = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_first;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_last = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_last;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_len = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_end = (pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_length == pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_byte_count[11:2]);
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_adr = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_lower_address;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_req_id = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_requester_id;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_cmp_id = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_completer_id;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_err = (pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_status != 1'd0);
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_tag = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_tag;
assign pcie_endpoint_litepcietlpdepacketizer_cmp_source_payload_dat = pcie_endpoint_litepcietlpdepacketizer_tlp_cmp_payload_dat;
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat <= 128'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat[31:0] <= {slice_proxy3[7:0], slice_proxy2[15:8], slice_proxy1[23:16], slice_proxy0[31:24]};
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat[63:32] <= {slice_proxy7[7:0], slice_proxy6[15:8], slice_proxy5[23:16], slice_proxy4[31:24]};
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat[95:64] <= {slice_proxy11[7:0], slice_proxy10[15:8], slice_proxy9[23:16], slice_proxy8[31:24]};
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_dat[127:96] <= {slice_proxy15[7:0], slice_proxy14[15:8], slice_proxy13[23:16], slice_proxy12[31:24]};
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be <= 16'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be[3:0] <= {slice_proxy19[0], slice_proxy18[1], slice_proxy17[2], slice_proxy16[3]};
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4] <= {slice_proxy23[0], slice_proxy22[1], slice_proxy21[2], slice_proxy20[3]};
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be[11:8] <= {slice_proxy27[0], slice_proxy26[1], slice_proxy25[2], slice_proxy24[3]};
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4] <= {slice_proxy31[0], slice_proxy30[1], slice_proxy29[2], slice_proxy28[3]};
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value0 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce0 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value1 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce1 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value2 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce2 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value3 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce3 <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_state <= 2'd0;
	subfragments_litepcietlpdepacketizer_next_state <= subfragments_litepcietlpdepacketizer_state;
	case (subfragments_litepcietlpdepacketizer_state)
		1'd1: begin
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready <= 1'd1;
			if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid) begin
				subfragments_litepcietlpdepacketizer_next_value0 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
				subfragments_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value1 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[63:32];
				subfragments_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value2 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[95:64];
				subfragments_litepcietlpdepacketizer_next_value_ce2 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value3 <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[127:96];
				subfragments_litepcietlpdepacketizer_next_value_ce3 <= 1'd1;
				if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last) begin
					pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd1;
					pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
				end
				subfragments_litepcietlpdepacketizer_next_state <= 2'd2;
			end
		end
		2'd2: begin
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid <= (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid | pcie_endpoint_litepcietlpdepacketizer_header_extracter_last);
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_first <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_first;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last <= (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_last | pcie_endpoint_litepcietlpdepacketizer_header_extracter_last);
			if ((pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_valid & pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_ready)) begin
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
				pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready <= (1'd1 & (~pcie_endpoint_litepcietlpdepacketizer_header_extracter_last));
				if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_last) begin
					subfragments_litepcietlpdepacketizer_next_state <= 1'd0;
				end
			end
		end
		default: begin
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd1;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
			pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
			if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid) begin
				subfragments_litepcietlpdepacketizer_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 <= 1'd0;
	if (pcie_endpoint_litepcietlpdepacketizer_dispatcher_first) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 <= pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0;
	end else begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1 <= pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing;
	end
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_last <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat <= 128'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be <= 16'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_first <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_last <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt <= 2'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type <= 5'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat <= 128'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be <= 16'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= 1'd0;
	pcie_endpoint_litepcietlpdepacketizer_endpoint1_first <= 1'd0;
	case (pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel1)
		1'd0: begin
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_valid <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid;
			pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= pcie_endpoint_litepcietlpdepacketizer_endpoint0_ready;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_first <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_last <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_type <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_dat <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat;
			pcie_endpoint_litepcietlpdepacketizer_endpoint0_payload_be <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be;
		end
		1'd1: begin
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_valid <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid;
			pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= pcie_endpoint_litepcietlpdepacketizer_endpoint1_ready;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_first <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_first;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_last <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_fmt <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_fmt;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_type <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_type;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_dat <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_dat;
			pcie_endpoint_litepcietlpdepacketizer_endpoint1_payload_be <= pcie_endpoint_litepcietlpdepacketizer_dispatch_source_payload_be;
		end
		default: begin
			pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_last <= 1'd0;
	if (pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_last <= (pcie_endpoint_litepcietlpdepacketizer_dispatch_source_last & pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready);
	end
end
assign pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing0 = ((pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid | pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1) & (~pcie_endpoint_litepcietlpdepacketizer_dispatcher_last));
assign pcie_endpoint_tlp_req_valid = pcie_endpoint_req_sink_valid;
assign pcie_endpoint_req_sink_ready = pcie_endpoint_tlp_req_ready;
assign pcie_endpoint_tlp_req_first = pcie_endpoint_req_sink_first;
assign pcie_endpoint_tlp_req_last = pcie_endpoint_req_sink_last;
always @(*) begin
	pcie_endpoint_tlp_req_payload_type <= 5'd0;
	pcie_endpoint_tlp_req_payload_fmt <= 2'd0;
	if (pcie_endpoint_req_sink_payload_we) begin
		{pcie_endpoint_tlp_req_payload_fmt, pcie_endpoint_tlp_req_payload_type} <= 7'd64;
	end else begin
		{pcie_endpoint_tlp_req_payload_fmt, pcie_endpoint_tlp_req_payload_type} <= 1'd0;
	end
end
assign pcie_endpoint_tlp_req_payload_tc = 1'd0;
assign pcie_endpoint_tlp_req_payload_td = 1'd0;
assign pcie_endpoint_tlp_req_payload_ep = 1'd0;
assign pcie_endpoint_tlp_req_payload_attr = 1'd0;
assign pcie_endpoint_tlp_req_payload_length = pcie_endpoint_req_sink_payload_len;
assign pcie_endpoint_tlp_req_payload_requester_id = pcie_endpoint_req_sink_payload_req_id;
assign pcie_endpoint_tlp_req_payload_tag = pcie_endpoint_req_sink_payload_tag;
always @(*) begin
	pcie_endpoint_tlp_req_payload_last_be <= 4'd0;
	if ((pcie_endpoint_req_sink_payload_len > 1'd1)) begin
		pcie_endpoint_tlp_req_payload_last_be <= 4'd15;
	end else begin
		pcie_endpoint_tlp_req_payload_last_be <= 1'd0;
	end
end
assign pcie_endpoint_tlp_req_payload_first_be = 4'd15;
assign pcie_endpoint_tlp_req_payload_address = pcie_endpoint_req_sink_payload_adr[31:2];
assign pcie_endpoint_tlp_req_payload_dat = pcie_endpoint_req_sink_payload_dat;
always @(*) begin
	pcie_endpoint_tlp_req_payload_be <= 16'd0;
	if (pcie_endpoint_req_sink_payload_we) begin
		pcie_endpoint_tlp_req_payload_be <= 8'd255;
	end else begin
		pcie_endpoint_tlp_req_payload_be <= 1'd0;
	end
end
assign pcie_endpoint_tlp_raw_req_valid = pcie_endpoint_tlp_req_valid;
assign pcie_endpoint_tlp_req_ready = pcie_endpoint_tlp_raw_req_ready;
assign pcie_endpoint_tlp_raw_req_first = pcie_endpoint_tlp_req_first;
assign pcie_endpoint_tlp_raw_req_last = pcie_endpoint_tlp_req_last;
always @(*) begin
	pcie_endpoint_tlp_raw_req_payload_header <= 128'd0;
	pcie_endpoint_tlp_raw_req_payload_header[95:66] <= pcie_endpoint_tlp_req_payload_address;
	pcie_endpoint_tlp_raw_req_payload_header[13:12] <= pcie_endpoint_tlp_req_payload_attr;
	pcie_endpoint_tlp_raw_req_payload_header[14] <= pcie_endpoint_tlp_req_payload_ep;
	pcie_endpoint_tlp_raw_req_payload_header[35:32] <= pcie_endpoint_tlp_req_payload_first_be;
	pcie_endpoint_tlp_raw_req_payload_header[30:29] <= pcie_endpoint_tlp_req_payload_fmt;
	pcie_endpoint_tlp_raw_req_payload_header[39:36] <= pcie_endpoint_tlp_req_payload_last_be;
	pcie_endpoint_tlp_raw_req_payload_header[9:0] <= pcie_endpoint_tlp_req_payload_length;
	pcie_endpoint_tlp_raw_req_payload_header[63:48] <= pcie_endpoint_tlp_req_payload_requester_id;
	pcie_endpoint_tlp_raw_req_payload_header[47:40] <= pcie_endpoint_tlp_req_payload_tag;
	pcie_endpoint_tlp_raw_req_payload_header[22:20] <= pcie_endpoint_tlp_req_payload_tc;
	pcie_endpoint_tlp_raw_req_payload_header[15] <= pcie_endpoint_tlp_req_payload_td;
	pcie_endpoint_tlp_raw_req_payload_header[28:24] <= pcie_endpoint_tlp_req_payload_type;
end
assign pcie_endpoint_tlp_raw_req_payload_dat = pcie_endpoint_tlp_req_payload_dat;
assign pcie_endpoint_tlp_raw_req_payload_be = pcie_endpoint_tlp_req_payload_be;
assign pcie_endpoint_tlp_cmp_valid = pcie_endpoint_cmp_sink_valid;
assign pcie_endpoint_cmp_sink_ready = pcie_endpoint_tlp_cmp_ready;
assign pcie_endpoint_tlp_cmp_first = pcie_endpoint_cmp_sink_first;
assign pcie_endpoint_tlp_cmp_last = pcie_endpoint_cmp_sink_last;
assign pcie_endpoint_tlp_cmp_payload_tc = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_td = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_ep = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_attr = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_length = pcie_endpoint_cmp_sink_payload_len;
assign pcie_endpoint_tlp_cmp_payload_completer_id = pcie_endpoint_cmp_sink_payload_cmp_id;
always @(*) begin
	pcie_endpoint_tlp_cmp_payload_fmt <= 2'd0;
	pcie_endpoint_tlp_cmp_payload_status <= 3'd0;
	pcie_endpoint_tlp_cmp_payload_type <= 5'd0;
	if (pcie_endpoint_cmp_sink_payload_err) begin
		{pcie_endpoint_tlp_cmp_payload_fmt, pcie_endpoint_tlp_cmp_payload_type} <= 4'd10;
		pcie_endpoint_tlp_cmp_payload_status <= 1'd1;
	end else begin
		{pcie_endpoint_tlp_cmp_payload_fmt, pcie_endpoint_tlp_cmp_payload_type} <= 7'd74;
		pcie_endpoint_tlp_cmp_payload_status <= 1'd0;
	end
end
assign pcie_endpoint_tlp_cmp_payload_bcm = 1'd0;
assign pcie_endpoint_tlp_cmp_payload_byte_count = (pcie_endpoint_cmp_sink_payload_len * 3'd4);
assign pcie_endpoint_tlp_cmp_payload_requester_id = pcie_endpoint_cmp_sink_payload_req_id;
assign pcie_endpoint_tlp_cmp_payload_tag = pcie_endpoint_cmp_sink_payload_tag;
assign pcie_endpoint_tlp_cmp_payload_lower_address = pcie_endpoint_cmp_sink_payload_adr;
assign pcie_endpoint_tlp_cmp_payload_dat = pcie_endpoint_cmp_sink_payload_dat;
assign pcie_endpoint_tlp_cmp_payload_be = 8'd255;
assign pcie_endpoint_tlp_raw_cmp_valid = pcie_endpoint_tlp_cmp_valid;
assign pcie_endpoint_tlp_cmp_ready = pcie_endpoint_tlp_raw_cmp_ready;
assign pcie_endpoint_tlp_raw_cmp_first = pcie_endpoint_tlp_cmp_first;
assign pcie_endpoint_tlp_raw_cmp_last = pcie_endpoint_tlp_cmp_last;
always @(*) begin
	pcie_endpoint_tlp_raw_cmp_payload_header <= 128'd0;
	pcie_endpoint_tlp_raw_cmp_payload_header[13:12] <= pcie_endpoint_tlp_cmp_payload_attr;
	pcie_endpoint_tlp_raw_cmp_payload_header[44] <= pcie_endpoint_tlp_cmp_payload_bcm;
	pcie_endpoint_tlp_raw_cmp_payload_header[43:32] <= pcie_endpoint_tlp_cmp_payload_byte_count;
	pcie_endpoint_tlp_raw_cmp_payload_header[63:48] <= pcie_endpoint_tlp_cmp_payload_completer_id;
	pcie_endpoint_tlp_raw_cmp_payload_header[14] <= pcie_endpoint_tlp_cmp_payload_ep;
	pcie_endpoint_tlp_raw_cmp_payload_header[30:29] <= pcie_endpoint_tlp_cmp_payload_fmt;
	pcie_endpoint_tlp_raw_cmp_payload_header[9:0] <= pcie_endpoint_tlp_cmp_payload_length;
	pcie_endpoint_tlp_raw_cmp_payload_header[70:64] <= pcie_endpoint_tlp_cmp_payload_lower_address;
	pcie_endpoint_tlp_raw_cmp_payload_header[95:80] <= pcie_endpoint_tlp_cmp_payload_requester_id;
	pcie_endpoint_tlp_raw_cmp_payload_header[47:45] <= pcie_endpoint_tlp_cmp_payload_status;
	pcie_endpoint_tlp_raw_cmp_payload_header[79:72] <= pcie_endpoint_tlp_cmp_payload_tag;
	pcie_endpoint_tlp_raw_cmp_payload_header[22:20] <= pcie_endpoint_tlp_cmp_payload_tc;
	pcie_endpoint_tlp_raw_cmp_payload_header[15] <= pcie_endpoint_tlp_cmp_payload_td;
	pcie_endpoint_tlp_raw_cmp_payload_header[28:24] <= pcie_endpoint_tlp_cmp_payload_type;
end
assign pcie_endpoint_tlp_raw_cmp_payload_dat = pcie_endpoint_tlp_cmp_payload_dat;
assign pcie_endpoint_tlp_raw_cmp_payload_be = pcie_endpoint_tlp_cmp_payload_be;
assign pcie_endpoint_header_inserter_sink_valid = pcie_endpoint_tlp_raw_valid;
assign pcie_endpoint_tlp_raw_ready = pcie_endpoint_header_inserter_sink_ready;
assign pcie_endpoint_header_inserter_sink_first = pcie_endpoint_tlp_raw_first;
assign pcie_endpoint_header_inserter_sink_last = pcie_endpoint_tlp_raw_last;
assign pcie_endpoint_header_inserter_sink_payload_header = pcie_endpoint_tlp_raw_payload_header;
assign pcie_endpoint_header_inserter_sink_payload_dat = pcie_endpoint_tlp_raw_payload_dat;
assign pcie_endpoint_header_inserter_sink_payload_be = pcie_endpoint_tlp_raw_payload_be;
assign pcie_endpoint_source_source_valid = pcie_endpoint_header_inserter_source_valid;
assign pcie_endpoint_header_inserter_source_ready = pcie_endpoint_source_source_ready;
assign pcie_endpoint_source_source_first = pcie_endpoint_header_inserter_source_first;
assign pcie_endpoint_source_source_last = pcie_endpoint_header_inserter_source_last;
assign pcie_endpoint_source_source_payload_dat = pcie_endpoint_header_inserter_source_payload_dat;
assign pcie_endpoint_source_source_payload_be = pcie_endpoint_header_inserter_source_payload_be;
always @(*) begin
	pcie_endpoint_request <= 2'd0;
	pcie_endpoint_request[0] <= pcie_endpoint_status0_ongoing0;
	pcie_endpoint_request[1] <= pcie_endpoint_status1_ongoing0;
end
always @(*) begin
	pcie_endpoint_tlp_raw_valid <= 1'd0;
	pcie_endpoint_tlp_raw_first <= 1'd0;
	pcie_endpoint_tlp_raw_last <= 1'd0;
	pcie_endpoint_tlp_raw_cmp_ready <= 1'd0;
	pcie_endpoint_tlp_raw_payload_header <= 128'd0;
	pcie_endpoint_tlp_raw_payload_dat <= 128'd0;
	pcie_endpoint_tlp_raw_payload_be <= 16'd0;
	pcie_endpoint_tlp_raw_req_ready <= 1'd0;
	case (pcie_endpoint_grant)
		1'd0: begin
			pcie_endpoint_tlp_raw_valid <= pcie_endpoint_tlp_raw_req_valid;
			pcie_endpoint_tlp_raw_req_ready <= pcie_endpoint_tlp_raw_ready;
			pcie_endpoint_tlp_raw_first <= pcie_endpoint_tlp_raw_req_first;
			pcie_endpoint_tlp_raw_last <= pcie_endpoint_tlp_raw_req_last;
			pcie_endpoint_tlp_raw_payload_header <= pcie_endpoint_tlp_raw_req_payload_header;
			pcie_endpoint_tlp_raw_payload_dat <= pcie_endpoint_tlp_raw_req_payload_dat;
			pcie_endpoint_tlp_raw_payload_be <= pcie_endpoint_tlp_raw_req_payload_be;
		end
		1'd1: begin
			pcie_endpoint_tlp_raw_valid <= pcie_endpoint_tlp_raw_cmp_valid;
			pcie_endpoint_tlp_raw_cmp_ready <= pcie_endpoint_tlp_raw_ready;
			pcie_endpoint_tlp_raw_first <= pcie_endpoint_tlp_raw_cmp_first;
			pcie_endpoint_tlp_raw_last <= pcie_endpoint_tlp_raw_cmp_last;
			pcie_endpoint_tlp_raw_payload_header <= pcie_endpoint_tlp_raw_cmp_payload_header;
			pcie_endpoint_tlp_raw_payload_dat <= pcie_endpoint_tlp_raw_cmp_payload_dat;
			pcie_endpoint_tlp_raw_payload_be <= pcie_endpoint_tlp_raw_cmp_payload_be;
		end
	endcase
end
always @(*) begin
	pcie_endpoint_status0_last <= 1'd0;
	if (pcie_endpoint_tlp_raw_req_valid) begin
		pcie_endpoint_status0_last <= (pcie_endpoint_tlp_raw_req_last & pcie_endpoint_tlp_raw_req_ready);
	end
end
assign pcie_endpoint_status0_ongoing0 = ((pcie_endpoint_tlp_raw_req_valid | pcie_endpoint_status0_ongoing1) & (~pcie_endpoint_status0_last));
always @(*) begin
	pcie_endpoint_status1_last <= 1'd0;
	if (pcie_endpoint_tlp_raw_cmp_valid) begin
		pcie_endpoint_status1_last <= (pcie_endpoint_tlp_raw_cmp_last & pcie_endpoint_tlp_raw_cmp_ready);
	end
end
assign pcie_endpoint_status1_ongoing0 = ((pcie_endpoint_tlp_raw_cmp_valid | pcie_endpoint_status1_ongoing1) & (~pcie_endpoint_status1_last));
always @(*) begin
	pcie_endpoint_header_inserter_source_payload_dat <= 128'd0;
	pcie_endpoint_header_inserter_source_payload_be <= 16'd0;
	subfragments_litepcietlppacketizer_next_state <= 1'd0;
	pcie_endpoint_header_inserter_source_valid <= 1'd0;
	pcie_endpoint_header_inserter_source_first <= 1'd0;
	pcie_endpoint_header_inserter_sink_ready <= 1'd0;
	pcie_endpoint_header_inserter_source_last <= 1'd0;
	subfragments_litepcietlppacketizer_next_state <= subfragments_litepcietlppacketizer_state;
	case (subfragments_litepcietlppacketizer_state)
		1'd1: begin
			pcie_endpoint_header_inserter_source_valid <= (pcie_endpoint_header_inserter_sink_valid | pcie_endpoint_header_inserter_last);
			pcie_endpoint_header_inserter_source_last <= pcie_endpoint_header_inserter_last;
			pcie_endpoint_header_inserter_source_payload_dat[31:0] <= {rhs_slice_proxy3[7:0], rhs_slice_proxy2[15:8], rhs_slice_proxy1[23:16], rhs_slice_proxy0[31:24]};
			pcie_endpoint_header_inserter_source_payload_be[3:0] <= 4'd15;
			pcie_endpoint_header_inserter_source_payload_dat[63:32] <= {rhs_slice_proxy7[7:0], rhs_slice_proxy6[15:8], rhs_slice_proxy5[23:16], rhs_slice_proxy4[31:24]};
			pcie_endpoint_header_inserter_source_payload_be[7:4] <= 4'd15;
			pcie_endpoint_header_inserter_source_payload_dat[95:64] <= {rhs_slice_proxy11[7:0], rhs_slice_proxy10[15:8], rhs_slice_proxy9[23:16], rhs_slice_proxy8[31:24]};
			pcie_endpoint_header_inserter_source_payload_be[11:8] <= 4'd15;
			pcie_endpoint_header_inserter_source_payload_dat[127:96] <= {rhs_slice_proxy15[7:0], rhs_slice_proxy14[15:8], rhs_slice_proxy13[23:16], rhs_slice_proxy12[31:24]};
			if (pcie_endpoint_header_inserter_last) begin
				pcie_endpoint_header_inserter_source_payload_be[15:12] <= 1'd0;
			end else begin
				pcie_endpoint_header_inserter_source_payload_be[15:12] <= 4'd15;
			end
			if ((pcie_endpoint_header_inserter_source_valid & pcie_endpoint_header_inserter_source_ready)) begin
				pcie_endpoint_header_inserter_sink_ready <= (~pcie_endpoint_header_inserter_last);
				if (pcie_endpoint_header_inserter_source_last) begin
					subfragments_litepcietlppacketizer_next_state <= 1'd0;
				end
			end
		end
		default: begin
			pcie_endpoint_header_inserter_sink_ready <= 1'd1;
			if ((pcie_endpoint_header_inserter_sink_valid & pcie_endpoint_header_inserter_sink_first)) begin
				pcie_endpoint_header_inserter_sink_ready <= 1'd0;
				pcie_endpoint_header_inserter_source_valid <= 1'd1;
				pcie_endpoint_header_inserter_source_first <= 1'd1;
				pcie_endpoint_header_inserter_source_last <= pcie_endpoint_header_inserter_sink_last;
				pcie_endpoint_header_inserter_source_payload_dat[31:0] <= pcie_endpoint_header_inserter_sink_payload_header[31:0];
				pcie_endpoint_header_inserter_source_payload_be[3:0] <= 4'd15;
				pcie_endpoint_header_inserter_source_payload_dat[63:32] <= pcie_endpoint_header_inserter_sink_payload_header[63:32];
				pcie_endpoint_header_inserter_source_payload_be[7:4] <= 4'd15;
				pcie_endpoint_header_inserter_source_payload_dat[95:64] <= pcie_endpoint_header_inserter_sink_payload_header[95:64];
				pcie_endpoint_header_inserter_source_payload_be[11:8] <= 4'd15;
				pcie_endpoint_header_inserter_source_payload_dat[127:96] <= {t_slice_proxy3[7:0], t_slice_proxy2[15:8], t_slice_proxy1[23:16], t_slice_proxy0[31:24]};
				pcie_endpoint_header_inserter_source_payload_be[15:12] <= {t_slice_proxy7[0], t_slice_proxy6[1], t_slice_proxy5[2], t_slice_proxy4[3]};
				if ((pcie_endpoint_header_inserter_source_valid & pcie_endpoint_header_inserter_source_ready)) begin
					pcie_endpoint_header_inserter_sink_ready <= 1'd1;
					if ((~pcie_endpoint_header_inserter_source_last)) begin
						subfragments_litepcietlppacketizer_next_state <= 1'd1;
					end
				end
			end
		end
	endcase
end
assign subfragments_sel = 1'd1;
always @(*) begin
	subfragments_dispatcher0_sel0 <= 3'd0;
	subfragments_dispatcher0_sel0[0] <= (subfragments_master_in_source_payload_channel == 1'd1);
	subfragments_dispatcher0_sel0[1] <= (subfragments_master_in_source_payload_channel == 2'd3);
	subfragments_dispatcher0_sel0[2] <= (subfragments_master_in_source_payload_channel == 3'd5);
end
always @(*) begin
	subfragments_dispatcher1_sel0 <= 3'd0;
	subfragments_dispatcher1_sel0[0] <= (subfragments_source_payload_channel == 1'd0);
	subfragments_dispatcher1_sel0[1] <= (subfragments_source_payload_channel == 2'd2);
	subfragments_dispatcher1_sel0[2] <= (subfragments_source_payload_channel == 3'd4);
end
assign subfragments_master_out_source_valid = pcie_endpoint_master_source_valid;
assign pcie_endpoint_master_source_ready = subfragments_master_out_source_ready;
assign subfragments_master_out_source_first = pcie_endpoint_master_source_first;
assign subfragments_master_out_source_last = pcie_endpoint_master_source_last;
assign subfragments_master_out_source_payload_adr = pcie_endpoint_master_source_payload_adr;
assign subfragments_master_out_source_payload_len = pcie_endpoint_master_source_payload_len;
assign subfragments_master_out_source_payload_end = pcie_endpoint_master_source_payload_end;
assign subfragments_master_out_source_payload_req_id = pcie_endpoint_master_source_payload_req_id;
assign subfragments_master_out_source_payload_cmp_id = pcie_endpoint_master_source_payload_cmp_id;
assign subfragments_master_out_source_payload_err = pcie_endpoint_master_source_payload_err;
assign subfragments_master_out_source_payload_tag = pcie_endpoint_master_source_payload_tag;
assign subfragments_master_out_source_payload_dat = pcie_endpoint_master_source_payload_dat;
assign subfragments_master_out_source_payload_channel = pcie_endpoint_master_source_payload_channel;
assign subfragments_master_out_source_payload_user_id = pcie_endpoint_master_source_payload_user_id;
assign source_valid = pcie_endpoint_slave_source_valid;
assign pcie_endpoint_slave_source_ready = source_ready;
assign source_first = pcie_endpoint_slave_source_first;
assign source_last = pcie_endpoint_slave_source_last;
assign source_payload_we = pcie_endpoint_slave_source_payload_we;
assign source_payload_adr = pcie_endpoint_slave_source_payload_adr;
assign source_payload_len = pcie_endpoint_slave_source_payload_len;
assign source_payload_req_id = pcie_endpoint_slave_source_payload_req_id;
assign source_payload_tag = pcie_endpoint_slave_source_payload_tag;
assign source_payload_dat = pcie_endpoint_slave_source_payload_dat;
assign source_payload_channel = pcie_endpoint_slave_source_payload_channel;
assign source_payload_user_id = pcie_endpoint_slave_source_payload_user_id;
assign pcie_endpoint_slave_sink_valid = sink_valid;
assign sink_ready = pcie_endpoint_slave_sink_ready;
assign pcie_endpoint_slave_sink_first = sink_first;
assign pcie_endpoint_slave_sink_last = sink_last;
assign pcie_endpoint_slave_sink_payload_adr = sink_payload_adr;
assign pcie_endpoint_slave_sink_payload_len = sink_payload_len;
assign pcie_endpoint_slave_sink_payload_end = sink_payload_end;
assign pcie_endpoint_slave_sink_payload_req_id = sink_payload_req_id;
assign pcie_endpoint_slave_sink_payload_cmp_id = sink_payload_cmp_id;
assign pcie_endpoint_slave_sink_payload_err = sink_payload_err;
assign pcie_endpoint_slave_sink_payload_tag = sink_payload_tag;
assign pcie_endpoint_slave_sink_payload_dat = sink_payload_dat;
assign pcie_endpoint_slave_sink_payload_channel = sink_payload_channel;
assign pcie_endpoint_slave_sink_payload_user_id = sink_payload_user_id;
assign subfragments_master_out_sink_first = subfragments_master_in_sink_first;
assign subfragments_master_out_sink_last = subfragments_master_in_sink_last;
assign subfragments_master_out_sink_payload_we = subfragments_master_in_sink_payload_we;
assign subfragments_master_out_sink_payload_adr = subfragments_master_in_sink_payload_adr;
assign subfragments_master_out_sink_payload_len = subfragments_master_in_sink_payload_len;
assign subfragments_master_out_sink_payload_req_id = subfragments_master_in_sink_payload_req_id;
assign subfragments_master_out_sink_payload_dat = subfragments_master_in_sink_payload_dat;
assign subfragments_master_out_sink_payload_channel = subfragments_master_in_sink_payload_channel;
assign subfragments_master_out_sink_payload_user_id = subfragments_master_in_sink_payload_user_id;
assign subfragments_requests_queue_sink_payload_tag = subfragments_tags_queue_source_payload_tag;
assign subfragments_requests_queue_sink_payload_channel = subfragments_master_in_sink_payload_channel;
assign subfragments_requests_queue_sink_payload_user_id = subfragments_master_in_sink_payload_user_id;
always @(*) begin
	subfragments_syncfifo2_sink_valid <= 1'd0;
	subfragments_syncfifo0_sink_valid <= 1'd0;
	subfragments_syncfifo2_sink_first <= 1'd0;
	subfragments_syncfifo0_sink_first <= 1'd0;
	subfragments_syncfifo2_sink_last <= 1'd0;
	subfragments_syncfifo0_sink_last <= 1'd0;
	subfragments_syncfifo2_sink_payload_adr <= 32'd0;
	subfragments_syncfifo0_sink_payload_adr <= 32'd0;
	subfragments_syncfifo2_sink_payload_len <= 10'd0;
	subfragments_syncfifo0_sink_payload_len <= 10'd0;
	subfragments_syncfifo2_sink_payload_end <= 1'd0;
	subfragments_syncfifo0_sink_payload_end <= 1'd0;
	subfragments_syncfifo2_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo0_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo2_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo0_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo2_sink_payload_err <= 1'd0;
	subfragments_syncfifo0_sink_payload_err <= 1'd0;
	subfragments_syncfifo2_sink_payload_tag <= 8'd0;
	subfragments_syncfifo0_sink_payload_tag <= 8'd0;
	subfragments_syncfifo2_sink_payload_dat <= 128'd0;
	subfragments_syncfifo0_sink_payload_dat <= 128'd0;
	subfragments_syncfifo2_sink_payload_channel <= 8'd0;
	subfragments_syncfifo0_sink_payload_channel <= 8'd0;
	subfragments_syncfifo2_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo0_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo3_sink_valid <= 1'd0;
	subfragments_syncfifo1_sink_valid <= 1'd0;
	subfragments_syncfifo3_sink_first <= 1'd0;
	subfragments_syncfifo1_sink_first <= 1'd0;
	subfragments_syncfifo3_sink_last <= 1'd0;
	subfragments_syncfifo1_sink_last <= 1'd0;
	subfragments_syncfifo3_sink_payload_adr <= 32'd0;
	subfragments_syncfifo1_sink_payload_adr <= 32'd0;
	subfragments_syncfifo3_sink_payload_len <= 10'd0;
	subfragments_syncfifo1_sink_payload_len <= 10'd0;
	subfragments_syncfifo3_sink_payload_end <= 1'd0;
	subfragments_syncfifo1_sink_payload_end <= 1'd0;
	subfragments_syncfifo3_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo3_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo3_sink_payload_err <= 1'd0;
	subfragments_syncfifo1_sink_payload_err <= 1'd0;
	subfragments_syncfifo3_sink_payload_tag <= 8'd0;
	subfragments_syncfifo1_sink_payload_tag <= 8'd0;
	subfragments_syncfifo3_sink_payload_dat <= 128'd0;
	subfragments_syncfifo1_sink_payload_dat <= 128'd0;
	subfragments_syncfifo3_sink_payload_channel <= 8'd0;
	subfragments_syncfifo1_sink_payload_channel <= 8'd0;
	subfragments_syncfifo3_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo1_sink_payload_user_id <= 8'd0;
	subfragments_cmp_reorder_ready <= 1'd0;
	case (subfragments_cmp_reorder_payload_tag)
		1'd0: begin
			subfragments_syncfifo0_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo0_sink_ready;
			subfragments_syncfifo0_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo0_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo0_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo0_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo0_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo0_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo0_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo0_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo0_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo0_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo0_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo0_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		1'd1: begin
			subfragments_syncfifo1_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo1_sink_ready;
			subfragments_syncfifo1_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo1_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo1_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo1_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo1_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo1_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo1_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo1_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo1_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo1_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo1_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo1_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		2'd2: begin
			subfragments_syncfifo2_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo2_sink_ready;
			subfragments_syncfifo2_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo2_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo2_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo2_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo2_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo2_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo2_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo2_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo2_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo2_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo2_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo2_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		2'd3: begin
			subfragments_syncfifo3_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo3_sink_ready;
			subfragments_syncfifo3_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo3_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo3_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo3_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo3_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo3_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo3_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo3_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo3_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo3_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo3_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo3_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		default: begin
			subfragments_cmp_reorder_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	subfragments_requests_queue_source_ready <= 1'd0;
	if (((subfragments_master_in_source_valid & subfragments_master_in_source_last) & subfragments_master_in_source_payload_end)) begin
		subfragments_requests_queue_source_ready <= subfragments_master_in_source_ready;
	end
end
always @(*) begin
	subfragments_master_in_source_valid <= 1'd0;
	subfragments_master_in_source_first <= 1'd0;
	subfragments_master_in_source_last <= 1'd0;
	subfragments_master_in_source_payload_adr <= 32'd0;
	subfragments_master_in_source_payload_len <= 10'd0;
	subfragments_master_in_source_payload_end <= 1'd0;
	subfragments_master_in_source_payload_req_id <= 16'd0;
	subfragments_syncfifo2_source_ready <= 1'd0;
	subfragments_master_in_source_payload_cmp_id <= 16'd0;
	subfragments_syncfifo0_source_ready <= 1'd0;
	subfragments_master_in_source_payload_err <= 1'd0;
	subfragments_syncfifo1_source_ready <= 1'd0;
	subfragments_master_in_source_payload_tag <= 8'd0;
	subfragments_syncfifo3_source_ready <= 1'd0;
	subfragments_master_in_source_payload_dat <= 128'd0;
	subfragments_master_in_source_payload_channel <= 8'd0;
	subfragments_master_in_source_payload_user_id <= 8'd0;
	case (subfragments_requests_queue_source_payload_tag)
		1'd0: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo0_source_valid;
			subfragments_syncfifo0_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo0_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo0_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo0_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo0_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo0_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo0_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo0_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo0_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo0_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo0_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo0_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo0_source_payload_user_id;
		end
		1'd1: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo1_source_valid;
			subfragments_syncfifo1_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo1_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo1_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo1_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo1_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo1_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo1_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo1_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo1_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo1_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo1_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo1_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo1_source_payload_user_id;
		end
		2'd2: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo2_source_valid;
			subfragments_syncfifo2_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo2_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo2_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo2_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo2_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo2_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo2_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo2_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo2_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo2_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo2_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo2_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo2_source_payload_user_id;
		end
		2'd3: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo3_source_valid;
			subfragments_syncfifo3_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo3_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo3_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo3_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo3_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo3_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo3_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo3_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo3_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo3_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo3_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo3_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo3_source_payload_user_id;
		end
	endcase
	subfragments_master_in_source_payload_channel <= subfragments_requests_queue_source_payload_channel;
	subfragments_master_in_source_payload_user_id <= subfragments_requests_queue_source_payload_user_id;
end
assign subfragments_cmp_reorder_first = subfragments_master_out_source_first;
assign subfragments_cmp_reorder_last = subfragments_master_out_source_last;
assign subfragments_cmp_reorder_payload_adr = subfragments_master_out_source_payload_adr;
assign subfragments_cmp_reorder_payload_len = subfragments_master_out_source_payload_len;
assign subfragments_cmp_reorder_payload_end = subfragments_master_out_source_payload_end;
assign subfragments_cmp_reorder_payload_req_id = subfragments_master_out_source_payload_req_id;
assign subfragments_cmp_reorder_payload_cmp_id = subfragments_master_out_source_payload_cmp_id;
assign subfragments_cmp_reorder_payload_err = subfragments_master_out_source_payload_err;
assign subfragments_cmp_reorder_payload_tag = subfragments_master_out_source_payload_tag;
assign subfragments_cmp_reorder_payload_dat = subfragments_master_out_source_payload_dat;
assign subfragments_cmp_reorder_payload_channel = subfragments_master_out_source_payload_channel;
assign subfragments_cmp_reorder_payload_user_id = subfragments_master_out_source_payload_user_id;
assign subfragments_tags_queue_syncfifo_din = {subfragments_tags_queue_fifo_in_last, subfragments_tags_queue_fifo_in_first, subfragments_tags_queue_fifo_in_payload_tag};
assign {subfragments_tags_queue_fifo_out_last, subfragments_tags_queue_fifo_out_first, subfragments_tags_queue_fifo_out_payload_tag} = subfragments_tags_queue_syncfifo_dout;
assign subfragments_tags_queue_sink_ready = subfragments_tags_queue_syncfifo_writable;
assign subfragments_tags_queue_syncfifo_we = subfragments_tags_queue_sink_valid;
assign subfragments_tags_queue_fifo_in_first = subfragments_tags_queue_sink_first;
assign subfragments_tags_queue_fifo_in_last = subfragments_tags_queue_sink_last;
assign subfragments_tags_queue_fifo_in_payload_tag = subfragments_tags_queue_sink_payload_tag;
assign subfragments_tags_queue_source_valid = subfragments_tags_queue_readable;
assign subfragments_tags_queue_source_first = subfragments_tags_queue_fifo_out_first;
assign subfragments_tags_queue_source_last = subfragments_tags_queue_fifo_out_last;
assign subfragments_tags_queue_source_payload_tag = subfragments_tags_queue_fifo_out_payload_tag;
assign subfragments_tags_queue_re = subfragments_tags_queue_source_ready;
assign subfragments_tags_queue_syncfifo_re = (subfragments_tags_queue_syncfifo_readable & ((~subfragments_tags_queue_readable) | subfragments_tags_queue_re));
assign subfragments_tags_queue_level1 = (subfragments_tags_queue_level0 + subfragments_tags_queue_readable);
always @(*) begin
	subfragments_tags_queue_wrport_adr <= 2'd0;
	if (subfragments_tags_queue_replace) begin
		subfragments_tags_queue_wrport_adr <= (subfragments_tags_queue_produce - 1'd1);
	end else begin
		subfragments_tags_queue_wrport_adr <= subfragments_tags_queue_produce;
	end
end
assign subfragments_tags_queue_wrport_dat_w = subfragments_tags_queue_syncfifo_din;
assign subfragments_tags_queue_wrport_we = (subfragments_tags_queue_syncfifo_we & (subfragments_tags_queue_syncfifo_writable | subfragments_tags_queue_replace));
assign subfragments_tags_queue_do_read = (subfragments_tags_queue_syncfifo_readable & subfragments_tags_queue_syncfifo_re);
assign subfragments_tags_queue_rdport_adr = subfragments_tags_queue_consume;
assign subfragments_tags_queue_syncfifo_dout = subfragments_tags_queue_rdport_dat_r;
assign subfragments_tags_queue_rdport_re = subfragments_tags_queue_do_read;
assign subfragments_tags_queue_syncfifo_writable = (subfragments_tags_queue_level0 != 3'd4);
assign subfragments_tags_queue_syncfifo_readable = (subfragments_tags_queue_level0 != 1'd0);
assign subfragments_requests_queue_syncfifo_din = {subfragments_requests_queue_fifo_in_last, subfragments_requests_queue_fifo_in_first, subfragments_requests_queue_fifo_in_payload_user_id, subfragments_requests_queue_fifo_in_payload_channel, subfragments_requests_queue_fifo_in_payload_tag};
assign {subfragments_requests_queue_fifo_out_last, subfragments_requests_queue_fifo_out_first, subfragments_requests_queue_fifo_out_payload_user_id, subfragments_requests_queue_fifo_out_payload_channel, subfragments_requests_queue_fifo_out_payload_tag} = subfragments_requests_queue_syncfifo_dout;
assign subfragments_requests_queue_sink_ready = subfragments_requests_queue_syncfifo_writable;
assign subfragments_requests_queue_syncfifo_we = subfragments_requests_queue_sink_valid;
assign subfragments_requests_queue_fifo_in_first = subfragments_requests_queue_sink_first;
assign subfragments_requests_queue_fifo_in_last = subfragments_requests_queue_sink_last;
assign subfragments_requests_queue_fifo_in_payload_tag = subfragments_requests_queue_sink_payload_tag;
assign subfragments_requests_queue_fifo_in_payload_channel = subfragments_requests_queue_sink_payload_channel;
assign subfragments_requests_queue_fifo_in_payload_user_id = subfragments_requests_queue_sink_payload_user_id;
assign subfragments_requests_queue_source_valid = subfragments_requests_queue_readable;
assign subfragments_requests_queue_source_first = subfragments_requests_queue_fifo_out_first;
assign subfragments_requests_queue_source_last = subfragments_requests_queue_fifo_out_last;
assign subfragments_requests_queue_source_payload_tag = subfragments_requests_queue_fifo_out_payload_tag;
assign subfragments_requests_queue_source_payload_channel = subfragments_requests_queue_fifo_out_payload_channel;
assign subfragments_requests_queue_source_payload_user_id = subfragments_requests_queue_fifo_out_payload_user_id;
assign subfragments_requests_queue_re = subfragments_requests_queue_source_ready;
assign subfragments_requests_queue_syncfifo_re = (subfragments_requests_queue_syncfifo_readable & ((~subfragments_requests_queue_readable) | subfragments_requests_queue_re));
assign subfragments_requests_queue_level1 = (subfragments_requests_queue_level0 + subfragments_requests_queue_readable);
always @(*) begin
	subfragments_requests_queue_wrport_adr <= 2'd0;
	if (subfragments_requests_queue_replace) begin
		subfragments_requests_queue_wrport_adr <= (subfragments_requests_queue_produce - 1'd1);
	end else begin
		subfragments_requests_queue_wrport_adr <= subfragments_requests_queue_produce;
	end
end
assign subfragments_requests_queue_wrport_dat_w = subfragments_requests_queue_syncfifo_din;
assign subfragments_requests_queue_wrport_we = (subfragments_requests_queue_syncfifo_we & (subfragments_requests_queue_syncfifo_writable | subfragments_requests_queue_replace));
assign subfragments_requests_queue_do_read = (subfragments_requests_queue_syncfifo_readable & subfragments_requests_queue_syncfifo_re);
assign subfragments_requests_queue_rdport_adr = subfragments_requests_queue_consume;
assign subfragments_requests_queue_syncfifo_dout = subfragments_requests_queue_rdport_dat_r;
assign subfragments_requests_queue_rdport_re = subfragments_requests_queue_do_read;
assign subfragments_requests_queue_syncfifo_writable = (subfragments_requests_queue_level0 != 3'd4);
assign subfragments_requests_queue_syncfifo_readable = (subfragments_requests_queue_level0 != 1'd0);
always @(*) begin
	subfragments_master_out_sink_valid <= 1'd0;
	subfragments_fsm0_next_state0 <= 2'd0;
	subfragments_requests_queue_sink_valid <= 1'd0;
	subfragments_master_in_sink_ready <= 1'd0;
	subfragments_master_out_sink_payload_tag <= 8'd0;
	subfragments_tags_queue_source_ready <= 1'd0;
	subfragments_master_out_sink_payload_tag <= subfragments_master_in_sink_payload_tag;
	subfragments_fsm0_next_state0 <= subfragments_fsm0_state0;
	case (subfragments_fsm0_state0)
		1'd1: begin
			subfragments_master_out_sink_valid <= subfragments_master_in_sink_valid;
			subfragments_master_in_sink_ready <= subfragments_master_out_sink_ready;
			subfragments_master_out_sink_payload_tag <= 6'd32;
			if (((subfragments_master_out_sink_valid & subfragments_master_out_sink_ready) & subfragments_master_out_sink_last)) begin
				subfragments_fsm0_next_state0 <= 1'd0;
			end
		end
		2'd2: begin
			subfragments_master_out_sink_valid <= subfragments_master_in_sink_valid;
			subfragments_master_out_sink_payload_tag <= subfragments_tags_queue_source_payload_tag;
			subfragments_master_in_sink_ready <= subfragments_master_out_sink_ready;
			if (((subfragments_master_out_sink_valid & subfragments_master_out_sink_ready) & subfragments_master_out_sink_last)) begin
				subfragments_tags_queue_source_ready <= 1'd1;
				subfragments_requests_queue_sink_valid <= 1'd1;
				subfragments_fsm0_next_state0 <= 1'd0;
			end
		end
		default: begin
			if ((subfragments_master_in_sink_valid & subfragments_master_in_sink_first)) begin
				if (subfragments_master_in_sink_payload_we) begin
					subfragments_fsm0_next_state0 <= 1'd1;
				end else begin
					if ((subfragments_tags_queue_source_valid & subfragments_requests_queue_sink_ready)) begin
						subfragments_fsm0_next_state0 <= 2'd2;
					end
				end
			end
		end
	endcase
end
assign subfragments_syncfifo0_syncfifo0_din = {subfragments_syncfifo0_fifo_in_last, subfragments_syncfifo0_fifo_in_first, subfragments_syncfifo0_fifo_in_payload_user_id, subfragments_syncfifo0_fifo_in_payload_channel, subfragments_syncfifo0_fifo_in_payload_dat, subfragments_syncfifo0_fifo_in_payload_tag, subfragments_syncfifo0_fifo_in_payload_err, subfragments_syncfifo0_fifo_in_payload_cmp_id, subfragments_syncfifo0_fifo_in_payload_req_id, subfragments_syncfifo0_fifo_in_payload_end, subfragments_syncfifo0_fifo_in_payload_len, subfragments_syncfifo0_fifo_in_payload_adr};
assign {subfragments_syncfifo0_fifo_out_last, subfragments_syncfifo0_fifo_out_first, subfragments_syncfifo0_fifo_out_payload_user_id, subfragments_syncfifo0_fifo_out_payload_channel, subfragments_syncfifo0_fifo_out_payload_dat, subfragments_syncfifo0_fifo_out_payload_tag, subfragments_syncfifo0_fifo_out_payload_err, subfragments_syncfifo0_fifo_out_payload_cmp_id, subfragments_syncfifo0_fifo_out_payload_req_id, subfragments_syncfifo0_fifo_out_payload_end, subfragments_syncfifo0_fifo_out_payload_len, subfragments_syncfifo0_fifo_out_payload_adr} = subfragments_syncfifo0_syncfifo0_dout;
assign subfragments_syncfifo0_sink_ready = subfragments_syncfifo0_syncfifo0_writable;
assign subfragments_syncfifo0_syncfifo0_we = subfragments_syncfifo0_sink_valid;
assign subfragments_syncfifo0_fifo_in_first = subfragments_syncfifo0_sink_first;
assign subfragments_syncfifo0_fifo_in_last = subfragments_syncfifo0_sink_last;
assign subfragments_syncfifo0_fifo_in_payload_adr = subfragments_syncfifo0_sink_payload_adr;
assign subfragments_syncfifo0_fifo_in_payload_len = subfragments_syncfifo0_sink_payload_len;
assign subfragments_syncfifo0_fifo_in_payload_end = subfragments_syncfifo0_sink_payload_end;
assign subfragments_syncfifo0_fifo_in_payload_req_id = subfragments_syncfifo0_sink_payload_req_id;
assign subfragments_syncfifo0_fifo_in_payload_cmp_id = subfragments_syncfifo0_sink_payload_cmp_id;
assign subfragments_syncfifo0_fifo_in_payload_err = subfragments_syncfifo0_sink_payload_err;
assign subfragments_syncfifo0_fifo_in_payload_tag = subfragments_syncfifo0_sink_payload_tag;
assign subfragments_syncfifo0_fifo_in_payload_dat = subfragments_syncfifo0_sink_payload_dat;
assign subfragments_syncfifo0_fifo_in_payload_channel = subfragments_syncfifo0_sink_payload_channel;
assign subfragments_syncfifo0_fifo_in_payload_user_id = subfragments_syncfifo0_sink_payload_user_id;
assign subfragments_syncfifo0_source_valid = subfragments_syncfifo0_readable;
assign subfragments_syncfifo0_source_first = subfragments_syncfifo0_fifo_out_first;
assign subfragments_syncfifo0_source_last = subfragments_syncfifo0_fifo_out_last;
assign subfragments_syncfifo0_source_payload_adr = subfragments_syncfifo0_fifo_out_payload_adr;
assign subfragments_syncfifo0_source_payload_len = subfragments_syncfifo0_fifo_out_payload_len;
assign subfragments_syncfifo0_source_payload_end = subfragments_syncfifo0_fifo_out_payload_end;
assign subfragments_syncfifo0_source_payload_req_id = subfragments_syncfifo0_fifo_out_payload_req_id;
assign subfragments_syncfifo0_source_payload_cmp_id = subfragments_syncfifo0_fifo_out_payload_cmp_id;
assign subfragments_syncfifo0_source_payload_err = subfragments_syncfifo0_fifo_out_payload_err;
assign subfragments_syncfifo0_source_payload_tag = subfragments_syncfifo0_fifo_out_payload_tag;
assign subfragments_syncfifo0_source_payload_dat = subfragments_syncfifo0_fifo_out_payload_dat;
assign subfragments_syncfifo0_source_payload_channel = subfragments_syncfifo0_fifo_out_payload_channel;
assign subfragments_syncfifo0_source_payload_user_id = subfragments_syncfifo0_fifo_out_payload_user_id;
assign subfragments_syncfifo0_re = subfragments_syncfifo0_source_ready;
assign subfragments_syncfifo0_syncfifo0_re = (subfragments_syncfifo0_syncfifo0_readable & ((~subfragments_syncfifo0_readable) | subfragments_syncfifo0_re));
assign subfragments_syncfifo0_level1 = (subfragments_syncfifo0_level0 + subfragments_syncfifo0_readable);
always @(*) begin
	subfragments_syncfifo0_wrport_adr <= 7'd0;
	if (subfragments_syncfifo0_replace) begin
		subfragments_syncfifo0_wrport_adr <= (subfragments_syncfifo0_produce - 1'd1);
	end else begin
		subfragments_syncfifo0_wrport_adr <= subfragments_syncfifo0_produce;
	end
end
assign subfragments_syncfifo0_wrport_dat_w = subfragments_syncfifo0_syncfifo0_din;
assign subfragments_syncfifo0_wrport_we = (subfragments_syncfifo0_syncfifo0_we & (subfragments_syncfifo0_syncfifo0_writable | subfragments_syncfifo0_replace));
assign subfragments_syncfifo0_do_read = (subfragments_syncfifo0_syncfifo0_readable & subfragments_syncfifo0_syncfifo0_re);
assign subfragments_syncfifo0_rdport_adr = subfragments_syncfifo0_consume;
assign subfragments_syncfifo0_syncfifo0_dout = subfragments_syncfifo0_rdport_dat_r;
assign subfragments_syncfifo0_rdport_re = subfragments_syncfifo0_do_read;
assign subfragments_syncfifo0_syncfifo0_writable = (subfragments_syncfifo0_level0 != 8'd128);
assign subfragments_syncfifo0_syncfifo0_readable = (subfragments_syncfifo0_level0 != 1'd0);
assign subfragments_syncfifo1_syncfifo1_din = {subfragments_syncfifo1_fifo_in_last, subfragments_syncfifo1_fifo_in_first, subfragments_syncfifo1_fifo_in_payload_user_id, subfragments_syncfifo1_fifo_in_payload_channel, subfragments_syncfifo1_fifo_in_payload_dat, subfragments_syncfifo1_fifo_in_payload_tag, subfragments_syncfifo1_fifo_in_payload_err, subfragments_syncfifo1_fifo_in_payload_cmp_id, subfragments_syncfifo1_fifo_in_payload_req_id, subfragments_syncfifo1_fifo_in_payload_end, subfragments_syncfifo1_fifo_in_payload_len, subfragments_syncfifo1_fifo_in_payload_adr};
assign {subfragments_syncfifo1_fifo_out_last, subfragments_syncfifo1_fifo_out_first, subfragments_syncfifo1_fifo_out_payload_user_id, subfragments_syncfifo1_fifo_out_payload_channel, subfragments_syncfifo1_fifo_out_payload_dat, subfragments_syncfifo1_fifo_out_payload_tag, subfragments_syncfifo1_fifo_out_payload_err, subfragments_syncfifo1_fifo_out_payload_cmp_id, subfragments_syncfifo1_fifo_out_payload_req_id, subfragments_syncfifo1_fifo_out_payload_end, subfragments_syncfifo1_fifo_out_payload_len, subfragments_syncfifo1_fifo_out_payload_adr} = subfragments_syncfifo1_syncfifo1_dout;
assign subfragments_syncfifo1_sink_ready = subfragments_syncfifo1_syncfifo1_writable;
assign subfragments_syncfifo1_syncfifo1_we = subfragments_syncfifo1_sink_valid;
assign subfragments_syncfifo1_fifo_in_first = subfragments_syncfifo1_sink_first;
assign subfragments_syncfifo1_fifo_in_last = subfragments_syncfifo1_sink_last;
assign subfragments_syncfifo1_fifo_in_payload_adr = subfragments_syncfifo1_sink_payload_adr;
assign subfragments_syncfifo1_fifo_in_payload_len = subfragments_syncfifo1_sink_payload_len;
assign subfragments_syncfifo1_fifo_in_payload_end = subfragments_syncfifo1_sink_payload_end;
assign subfragments_syncfifo1_fifo_in_payload_req_id = subfragments_syncfifo1_sink_payload_req_id;
assign subfragments_syncfifo1_fifo_in_payload_cmp_id = subfragments_syncfifo1_sink_payload_cmp_id;
assign subfragments_syncfifo1_fifo_in_payload_err = subfragments_syncfifo1_sink_payload_err;
assign subfragments_syncfifo1_fifo_in_payload_tag = subfragments_syncfifo1_sink_payload_tag;
assign subfragments_syncfifo1_fifo_in_payload_dat = subfragments_syncfifo1_sink_payload_dat;
assign subfragments_syncfifo1_fifo_in_payload_channel = subfragments_syncfifo1_sink_payload_channel;
assign subfragments_syncfifo1_fifo_in_payload_user_id = subfragments_syncfifo1_sink_payload_user_id;
assign subfragments_syncfifo1_source_valid = subfragments_syncfifo1_readable;
assign subfragments_syncfifo1_source_first = subfragments_syncfifo1_fifo_out_first;
assign subfragments_syncfifo1_source_last = subfragments_syncfifo1_fifo_out_last;
assign subfragments_syncfifo1_source_payload_adr = subfragments_syncfifo1_fifo_out_payload_adr;
assign subfragments_syncfifo1_source_payload_len = subfragments_syncfifo1_fifo_out_payload_len;
assign subfragments_syncfifo1_source_payload_end = subfragments_syncfifo1_fifo_out_payload_end;
assign subfragments_syncfifo1_source_payload_req_id = subfragments_syncfifo1_fifo_out_payload_req_id;
assign subfragments_syncfifo1_source_payload_cmp_id = subfragments_syncfifo1_fifo_out_payload_cmp_id;
assign subfragments_syncfifo1_source_payload_err = subfragments_syncfifo1_fifo_out_payload_err;
assign subfragments_syncfifo1_source_payload_tag = subfragments_syncfifo1_fifo_out_payload_tag;
assign subfragments_syncfifo1_source_payload_dat = subfragments_syncfifo1_fifo_out_payload_dat;
assign subfragments_syncfifo1_source_payload_channel = subfragments_syncfifo1_fifo_out_payload_channel;
assign subfragments_syncfifo1_source_payload_user_id = subfragments_syncfifo1_fifo_out_payload_user_id;
assign subfragments_syncfifo1_re = subfragments_syncfifo1_source_ready;
assign subfragments_syncfifo1_syncfifo1_re = (subfragments_syncfifo1_syncfifo1_readable & ((~subfragments_syncfifo1_readable) | subfragments_syncfifo1_re));
assign subfragments_syncfifo1_level1 = (subfragments_syncfifo1_level0 + subfragments_syncfifo1_readable);
always @(*) begin
	subfragments_syncfifo1_wrport_adr <= 7'd0;
	if (subfragments_syncfifo1_replace) begin
		subfragments_syncfifo1_wrport_adr <= (subfragments_syncfifo1_produce - 1'd1);
	end else begin
		subfragments_syncfifo1_wrport_adr <= subfragments_syncfifo1_produce;
	end
end
assign subfragments_syncfifo1_wrport_dat_w = subfragments_syncfifo1_syncfifo1_din;
assign subfragments_syncfifo1_wrport_we = (subfragments_syncfifo1_syncfifo1_we & (subfragments_syncfifo1_syncfifo1_writable | subfragments_syncfifo1_replace));
assign subfragments_syncfifo1_do_read = (subfragments_syncfifo1_syncfifo1_readable & subfragments_syncfifo1_syncfifo1_re);
assign subfragments_syncfifo1_rdport_adr = subfragments_syncfifo1_consume;
assign subfragments_syncfifo1_syncfifo1_dout = subfragments_syncfifo1_rdport_dat_r;
assign subfragments_syncfifo1_rdport_re = subfragments_syncfifo1_do_read;
assign subfragments_syncfifo1_syncfifo1_writable = (subfragments_syncfifo1_level0 != 8'd128);
assign subfragments_syncfifo1_syncfifo1_readable = (subfragments_syncfifo1_level0 != 1'd0);
assign subfragments_syncfifo2_syncfifo2_din = {subfragments_syncfifo2_fifo_in_last, subfragments_syncfifo2_fifo_in_first, subfragments_syncfifo2_fifo_in_payload_user_id, subfragments_syncfifo2_fifo_in_payload_channel, subfragments_syncfifo2_fifo_in_payload_dat, subfragments_syncfifo2_fifo_in_payload_tag, subfragments_syncfifo2_fifo_in_payload_err, subfragments_syncfifo2_fifo_in_payload_cmp_id, subfragments_syncfifo2_fifo_in_payload_req_id, subfragments_syncfifo2_fifo_in_payload_end, subfragments_syncfifo2_fifo_in_payload_len, subfragments_syncfifo2_fifo_in_payload_adr};
assign {subfragments_syncfifo2_fifo_out_last, subfragments_syncfifo2_fifo_out_first, subfragments_syncfifo2_fifo_out_payload_user_id, subfragments_syncfifo2_fifo_out_payload_channel, subfragments_syncfifo2_fifo_out_payload_dat, subfragments_syncfifo2_fifo_out_payload_tag, subfragments_syncfifo2_fifo_out_payload_err, subfragments_syncfifo2_fifo_out_payload_cmp_id, subfragments_syncfifo2_fifo_out_payload_req_id, subfragments_syncfifo2_fifo_out_payload_end, subfragments_syncfifo2_fifo_out_payload_len, subfragments_syncfifo2_fifo_out_payload_adr} = subfragments_syncfifo2_syncfifo2_dout;
assign subfragments_syncfifo2_sink_ready = subfragments_syncfifo2_syncfifo2_writable;
assign subfragments_syncfifo2_syncfifo2_we = subfragments_syncfifo2_sink_valid;
assign subfragments_syncfifo2_fifo_in_first = subfragments_syncfifo2_sink_first;
assign subfragments_syncfifo2_fifo_in_last = subfragments_syncfifo2_sink_last;
assign subfragments_syncfifo2_fifo_in_payload_adr = subfragments_syncfifo2_sink_payload_adr;
assign subfragments_syncfifo2_fifo_in_payload_len = subfragments_syncfifo2_sink_payload_len;
assign subfragments_syncfifo2_fifo_in_payload_end = subfragments_syncfifo2_sink_payload_end;
assign subfragments_syncfifo2_fifo_in_payload_req_id = subfragments_syncfifo2_sink_payload_req_id;
assign subfragments_syncfifo2_fifo_in_payload_cmp_id = subfragments_syncfifo2_sink_payload_cmp_id;
assign subfragments_syncfifo2_fifo_in_payload_err = subfragments_syncfifo2_sink_payload_err;
assign subfragments_syncfifo2_fifo_in_payload_tag = subfragments_syncfifo2_sink_payload_tag;
assign subfragments_syncfifo2_fifo_in_payload_dat = subfragments_syncfifo2_sink_payload_dat;
assign subfragments_syncfifo2_fifo_in_payload_channel = subfragments_syncfifo2_sink_payload_channel;
assign subfragments_syncfifo2_fifo_in_payload_user_id = subfragments_syncfifo2_sink_payload_user_id;
assign subfragments_syncfifo2_source_valid = subfragments_syncfifo2_readable;
assign subfragments_syncfifo2_source_first = subfragments_syncfifo2_fifo_out_first;
assign subfragments_syncfifo2_source_last = subfragments_syncfifo2_fifo_out_last;
assign subfragments_syncfifo2_source_payload_adr = subfragments_syncfifo2_fifo_out_payload_adr;
assign subfragments_syncfifo2_source_payload_len = subfragments_syncfifo2_fifo_out_payload_len;
assign subfragments_syncfifo2_source_payload_end = subfragments_syncfifo2_fifo_out_payload_end;
assign subfragments_syncfifo2_source_payload_req_id = subfragments_syncfifo2_fifo_out_payload_req_id;
assign subfragments_syncfifo2_source_payload_cmp_id = subfragments_syncfifo2_fifo_out_payload_cmp_id;
assign subfragments_syncfifo2_source_payload_err = subfragments_syncfifo2_fifo_out_payload_err;
assign subfragments_syncfifo2_source_payload_tag = subfragments_syncfifo2_fifo_out_payload_tag;
assign subfragments_syncfifo2_source_payload_dat = subfragments_syncfifo2_fifo_out_payload_dat;
assign subfragments_syncfifo2_source_payload_channel = subfragments_syncfifo2_fifo_out_payload_channel;
assign subfragments_syncfifo2_source_payload_user_id = subfragments_syncfifo2_fifo_out_payload_user_id;
assign subfragments_syncfifo2_re = subfragments_syncfifo2_source_ready;
assign subfragments_syncfifo2_syncfifo2_re = (subfragments_syncfifo2_syncfifo2_readable & ((~subfragments_syncfifo2_readable) | subfragments_syncfifo2_re));
assign subfragments_syncfifo2_level1 = (subfragments_syncfifo2_level0 + subfragments_syncfifo2_readable);
always @(*) begin
	subfragments_syncfifo2_wrport_adr <= 7'd0;
	if (subfragments_syncfifo2_replace) begin
		subfragments_syncfifo2_wrport_adr <= (subfragments_syncfifo2_produce - 1'd1);
	end else begin
		subfragments_syncfifo2_wrport_adr <= subfragments_syncfifo2_produce;
	end
end
assign subfragments_syncfifo2_wrport_dat_w = subfragments_syncfifo2_syncfifo2_din;
assign subfragments_syncfifo2_wrport_we = (subfragments_syncfifo2_syncfifo2_we & (subfragments_syncfifo2_syncfifo2_writable | subfragments_syncfifo2_replace));
assign subfragments_syncfifo2_do_read = (subfragments_syncfifo2_syncfifo2_readable & subfragments_syncfifo2_syncfifo2_re);
assign subfragments_syncfifo2_rdport_adr = subfragments_syncfifo2_consume;
assign subfragments_syncfifo2_syncfifo2_dout = subfragments_syncfifo2_rdport_dat_r;
assign subfragments_syncfifo2_rdport_re = subfragments_syncfifo2_do_read;
assign subfragments_syncfifo2_syncfifo2_writable = (subfragments_syncfifo2_level0 != 8'd128);
assign subfragments_syncfifo2_syncfifo2_readable = (subfragments_syncfifo2_level0 != 1'd0);
assign subfragments_syncfifo3_syncfifo3_din = {subfragments_syncfifo3_fifo_in_last, subfragments_syncfifo3_fifo_in_first, subfragments_syncfifo3_fifo_in_payload_user_id, subfragments_syncfifo3_fifo_in_payload_channel, subfragments_syncfifo3_fifo_in_payload_dat, subfragments_syncfifo3_fifo_in_payload_tag, subfragments_syncfifo3_fifo_in_payload_err, subfragments_syncfifo3_fifo_in_payload_cmp_id, subfragments_syncfifo3_fifo_in_payload_req_id, subfragments_syncfifo3_fifo_in_payload_end, subfragments_syncfifo3_fifo_in_payload_len, subfragments_syncfifo3_fifo_in_payload_adr};
assign {subfragments_syncfifo3_fifo_out_last, subfragments_syncfifo3_fifo_out_first, subfragments_syncfifo3_fifo_out_payload_user_id, subfragments_syncfifo3_fifo_out_payload_channel, subfragments_syncfifo3_fifo_out_payload_dat, subfragments_syncfifo3_fifo_out_payload_tag, subfragments_syncfifo3_fifo_out_payload_err, subfragments_syncfifo3_fifo_out_payload_cmp_id, subfragments_syncfifo3_fifo_out_payload_req_id, subfragments_syncfifo3_fifo_out_payload_end, subfragments_syncfifo3_fifo_out_payload_len, subfragments_syncfifo3_fifo_out_payload_adr} = subfragments_syncfifo3_syncfifo3_dout;
assign subfragments_syncfifo3_sink_ready = subfragments_syncfifo3_syncfifo3_writable;
assign subfragments_syncfifo3_syncfifo3_we = subfragments_syncfifo3_sink_valid;
assign subfragments_syncfifo3_fifo_in_first = subfragments_syncfifo3_sink_first;
assign subfragments_syncfifo3_fifo_in_last = subfragments_syncfifo3_sink_last;
assign subfragments_syncfifo3_fifo_in_payload_adr = subfragments_syncfifo3_sink_payload_adr;
assign subfragments_syncfifo3_fifo_in_payload_len = subfragments_syncfifo3_sink_payload_len;
assign subfragments_syncfifo3_fifo_in_payload_end = subfragments_syncfifo3_sink_payload_end;
assign subfragments_syncfifo3_fifo_in_payload_req_id = subfragments_syncfifo3_sink_payload_req_id;
assign subfragments_syncfifo3_fifo_in_payload_cmp_id = subfragments_syncfifo3_sink_payload_cmp_id;
assign subfragments_syncfifo3_fifo_in_payload_err = subfragments_syncfifo3_sink_payload_err;
assign subfragments_syncfifo3_fifo_in_payload_tag = subfragments_syncfifo3_sink_payload_tag;
assign subfragments_syncfifo3_fifo_in_payload_dat = subfragments_syncfifo3_sink_payload_dat;
assign subfragments_syncfifo3_fifo_in_payload_channel = subfragments_syncfifo3_sink_payload_channel;
assign subfragments_syncfifo3_fifo_in_payload_user_id = subfragments_syncfifo3_sink_payload_user_id;
assign subfragments_syncfifo3_source_valid = subfragments_syncfifo3_readable;
assign subfragments_syncfifo3_source_first = subfragments_syncfifo3_fifo_out_first;
assign subfragments_syncfifo3_source_last = subfragments_syncfifo3_fifo_out_last;
assign subfragments_syncfifo3_source_payload_adr = subfragments_syncfifo3_fifo_out_payload_adr;
assign subfragments_syncfifo3_source_payload_len = subfragments_syncfifo3_fifo_out_payload_len;
assign subfragments_syncfifo3_source_payload_end = subfragments_syncfifo3_fifo_out_payload_end;
assign subfragments_syncfifo3_source_payload_req_id = subfragments_syncfifo3_fifo_out_payload_req_id;
assign subfragments_syncfifo3_source_payload_cmp_id = subfragments_syncfifo3_fifo_out_payload_cmp_id;
assign subfragments_syncfifo3_source_payload_err = subfragments_syncfifo3_fifo_out_payload_err;
assign subfragments_syncfifo3_source_payload_tag = subfragments_syncfifo3_fifo_out_payload_tag;
assign subfragments_syncfifo3_source_payload_dat = subfragments_syncfifo3_fifo_out_payload_dat;
assign subfragments_syncfifo3_source_payload_channel = subfragments_syncfifo3_fifo_out_payload_channel;
assign subfragments_syncfifo3_source_payload_user_id = subfragments_syncfifo3_fifo_out_payload_user_id;
assign subfragments_syncfifo3_re = subfragments_syncfifo3_source_ready;
assign subfragments_syncfifo3_syncfifo3_re = (subfragments_syncfifo3_syncfifo3_readable & ((~subfragments_syncfifo3_readable) | subfragments_syncfifo3_re));
assign subfragments_syncfifo3_level1 = (subfragments_syncfifo3_level0 + subfragments_syncfifo3_readable);
always @(*) begin
	subfragments_syncfifo3_wrport_adr <= 7'd0;
	if (subfragments_syncfifo3_replace) begin
		subfragments_syncfifo3_wrport_adr <= (subfragments_syncfifo3_produce - 1'd1);
	end else begin
		subfragments_syncfifo3_wrport_adr <= subfragments_syncfifo3_produce;
	end
end
assign subfragments_syncfifo3_wrport_dat_w = subfragments_syncfifo3_syncfifo3_din;
assign subfragments_syncfifo3_wrport_we = (subfragments_syncfifo3_syncfifo3_we & (subfragments_syncfifo3_syncfifo3_writable | subfragments_syncfifo3_replace));
assign subfragments_syncfifo3_do_read = (subfragments_syncfifo3_syncfifo3_readable & subfragments_syncfifo3_syncfifo3_re);
assign subfragments_syncfifo3_rdport_adr = subfragments_syncfifo3_consume;
assign subfragments_syncfifo3_syncfifo3_dout = subfragments_syncfifo3_rdport_dat_r;
assign subfragments_syncfifo3_rdport_re = subfragments_syncfifo3_do_read;
assign subfragments_syncfifo3_syncfifo3_writable = (subfragments_syncfifo3_level0 != 8'd128);
assign subfragments_syncfifo3_syncfifo3_readable = (subfragments_syncfifo3_level0 != 1'd0);
always @(*) begin
	subfragments_master_out_source_ready <= 1'd0;
	subfragments_cmp_reorder_valid <= 1'd0;
	subfragments_tags_queue_sink_payload_tag <= 2'd0;
	subfragments_fsm1_next_state0 <= 2'd0;
	subfragments_fill_tag_litepciecrossbar_next_value <= 2'd0;
	subfragments_fill_tag_litepciecrossbar_next_value_ce <= 1'd0;
	subfragments_tags_queue_sink_valid <= 1'd0;
	subfragments_fsm1_next_state0 <= subfragments_fsm1_state0;
	case (subfragments_fsm1_state0)
		1'd1: begin
			if ((subfragments_master_out_source_valid & subfragments_master_out_source_first)) begin
				subfragments_fsm1_next_state0 <= 2'd2;
			end else begin
				subfragments_master_out_source_ready <= 1'd1;
			end
		end
		2'd2: begin
			subfragments_cmp_reorder_valid <= subfragments_master_out_source_valid;
			subfragments_master_out_source_ready <= subfragments_cmp_reorder_ready;
			if (((subfragments_master_out_source_valid & subfragments_master_out_source_ready) & subfragments_master_out_source_last)) begin
				if (subfragments_master_out_source_payload_end) begin
					subfragments_tags_queue_sink_valid <= 1'd1;
					subfragments_tags_queue_sink_payload_tag <= subfragments_master_out_source_payload_tag;
				end
				subfragments_fsm1_next_state0 <= 1'd1;
			end
		end
		default: begin
			subfragments_tags_queue_sink_valid <= 1'd1;
			subfragments_tags_queue_sink_payload_tag <= subfragments_fill_tag;
			subfragments_fill_tag_litepciecrossbar_next_value <= (subfragments_fill_tag + 1'd1);
			subfragments_fill_tag_litepciecrossbar_next_value_ce <= 1'd1;
			if ((subfragments_fill_tag == 2'd3)) begin
				subfragments_fsm1_next_state0 <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	subfragments_arbiter0_request <= 3'd0;
	subfragments_arbiter0_request[0] <= subfragments_arbiter0_status0_ongoing0;
	subfragments_arbiter0_request[1] <= subfragments_arbiter0_status1_ongoing0;
	subfragments_arbiter0_request[2] <= subfragments_arbiter0_status2_ongoing0;
end
always @(*) begin
	subfragments_master_in_sink_valid <= 1'd0;
	litepciedma2_litepciemasterinternalport5_sink_ready <= 1'd0;
	subfragments_master_in_sink_first <= 1'd0;
	subfragments_master_in_sink_last <= 1'd0;
	subfragments_master_in_sink_payload_we <= 1'd0;
	subfragments_master_in_sink_payload_adr <= 32'd0;
	litepciedma0_litepciemasterinternalport1_sink_ready <= 1'd0;
	subfragments_master_in_sink_payload_len <= 10'd0;
	subfragments_master_in_sink_payload_req_id <= 16'd0;
	subfragments_master_in_sink_payload_tag <= 8'd0;
	subfragments_master_in_sink_payload_dat <= 128'd0;
	subfragments_master_in_sink_payload_channel <= 8'd0;
	subfragments_master_in_sink_payload_user_id <= 8'd0;
	litepciedma1_litepciemasterinternalport3_sink_ready <= 1'd0;
	case (subfragments_arbiter0_grant)
		1'd0: begin
			subfragments_master_in_sink_valid <= litepciedma0_litepciemasterinternalport1_sink_valid;
			litepciedma0_litepciemasterinternalport1_sink_ready <= subfragments_master_in_sink_ready;
			subfragments_master_in_sink_first <= litepciedma0_litepciemasterinternalport1_sink_first;
			subfragments_master_in_sink_last <= litepciedma0_litepciemasterinternalport1_sink_last;
			subfragments_master_in_sink_payload_we <= litepciedma0_litepciemasterinternalport1_sink_payload_we;
			subfragments_master_in_sink_payload_adr <= litepciedma0_litepciemasterinternalport1_sink_payload_adr;
			subfragments_master_in_sink_payload_len <= litepciedma0_litepciemasterinternalport1_sink_payload_len;
			subfragments_master_in_sink_payload_req_id <= litepciedma0_litepciemasterinternalport1_sink_payload_req_id;
			subfragments_master_in_sink_payload_tag <= litepciedma0_litepciemasterinternalport1_sink_payload_tag;
			subfragments_master_in_sink_payload_dat <= litepciedma0_litepciemasterinternalport1_sink_payload_dat;
			subfragments_master_in_sink_payload_channel <= litepciedma0_litepciemasterinternalport1_sink_payload_channel;
			subfragments_master_in_sink_payload_user_id <= litepciedma0_litepciemasterinternalport1_sink_payload_user_id;
		end
		1'd1: begin
			subfragments_master_in_sink_valid <= litepciedma1_litepciemasterinternalport3_sink_valid;
			litepciedma1_litepciemasterinternalport3_sink_ready <= subfragments_master_in_sink_ready;
			subfragments_master_in_sink_first <= litepciedma1_litepciemasterinternalport3_sink_first;
			subfragments_master_in_sink_last <= litepciedma1_litepciemasterinternalport3_sink_last;
			subfragments_master_in_sink_payload_we <= litepciedma1_litepciemasterinternalport3_sink_payload_we;
			subfragments_master_in_sink_payload_adr <= litepciedma1_litepciemasterinternalport3_sink_payload_adr;
			subfragments_master_in_sink_payload_len <= litepciedma1_litepciemasterinternalport3_sink_payload_len;
			subfragments_master_in_sink_payload_req_id <= litepciedma1_litepciemasterinternalport3_sink_payload_req_id;
			subfragments_master_in_sink_payload_tag <= litepciedma1_litepciemasterinternalport3_sink_payload_tag;
			subfragments_master_in_sink_payload_dat <= litepciedma1_litepciemasterinternalport3_sink_payload_dat;
			subfragments_master_in_sink_payload_channel <= litepciedma1_litepciemasterinternalport3_sink_payload_channel;
			subfragments_master_in_sink_payload_user_id <= litepciedma1_litepciemasterinternalport3_sink_payload_user_id;
		end
		2'd2: begin
			subfragments_master_in_sink_valid <= litepciedma2_litepciemasterinternalport5_sink_valid;
			litepciedma2_litepciemasterinternalport5_sink_ready <= subfragments_master_in_sink_ready;
			subfragments_master_in_sink_first <= litepciedma2_litepciemasterinternalport5_sink_first;
			subfragments_master_in_sink_last <= litepciedma2_litepciemasterinternalport5_sink_last;
			subfragments_master_in_sink_payload_we <= litepciedma2_litepciemasterinternalport5_sink_payload_we;
			subfragments_master_in_sink_payload_adr <= litepciedma2_litepciemasterinternalport5_sink_payload_adr;
			subfragments_master_in_sink_payload_len <= litepciedma2_litepciemasterinternalport5_sink_payload_len;
			subfragments_master_in_sink_payload_req_id <= litepciedma2_litepciemasterinternalport5_sink_payload_req_id;
			subfragments_master_in_sink_payload_tag <= litepciedma2_litepciemasterinternalport5_sink_payload_tag;
			subfragments_master_in_sink_payload_dat <= litepciedma2_litepciemasterinternalport5_sink_payload_dat;
			subfragments_master_in_sink_payload_channel <= litepciedma2_litepciemasterinternalport5_sink_payload_channel;
			subfragments_master_in_sink_payload_user_id <= litepciedma2_litepciemasterinternalport5_sink_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_arbiter0_status0_last <= 1'd0;
	if (litepciedma0_litepciemasterinternalport1_sink_valid) begin
		subfragments_arbiter0_status0_last <= (litepciedma0_litepciemasterinternalport1_sink_last & litepciedma0_litepciemasterinternalport1_sink_ready);
	end
end
assign subfragments_arbiter0_status0_ongoing0 = ((litepciedma0_litepciemasterinternalport1_sink_valid | subfragments_arbiter0_status0_ongoing1) & (~subfragments_arbiter0_status0_last));
always @(*) begin
	subfragments_arbiter0_status1_last <= 1'd0;
	if (litepciedma1_litepciemasterinternalport3_sink_valid) begin
		subfragments_arbiter0_status1_last <= (litepciedma1_litepciemasterinternalport3_sink_last & litepciedma1_litepciemasterinternalport3_sink_ready);
	end
end
assign subfragments_arbiter0_status1_ongoing0 = ((litepciedma1_litepciemasterinternalport3_sink_valid | subfragments_arbiter0_status1_ongoing1) & (~subfragments_arbiter0_status1_last));
always @(*) begin
	subfragments_arbiter0_status2_last <= 1'd0;
	if (litepciedma2_litepciemasterinternalport5_sink_valid) begin
		subfragments_arbiter0_status2_last <= (litepciedma2_litepciemasterinternalport5_sink_last & litepciedma2_litepciemasterinternalport5_sink_ready);
	end
end
assign subfragments_arbiter0_status2_ongoing0 = ((litepciedma2_litepciemasterinternalport5_sink_valid | subfragments_arbiter0_status2_ongoing1) & (~subfragments_arbiter0_status2_last));
always @(*) begin
	subfragments_dispatcher0_sel1 <= 3'd0;
	if (subfragments_dispatcher0_first) begin
		subfragments_dispatcher0_sel1 <= subfragments_dispatcher0_sel0;
	end else begin
		subfragments_dispatcher0_sel1 <= subfragments_dispatcher0_sel_ongoing;
	end
end
always @(*) begin
	litepciedma1_litepciemasterinternalport3_source_payload_end <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_req_id <= 16'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_cmp_id <= 16'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_err <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_tag <= 8'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_dat <= 128'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_channel <= 8'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_user_id <= 8'd0;
	litepciedma2_litepciemasterinternalport5_source_valid <= 1'd0;
	subfragments_master_in_source_ready <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_first <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_last <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_adr <= 32'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_len <= 10'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_end <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_req_id <= 16'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_cmp_id <= 16'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_err <= 1'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_tag <= 8'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_dat <= 128'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_channel <= 8'd0;
	litepciedma2_litepciemasterinternalport5_source_payload_user_id <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_valid <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_first <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_last <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_adr <= 32'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_len <= 10'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_end <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_req_id <= 16'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_cmp_id <= 16'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_err <= 1'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_tag <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_dat <= 128'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_channel <= 8'd0;
	litepciedma0_litepciemasterinternalport1_source_payload_user_id <= 8'd0;
	litepciedma1_litepciemasterinternalport3_source_valid <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_first <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_last <= 1'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_adr <= 32'd0;
	litepciedma1_litepciemasterinternalport3_source_payload_len <= 10'd0;
	case (subfragments_dispatcher0_sel1)
		1'd1: begin
			litepciedma0_litepciemasterinternalport1_source_valid <= subfragments_master_in_source_valid;
			subfragments_master_in_source_ready <= litepciedma0_litepciemasterinternalport1_source_ready;
			litepciedma0_litepciemasterinternalport1_source_first <= subfragments_master_in_source_first;
			litepciedma0_litepciemasterinternalport1_source_last <= subfragments_master_in_source_last;
			litepciedma0_litepciemasterinternalport1_source_payload_adr <= subfragments_master_in_source_payload_adr;
			litepciedma0_litepciemasterinternalport1_source_payload_len <= subfragments_master_in_source_payload_len;
			litepciedma0_litepciemasterinternalport1_source_payload_end <= subfragments_master_in_source_payload_end;
			litepciedma0_litepciemasterinternalport1_source_payload_req_id <= subfragments_master_in_source_payload_req_id;
			litepciedma0_litepciemasterinternalport1_source_payload_cmp_id <= subfragments_master_in_source_payload_cmp_id;
			litepciedma0_litepciemasterinternalport1_source_payload_err <= subfragments_master_in_source_payload_err;
			litepciedma0_litepciemasterinternalport1_source_payload_tag <= subfragments_master_in_source_payload_tag;
			litepciedma0_litepciemasterinternalport1_source_payload_dat <= subfragments_master_in_source_payload_dat;
			litepciedma0_litepciemasterinternalport1_source_payload_channel <= subfragments_master_in_source_payload_channel;
			litepciedma0_litepciemasterinternalport1_source_payload_user_id <= subfragments_master_in_source_payload_user_id;
		end
		2'd2: begin
			litepciedma1_litepciemasterinternalport3_source_valid <= subfragments_master_in_source_valid;
			subfragments_master_in_source_ready <= litepciedma1_litepciemasterinternalport3_source_ready;
			litepciedma1_litepciemasterinternalport3_source_first <= subfragments_master_in_source_first;
			litepciedma1_litepciemasterinternalport3_source_last <= subfragments_master_in_source_last;
			litepciedma1_litepciemasterinternalport3_source_payload_adr <= subfragments_master_in_source_payload_adr;
			litepciedma1_litepciemasterinternalport3_source_payload_len <= subfragments_master_in_source_payload_len;
			litepciedma1_litepciemasterinternalport3_source_payload_end <= subfragments_master_in_source_payload_end;
			litepciedma1_litepciemasterinternalport3_source_payload_req_id <= subfragments_master_in_source_payload_req_id;
			litepciedma1_litepciemasterinternalport3_source_payload_cmp_id <= subfragments_master_in_source_payload_cmp_id;
			litepciedma1_litepciemasterinternalport3_source_payload_err <= subfragments_master_in_source_payload_err;
			litepciedma1_litepciemasterinternalport3_source_payload_tag <= subfragments_master_in_source_payload_tag;
			litepciedma1_litepciemasterinternalport3_source_payload_dat <= subfragments_master_in_source_payload_dat;
			litepciedma1_litepciemasterinternalport3_source_payload_channel <= subfragments_master_in_source_payload_channel;
			litepciedma1_litepciemasterinternalport3_source_payload_user_id <= subfragments_master_in_source_payload_user_id;
		end
		3'd4: begin
			litepciedma2_litepciemasterinternalport5_source_valid <= subfragments_master_in_source_valid;
			subfragments_master_in_source_ready <= litepciedma2_litepciemasterinternalport5_source_ready;
			litepciedma2_litepciemasterinternalport5_source_first <= subfragments_master_in_source_first;
			litepciedma2_litepciemasterinternalport5_source_last <= subfragments_master_in_source_last;
			litepciedma2_litepciemasterinternalport5_source_payload_adr <= subfragments_master_in_source_payload_adr;
			litepciedma2_litepciemasterinternalport5_source_payload_len <= subfragments_master_in_source_payload_len;
			litepciedma2_litepciemasterinternalport5_source_payload_end <= subfragments_master_in_source_payload_end;
			litepciedma2_litepciemasterinternalport5_source_payload_req_id <= subfragments_master_in_source_payload_req_id;
			litepciedma2_litepciemasterinternalport5_source_payload_cmp_id <= subfragments_master_in_source_payload_cmp_id;
			litepciedma2_litepciemasterinternalport5_source_payload_err <= subfragments_master_in_source_payload_err;
			litepciedma2_litepciemasterinternalport5_source_payload_tag <= subfragments_master_in_source_payload_tag;
			litepciedma2_litepciemasterinternalport5_source_payload_dat <= subfragments_master_in_source_payload_dat;
			litepciedma2_litepciemasterinternalport5_source_payload_channel <= subfragments_master_in_source_payload_channel;
			litepciedma2_litepciemasterinternalport5_source_payload_user_id <= subfragments_master_in_source_payload_user_id;
		end
		default: begin
			subfragments_master_in_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	subfragments_dispatcher0_last <= 1'd0;
	if (subfragments_master_in_source_valid) begin
		subfragments_dispatcher0_last <= (subfragments_master_in_source_last & subfragments_master_in_source_ready);
	end
end
assign subfragments_dispatcher0_ongoing0 = ((subfragments_master_in_source_valid | subfragments_dispatcher0_ongoing1) & (~subfragments_dispatcher0_last));
always @(*) begin
	subfragments_arbiter1_request <= 3'd0;
	subfragments_arbiter1_request[0] <= subfragments_arbiter1_status3_ongoing0;
	subfragments_arbiter1_request[1] <= subfragments_arbiter1_status4_ongoing0;
	subfragments_arbiter1_request[2] <= subfragments_arbiter1_status5_ongoing0;
end
always @(*) begin
	litepciedma2_litepciemasterinternalport4_sink_ready <= 1'd0;
	subfragments_sink_first <= 1'd0;
	subfragments_sink_last <= 1'd0;
	subfragments_sink_payload_we <= 1'd0;
	subfragments_sink_payload_adr <= 32'd0;
	litepciedma0_litepciemasterinternalport0_sink_ready <= 1'd0;
	subfragments_sink_payload_len <= 10'd0;
	subfragments_sink_payload_req_id <= 16'd0;
	subfragments_sink_payload_tag <= 8'd0;
	subfragments_sink_payload_dat <= 128'd0;
	subfragments_sink_payload_channel <= 8'd0;
	subfragments_sink_payload_user_id <= 8'd0;
	litepciedma1_litepciemasterinternalport2_sink_ready <= 1'd0;
	subfragments_sink_valid <= 1'd0;
	case (subfragments_arbiter1_grant)
		1'd0: begin
			subfragments_sink_valid <= litepciedma0_litepciemasterinternalport0_sink_valid;
			litepciedma0_litepciemasterinternalport0_sink_ready <= subfragments_sink_ready;
			subfragments_sink_first <= litepciedma0_litepciemasterinternalport0_sink_first;
			subfragments_sink_last <= litepciedma0_litepciemasterinternalport0_sink_last;
			subfragments_sink_payload_we <= litepciedma0_litepciemasterinternalport0_sink_payload_we;
			subfragments_sink_payload_adr <= litepciedma0_litepciemasterinternalport0_sink_payload_adr;
			subfragments_sink_payload_len <= litepciedma0_litepciemasterinternalport0_sink_payload_len;
			subfragments_sink_payload_req_id <= litepciedma0_litepciemasterinternalport0_sink_payload_req_id;
			subfragments_sink_payload_tag <= litepciedma0_litepciemasterinternalport0_sink_payload_tag;
			subfragments_sink_payload_dat <= litepciedma0_litepciemasterinternalport0_sink_payload_dat;
			subfragments_sink_payload_channel <= litepciedma0_litepciemasterinternalport0_sink_payload_channel;
			subfragments_sink_payload_user_id <= litepciedma0_litepciemasterinternalport0_sink_payload_user_id;
		end
		1'd1: begin
			subfragments_sink_valid <= litepciedma1_litepciemasterinternalport2_sink_valid;
			litepciedma1_litepciemasterinternalport2_sink_ready <= subfragments_sink_ready;
			subfragments_sink_first <= litepciedma1_litepciemasterinternalport2_sink_first;
			subfragments_sink_last <= litepciedma1_litepciemasterinternalport2_sink_last;
			subfragments_sink_payload_we <= litepciedma1_litepciemasterinternalport2_sink_payload_we;
			subfragments_sink_payload_adr <= litepciedma1_litepciemasterinternalport2_sink_payload_adr;
			subfragments_sink_payload_len <= litepciedma1_litepciemasterinternalport2_sink_payload_len;
			subfragments_sink_payload_req_id <= litepciedma1_litepciemasterinternalport2_sink_payload_req_id;
			subfragments_sink_payload_tag <= litepciedma1_litepciemasterinternalport2_sink_payload_tag;
			subfragments_sink_payload_dat <= litepciedma1_litepciemasterinternalport2_sink_payload_dat;
			subfragments_sink_payload_channel <= litepciedma1_litepciemasterinternalport2_sink_payload_channel;
			subfragments_sink_payload_user_id <= litepciedma1_litepciemasterinternalport2_sink_payload_user_id;
		end
		2'd2: begin
			subfragments_sink_valid <= litepciedma2_litepciemasterinternalport4_sink_valid;
			litepciedma2_litepciemasterinternalport4_sink_ready <= subfragments_sink_ready;
			subfragments_sink_first <= litepciedma2_litepciemasterinternalport4_sink_first;
			subfragments_sink_last <= litepciedma2_litepciemasterinternalport4_sink_last;
			subfragments_sink_payload_we <= litepciedma2_litepciemasterinternalport4_sink_payload_we;
			subfragments_sink_payload_adr <= litepciedma2_litepciemasterinternalport4_sink_payload_adr;
			subfragments_sink_payload_len <= litepciedma2_litepciemasterinternalport4_sink_payload_len;
			subfragments_sink_payload_req_id <= litepciedma2_litepciemasterinternalport4_sink_payload_req_id;
			subfragments_sink_payload_tag <= litepciedma2_litepciemasterinternalport4_sink_payload_tag;
			subfragments_sink_payload_dat <= litepciedma2_litepciemasterinternalport4_sink_payload_dat;
			subfragments_sink_payload_channel <= litepciedma2_litepciemasterinternalport4_sink_payload_channel;
			subfragments_sink_payload_user_id <= litepciedma2_litepciemasterinternalport4_sink_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_arbiter1_status3_last <= 1'd0;
	if (litepciedma0_litepciemasterinternalport0_sink_valid) begin
		subfragments_arbiter1_status3_last <= (litepciedma0_litepciemasterinternalport0_sink_last & litepciedma0_litepciemasterinternalport0_sink_ready);
	end
end
assign subfragments_arbiter1_status3_ongoing0 = ((litepciedma0_litepciemasterinternalport0_sink_valid | subfragments_arbiter1_status3_ongoing1) & (~subfragments_arbiter1_status3_last));
always @(*) begin
	subfragments_arbiter1_status4_last <= 1'd0;
	if (litepciedma1_litepciemasterinternalport2_sink_valid) begin
		subfragments_arbiter1_status4_last <= (litepciedma1_litepciemasterinternalport2_sink_last & litepciedma1_litepciemasterinternalport2_sink_ready);
	end
end
assign subfragments_arbiter1_status4_ongoing0 = ((litepciedma1_litepciemasterinternalport2_sink_valid | subfragments_arbiter1_status4_ongoing1) & (~subfragments_arbiter1_status4_last));
always @(*) begin
	subfragments_arbiter1_status5_last <= 1'd0;
	if (litepciedma2_litepciemasterinternalport4_sink_valid) begin
		subfragments_arbiter1_status5_last <= (litepciedma2_litepciemasterinternalport4_sink_last & litepciedma2_litepciemasterinternalport4_sink_ready);
	end
end
assign subfragments_arbiter1_status5_ongoing0 = ((litepciedma2_litepciemasterinternalport4_sink_valid | subfragments_arbiter1_status5_ongoing1) & (~subfragments_arbiter1_status5_last));
always @(*) begin
	subfragments_dispatcher1_sel1 <= 3'd0;
	if (subfragments_dispatcher1_first) begin
		subfragments_dispatcher1_sel1 <= subfragments_dispatcher1_sel0;
	end else begin
		subfragments_dispatcher1_sel1 <= subfragments_dispatcher1_sel_ongoing;
	end
end
always @(*) begin
	litepciedma1_litepciemasterinternalport2_source_payload_tag <= 8'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_dat <= 128'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_channel <= 8'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_user_id <= 8'd0;
	litepciedma2_litepciemasterinternalport4_source_valid <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_first <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_last <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_adr <= 32'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_len <= 10'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_end <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_req_id <= 16'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_cmp_id <= 16'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_err <= 1'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_tag <= 8'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_dat <= 128'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_channel <= 8'd0;
	litepciedma2_litepciemasterinternalport4_source_payload_user_id <= 8'd0;
	subfragments_source_ready <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_valid <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_first <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_last <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_adr <= 32'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_len <= 10'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_end <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_req_id <= 16'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_cmp_id <= 16'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_err <= 1'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_tag <= 8'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_dat <= 128'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_channel <= 8'd0;
	litepciedma0_litepciemasterinternalport0_source_payload_user_id <= 8'd0;
	litepciedma1_litepciemasterinternalport2_source_valid <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_first <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_last <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_adr <= 32'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_len <= 10'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_end <= 1'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_req_id <= 16'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_cmp_id <= 16'd0;
	litepciedma1_litepciemasterinternalport2_source_payload_err <= 1'd0;
	case (subfragments_dispatcher1_sel1)
		1'd1: begin
			litepciedma0_litepciemasterinternalport0_source_valid <= subfragments_source_valid;
			subfragments_source_ready <= litepciedma0_litepciemasterinternalport0_source_ready;
			litepciedma0_litepciemasterinternalport0_source_first <= subfragments_source_first;
			litepciedma0_litepciemasterinternalport0_source_last <= subfragments_source_last;
			litepciedma0_litepciemasterinternalport0_source_payload_adr <= subfragments_source_payload_adr;
			litepciedma0_litepciemasterinternalport0_source_payload_len <= subfragments_source_payload_len;
			litepciedma0_litepciemasterinternalport0_source_payload_end <= subfragments_source_payload_end;
			litepciedma0_litepciemasterinternalport0_source_payload_req_id <= subfragments_source_payload_req_id;
			litepciedma0_litepciemasterinternalport0_source_payload_cmp_id <= subfragments_source_payload_cmp_id;
			litepciedma0_litepciemasterinternalport0_source_payload_err <= subfragments_source_payload_err;
			litepciedma0_litepciemasterinternalport0_source_payload_tag <= subfragments_source_payload_tag;
			litepciedma0_litepciemasterinternalport0_source_payload_dat <= subfragments_source_payload_dat;
			litepciedma0_litepciemasterinternalport0_source_payload_channel <= subfragments_source_payload_channel;
			litepciedma0_litepciemasterinternalport0_source_payload_user_id <= subfragments_source_payload_user_id;
		end
		2'd2: begin
			litepciedma1_litepciemasterinternalport2_source_valid <= subfragments_source_valid;
			subfragments_source_ready <= litepciedma1_litepciemasterinternalport2_source_ready;
			litepciedma1_litepciemasterinternalport2_source_first <= subfragments_source_first;
			litepciedma1_litepciemasterinternalport2_source_last <= subfragments_source_last;
			litepciedma1_litepciemasterinternalport2_source_payload_adr <= subfragments_source_payload_adr;
			litepciedma1_litepciemasterinternalport2_source_payload_len <= subfragments_source_payload_len;
			litepciedma1_litepciemasterinternalport2_source_payload_end <= subfragments_source_payload_end;
			litepciedma1_litepciemasterinternalport2_source_payload_req_id <= subfragments_source_payload_req_id;
			litepciedma1_litepciemasterinternalport2_source_payload_cmp_id <= subfragments_source_payload_cmp_id;
			litepciedma1_litepciemasterinternalport2_source_payload_err <= subfragments_source_payload_err;
			litepciedma1_litepciemasterinternalport2_source_payload_tag <= subfragments_source_payload_tag;
			litepciedma1_litepciemasterinternalport2_source_payload_dat <= subfragments_source_payload_dat;
			litepciedma1_litepciemasterinternalport2_source_payload_channel <= subfragments_source_payload_channel;
			litepciedma1_litepciemasterinternalport2_source_payload_user_id <= subfragments_source_payload_user_id;
		end
		3'd4: begin
			litepciedma2_litepciemasterinternalport4_source_valid <= subfragments_source_valid;
			subfragments_source_ready <= litepciedma2_litepciemasterinternalport4_source_ready;
			litepciedma2_litepciemasterinternalport4_source_first <= subfragments_source_first;
			litepciedma2_litepciemasterinternalport4_source_last <= subfragments_source_last;
			litepciedma2_litepciemasterinternalport4_source_payload_adr <= subfragments_source_payload_adr;
			litepciedma2_litepciemasterinternalport4_source_payload_len <= subfragments_source_payload_len;
			litepciedma2_litepciemasterinternalport4_source_payload_end <= subfragments_source_payload_end;
			litepciedma2_litepciemasterinternalport4_source_payload_req_id <= subfragments_source_payload_req_id;
			litepciedma2_litepciemasterinternalport4_source_payload_cmp_id <= subfragments_source_payload_cmp_id;
			litepciedma2_litepciemasterinternalport4_source_payload_err <= subfragments_source_payload_err;
			litepciedma2_litepciemasterinternalport4_source_payload_tag <= subfragments_source_payload_tag;
			litepciedma2_litepciemasterinternalport4_source_payload_dat <= subfragments_source_payload_dat;
			litepciedma2_litepciemasterinternalport4_source_payload_channel <= subfragments_source_payload_channel;
			litepciedma2_litepciemasterinternalport4_source_payload_user_id <= subfragments_source_payload_user_id;
		end
		default: begin
			subfragments_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	subfragments_dispatcher1_last <= 1'd0;
	if (subfragments_source_valid) begin
		subfragments_dispatcher1_last <= (subfragments_source_last & subfragments_source_ready);
	end
end
assign subfragments_dispatcher1_ongoing0 = ((subfragments_source_valid | subfragments_dispatcher1_ongoing1) & (~subfragments_dispatcher1_last));
always @(*) begin
	subfragments_arbiter2_request <= 2'd0;
	subfragments_arbiter2_request[0] <= subfragments_arbiter2_status6_ongoing0;
	subfragments_arbiter2_request[1] <= subfragments_arbiter2_status7_ongoing0;
end
always @(*) begin
	pcie_endpoint_master_sink_payload_len <= 10'd0;
	subfragments_sink_ready <= 1'd0;
	pcie_endpoint_master_sink_payload_req_id <= 16'd0;
	pcie_endpoint_master_sink_payload_tag <= 8'd0;
	pcie_endpoint_master_sink_payload_dat <= 128'd0;
	pcie_endpoint_master_sink_payload_adr <= 32'd0;
	pcie_endpoint_master_sink_payload_channel <= 8'd0;
	pcie_endpoint_master_sink_payload_user_id <= 8'd0;
	pcie_endpoint_master_sink_valid <= 1'd0;
	pcie_endpoint_master_sink_first <= 1'd0;
	pcie_endpoint_master_sink_last <= 1'd0;
	subfragments_master_out_sink_ready <= 1'd0;
	pcie_endpoint_master_sink_payload_we <= 1'd0;
	case (subfragments_arbiter2_grant)
		1'd0: begin
			pcie_endpoint_master_sink_valid <= subfragments_master_out_sink_valid;
			subfragments_master_out_sink_ready <= pcie_endpoint_master_sink_ready;
			pcie_endpoint_master_sink_first <= subfragments_master_out_sink_first;
			pcie_endpoint_master_sink_last <= subfragments_master_out_sink_last;
			pcie_endpoint_master_sink_payload_we <= subfragments_master_out_sink_payload_we;
			pcie_endpoint_master_sink_payload_adr <= subfragments_master_out_sink_payload_adr;
			pcie_endpoint_master_sink_payload_len <= subfragments_master_out_sink_payload_len;
			pcie_endpoint_master_sink_payload_req_id <= subfragments_master_out_sink_payload_req_id;
			pcie_endpoint_master_sink_payload_tag <= subfragments_master_out_sink_payload_tag;
			pcie_endpoint_master_sink_payload_dat <= subfragments_master_out_sink_payload_dat;
			pcie_endpoint_master_sink_payload_channel <= subfragments_master_out_sink_payload_channel;
			pcie_endpoint_master_sink_payload_user_id <= subfragments_master_out_sink_payload_user_id;
		end
		1'd1: begin
			pcie_endpoint_master_sink_valid <= subfragments_sink_valid;
			subfragments_sink_ready <= pcie_endpoint_master_sink_ready;
			pcie_endpoint_master_sink_first <= subfragments_sink_first;
			pcie_endpoint_master_sink_last <= subfragments_sink_last;
			pcie_endpoint_master_sink_payload_we <= subfragments_sink_payload_we;
			pcie_endpoint_master_sink_payload_adr <= subfragments_sink_payload_adr;
			pcie_endpoint_master_sink_payload_len <= subfragments_sink_payload_len;
			pcie_endpoint_master_sink_payload_req_id <= subfragments_sink_payload_req_id;
			pcie_endpoint_master_sink_payload_tag <= subfragments_sink_payload_tag;
			pcie_endpoint_master_sink_payload_dat <= subfragments_sink_payload_dat;
			pcie_endpoint_master_sink_payload_channel <= subfragments_sink_payload_channel;
			pcie_endpoint_master_sink_payload_user_id <= subfragments_sink_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_arbiter2_status6_last <= 1'd0;
	if (subfragments_master_out_sink_valid) begin
		subfragments_arbiter2_status6_last <= (subfragments_master_out_sink_last & subfragments_master_out_sink_ready);
	end
end
assign subfragments_arbiter2_status6_ongoing0 = ((subfragments_master_out_sink_valid | subfragments_arbiter2_status6_ongoing1) & (~subfragments_arbiter2_status6_last));
always @(*) begin
	subfragments_arbiter2_status7_last <= 1'd0;
	if (subfragments_sink_valid) begin
		subfragments_arbiter2_status7_last <= (subfragments_sink_last & subfragments_sink_ready);
	end
end
assign subfragments_arbiter2_status7_ongoing0 = ((subfragments_sink_valid | subfragments_arbiter2_status7_ongoing1) & (~subfragments_arbiter2_status7_last));
always @(*) begin
	source_ready <= 1'd0;
	sink_valid <= 1'd0;
	wishbone_cyc <= 1'd0;
	update_dat <= 1'd0;
	wishbone_stb <= 1'd0;
	wishbone_we <= 1'd0;
	subfragments_next_state <= 3'd0;
	subfragments_next_state <= subfragments_state;
	case (subfragments_state)
		1'd1: begin
			wishbone_stb <= 1'd1;
			wishbone_we <= 1'd1;
			wishbone_cyc <= 1'd1;
			if (wishbone_ack) begin
				subfragments_next_state <= 3'd4;
			end
		end
		2'd2: begin
			wishbone_stb <= 1'd1;
			wishbone_we <= 1'd0;
			wishbone_cyc <= 1'd1;
			if (wishbone_ack) begin
				update_dat <= 1'd1;
				subfragments_next_state <= 2'd3;
			end
		end
		2'd3: begin
			sink_valid <= 1'd1;
			if (sink_ready) begin
				subfragments_next_state <= 3'd4;
			end
		end
		3'd4: begin
			source_ready <= 1'd1;
			subfragments_next_state <= 1'd0;
		end
		default: begin
			if ((source_valid & source_first)) begin
				if (source_payload_we) begin
					subfragments_next_state <= 1'd1;
				end else begin
					subfragments_next_state <= 2'd2;
				end
			end else begin
				source_ready <= source_valid;
			end
		end
	endcase
end
assign litepciedma0_syncfifo0_sink_valid = litepciedma0_reader_source_source_valid;
assign litepciedma0_reader_source_source_ready = litepciedma0_syncfifo0_sink_ready;
assign litepciedma0_syncfifo0_sink_first = litepciedma0_reader_source_source_first;
assign litepciedma0_syncfifo0_sink_last = litepciedma0_reader_source_source_last;
assign litepciedma0_syncfifo0_sink_payload_data = litepciedma0_reader_source_source_payload_data;
assign litepciedma0_writer_sink_sink_valid = litepciedma0_syncfifo1_source_valid;
assign litepciedma0_syncfifo1_source_ready = litepciedma0_writer_sink_sink_ready;
assign litepciedma0_writer_sink_sink_first = litepciedma0_syncfifo1_source_first;
assign litepciedma0_writer_sink_sink_last = litepciedma0_syncfifo1_source_last;
assign litepciedma0_writer_sink_sink_payload_data = litepciedma0_syncfifo1_source_payload_data;
assign litepciedma0_reader_fifo_reset = (~litepciedma0_reader_enable_storage);
assign litepciedma0_writer_fifo_reset = (~litepciedma0_writer_enable_storage);
assign litepciedma0_writer_fifo_syncfifo0_we = (litepciedma0_writer_sink_sink_valid & litepciedma0_writer_enable_storage);
assign litepciedma0_writer_sink_sink_ready = (litepciedma0_writer_fifo_syncfifo0_writable | (~litepciedma0_writer_enable_storage));
assign litepciedma0_writer_fifo_syncfifo0_din = {litepciedma0_writer_sink_sink_last, litepciedma0_writer_sink_sink_payload_data};
assign litepciedma0_writer_resetinserter_reset0 = (~litepciedma0_writer_enable_storage);
assign litepciedma0_writer_resetinserter_reset1 = (~litepciedma0_writer_enable_storage);
assign litepciedma0_writer_splitter_sink_valid = litepciedma0_writer_table_source_source_valid;
assign litepciedma0_writer_table_source_source_ready = litepciedma0_writer_splitter_sink_ready;
assign litepciedma0_writer_splitter_sink_first = litepciedma0_writer_table_source_source_first;
assign litepciedma0_writer_splitter_sink_last = litepciedma0_writer_table_source_source_last;
assign litepciedma0_writer_splitter_sink_payload_address = litepciedma0_writer_table_source_source_payload_address;
assign litepciedma0_writer_splitter_sink_payload_length = litepciedma0_writer_table_source_source_payload_length;
assign litepciedma0_writer_splitter_sink_payload_control = litepciedma0_writer_table_source_source_payload_control;
assign litepciedma0_litepciemasterinternalport0_sink_payload_channel = 1'd0;
assign litepciedma0_litepciemasterinternalport0_sink_payload_user_id = litepciedma0_writer_bufferizeendpoints0_source_payload_user_id;
assign litepciedma0_litepciemasterinternalport0_sink_first = (litepciedma0_writer_counter == 1'd0);
assign litepciedma0_litepciemasterinternalport0_sink_last = ((~litepciedma0_writer_enable_storage) | (litepciedma0_writer_counter == (litepciedma0_writer_bufferizeendpoints0_source_payload_length[23:4] - 1'd1)));
assign litepciedma0_litepciemasterinternalport0_sink_payload_we = 1'd1;
assign litepciedma0_litepciemasterinternalport0_sink_payload_adr = litepciedma0_writer_bufferizeendpoints0_source_payload_address;
assign litepciedma0_litepciemasterinternalport0_sink_payload_req_id = pcie_phy_id;
assign litepciedma0_litepciemasterinternalport0_sink_payload_tag = 1'd0;
assign litepciedma0_litepciemasterinternalport0_sink_payload_len = litepciedma0_writer_bufferizeendpoints0_source_payload_length[23:2];
assign litepciedma0_litepciemasterinternalport0_sink_payload_dat = litepciedma0_writer_fifo_syncfifo0_dout[127:0];
assign litepciedma0_writer_irq = (((litepciedma0_writer_bufferizeendpoints0_source_valid & litepciedma0_writer_bufferizeendpoints0_source_ready) & litepciedma0_writer_bufferizeendpoints0_source_last) & (~litepciedma0_writer_bufferizeendpoints0_source_payload_control[0]));
assign litepciedma0_writer_fifo_syncfifo0_re = (litepciedma0_writer_fifo_syncfifo0_readable & ((~litepciedma0_writer_fifo_readable) | litepciedma0_writer_fifo_re));
assign litepciedma0_writer_fifo_level1 = (litepciedma0_writer_fifo_level0 + litepciedma0_writer_fifo_readable);
always @(*) begin
	litepciedma0_writer_fifo_wrport_adr <= 7'd0;
	if (litepciedma0_writer_fifo_replace) begin
		litepciedma0_writer_fifo_wrport_adr <= (litepciedma0_writer_fifo_produce - 1'd1);
	end else begin
		litepciedma0_writer_fifo_wrport_adr <= litepciedma0_writer_fifo_produce;
	end
end
assign litepciedma0_writer_fifo_wrport_dat_w = litepciedma0_writer_fifo_syncfifo0_din;
assign litepciedma0_writer_fifo_wrport_we = (litepciedma0_writer_fifo_syncfifo0_we & (litepciedma0_writer_fifo_syncfifo0_writable | litepciedma0_writer_fifo_replace));
assign litepciedma0_writer_fifo_do_read = (litepciedma0_writer_fifo_syncfifo0_readable & litepciedma0_writer_fifo_syncfifo0_re);
assign litepciedma0_writer_fifo_rdport_adr = litepciedma0_writer_fifo_consume;
assign litepciedma0_writer_fifo_syncfifo0_dout = litepciedma0_writer_fifo_rdport_dat_r;
assign litepciedma0_writer_fifo_rdport_re = litepciedma0_writer_fifo_do_read;
assign litepciedma0_writer_fifo_syncfifo0_writable = (litepciedma0_writer_fifo_level0 != 8'd128);
assign litepciedma0_writer_fifo_syncfifo0_readable = (litepciedma0_writer_fifo_level0 != 1'd0);
assign litepciedma0_writer_table_reset = (litepciedma0_writer_table_flush_r & litepciedma0_writer_table_flush_re);
assign litepciedma0_writer_table_level_status = litepciedma0_writer_table_syncfifo0_level;
assign litepciedma0_writer_table_source_source_valid = litepciedma0_writer_table_syncfifo0_source_valid;
assign litepciedma0_writer_table_source_source_first = litepciedma0_writer_table_syncfifo0_source_first;
assign litepciedma0_writer_table_syncfifo0_source_ready = (litepciedma0_writer_table_source_source_valid & litepciedma0_writer_table_source_source_ready);
assign litepciedma0_writer_table_source_source_payload_address = litepciedma0_writer_table_syncfifo0_source_payload_address;
assign litepciedma0_writer_table_source_source_payload_length = litepciedma0_writer_table_syncfifo0_source_payload_length;
assign litepciedma0_writer_table_source_source_payload_control = litepciedma0_writer_table_syncfifo0_source_payload_control;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_din = {litepciedma0_writer_table_syncfifo0_fifo_in_last, litepciedma0_writer_table_syncfifo0_fifo_in_first, litepciedma0_writer_table_syncfifo0_fifo_in_payload_control, litepciedma0_writer_table_syncfifo0_fifo_in_payload_length, litepciedma0_writer_table_syncfifo0_fifo_in_payload_address};
assign {litepciedma0_writer_table_syncfifo0_fifo_out_last, litepciedma0_writer_table_syncfifo0_fifo_out_first, litepciedma0_writer_table_syncfifo0_fifo_out_payload_control, litepciedma0_writer_table_syncfifo0_fifo_out_payload_length, litepciedma0_writer_table_syncfifo0_fifo_out_payload_address} = litepciedma0_writer_table_syncfifo0_syncfifo0_dout;
assign litepciedma0_writer_table_syncfifo0_sink_ready = litepciedma0_writer_table_syncfifo0_syncfifo0_writable;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_we = litepciedma0_writer_table_syncfifo0_sink_valid;
assign litepciedma0_writer_table_syncfifo0_fifo_in_first = litepciedma0_writer_table_syncfifo0_sink_first;
assign litepciedma0_writer_table_syncfifo0_fifo_in_last = litepciedma0_writer_table_syncfifo0_sink_last;
assign litepciedma0_writer_table_syncfifo0_fifo_in_payload_address = litepciedma0_writer_table_syncfifo0_sink_payload_address;
assign litepciedma0_writer_table_syncfifo0_fifo_in_payload_length = litepciedma0_writer_table_syncfifo0_sink_payload_length;
assign litepciedma0_writer_table_syncfifo0_fifo_in_payload_control = litepciedma0_writer_table_syncfifo0_sink_payload_control;
assign litepciedma0_writer_table_syncfifo0_source_valid = litepciedma0_writer_table_syncfifo0_syncfifo0_readable;
assign litepciedma0_writer_table_syncfifo0_source_first = litepciedma0_writer_table_syncfifo0_fifo_out_first;
assign litepciedma0_writer_table_syncfifo0_source_last = litepciedma0_writer_table_syncfifo0_fifo_out_last;
assign litepciedma0_writer_table_syncfifo0_source_payload_address = litepciedma0_writer_table_syncfifo0_fifo_out_payload_address;
assign litepciedma0_writer_table_syncfifo0_source_payload_length = litepciedma0_writer_table_syncfifo0_fifo_out_payload_length;
assign litepciedma0_writer_table_syncfifo0_source_payload_control = litepciedma0_writer_table_syncfifo0_fifo_out_payload_control;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_re = litepciedma0_writer_table_syncfifo0_source_ready;
always @(*) begin
	litepciedma0_writer_table_syncfifo0_wrport_adr <= 8'd0;
	if (litepciedma0_writer_table_syncfifo0_replace) begin
		litepciedma0_writer_table_syncfifo0_wrport_adr <= (litepciedma0_writer_table_syncfifo0_produce - 1'd1);
	end else begin
		litepciedma0_writer_table_syncfifo0_wrport_adr <= litepciedma0_writer_table_syncfifo0_produce;
	end
end
assign litepciedma0_writer_table_syncfifo0_wrport_dat_w = litepciedma0_writer_table_syncfifo0_syncfifo0_din;
assign litepciedma0_writer_table_syncfifo0_wrport_we = (litepciedma0_writer_table_syncfifo0_syncfifo0_we & (litepciedma0_writer_table_syncfifo0_syncfifo0_writable | litepciedma0_writer_table_syncfifo0_replace));
assign litepciedma0_writer_table_syncfifo0_do_read = (litepciedma0_writer_table_syncfifo0_syncfifo0_readable & litepciedma0_writer_table_syncfifo0_syncfifo0_re);
assign litepciedma0_writer_table_syncfifo0_rdport_adr = litepciedma0_writer_table_syncfifo0_consume;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_dout = litepciedma0_writer_table_syncfifo0_rdport_dat_r;
assign litepciedma0_writer_table_syncfifo0_syncfifo0_writable = (litepciedma0_writer_table_syncfifo0_level != 9'd256);
assign litepciedma0_writer_table_syncfifo0_syncfifo0_readable = (litepciedma0_writer_table_syncfifo0_level != 1'd0);
assign litepciedma0_writer_splitter_user_id_ce = (litepciedma0_writer_splitter_sink_valid & litepciedma0_writer_splitter_sink_ready);
assign litepciedma0_writer_splitter_source_payload_address = (litepciedma0_writer_splitter_sink_payload_address + litepciedma0_writer_splitter_offset);
assign litepciedma0_writer_splitter_source_payload_control = litepciedma0_writer_splitter_sink_payload_control;
assign litepciedma0_writer_splitter_source_payload_user_id = litepciedma0_writer_splitter_user_id;
assign litepciedma0_writer_bufferizeendpoints0_sink_valid = litepciedma0_writer_splitter_source_valid;
assign litepciedma0_writer_splitter_source_ready = litepciedma0_writer_bufferizeendpoints0_sink_ready;
assign litepciedma0_writer_bufferizeendpoints0_sink_first = litepciedma0_writer_splitter_source_first;
assign litepciedma0_writer_bufferizeendpoints0_sink_last = litepciedma0_writer_splitter_source_last;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_address = litepciedma0_writer_splitter_source_payload_address;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_length = litepciedma0_writer_splitter_source_payload_length;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_control = litepciedma0_writer_splitter_source_payload_control;
assign litepciedma0_writer_bufferizeendpoints0_sink_payload_user_id = litepciedma0_writer_splitter_source_payload_user_id;
always @(*) begin
	litepciedma0_writer_splitter_source_valid <= 1'd0;
	subfragments_bufferizeendpoints0_next_state0 <= 2'd0;
	litepciedma0_writer_splitter_source_first <= 1'd0;
	litepciedma0_writer_splitter_length_update <= 1'd0;
	litepciedma0_writer_splitter_source_last <= 1'd0;
	litepciedma0_writer_splitter_source_payload_length <= 24'd0;
	litepciedma0_writer_splitter_sink_ready <= 1'd0;
	litepciedma0_writer_splitter_offset_reset <= 1'd0;
	litepciedma0_writer_splitter_offset_ce <= 1'd0;
	subfragments_bufferizeendpoints0_next_state0 <= subfragments_bufferizeendpoints0_state0;
	case (subfragments_bufferizeendpoints0_state0)
		1'd1: begin
			litepciedma0_writer_splitter_source_valid <= 1'd1;
			litepciedma0_writer_splitter_source_first <= (litepciedma0_writer_splitter_offset == 1'd0);
			if (((litepciedma0_writer_splitter_length - litepciedma0_writer_splitter_offset) > pcie_phy_max_payload_size)) begin
				litepciedma0_writer_splitter_source_last <= litepciedma0_writer_splitter_end;
				litepciedma0_writer_splitter_source_payload_length <= pcie_phy_max_payload_size;
				litepciedma0_writer_splitter_offset_ce <= litepciedma0_writer_splitter_source_ready;
				if ((litepciedma0_writer_splitter_source_ready & litepciedma0_writer_splitter_end)) begin
					subfragments_bufferizeendpoints0_next_state0 <= 2'd2;
				end
			end else begin
				litepciedma0_writer_splitter_source_last <= 1'd1;
				litepciedma0_writer_splitter_source_payload_length <= (litepciedma0_writer_splitter_length - litepciedma0_writer_splitter_offset);
				if (litepciedma0_writer_splitter_source_ready) begin
					subfragments_bufferizeendpoints0_next_state0 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma0_writer_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints0_next_state0 <= 1'd0;
		end
		default: begin
			litepciedma0_writer_splitter_offset_reset <= 1'd1;
			if (litepciedma0_writer_splitter_sink_valid) begin
				litepciedma0_writer_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints0_next_state0 <= 1'd1;
			end else begin
				litepciedma0_writer_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_writer_bufferizeendpoints0_pipe_ce = (litepciedma0_writer_bufferizeendpoints0_source_ready | (~litepciedma0_writer_bufferizeendpoints0_valid_n));
assign litepciedma0_writer_bufferizeendpoints0_sink_ready = litepciedma0_writer_bufferizeendpoints0_pipe_ce;
assign litepciedma0_writer_bufferizeendpoints0_source_valid = litepciedma0_writer_bufferizeendpoints0_valid_n;
assign litepciedma0_writer_bufferizeendpoints0_busy = (1'd0 | litepciedma0_writer_bufferizeendpoints0_valid_n);
assign litepciedma0_writer_bufferizeendpoints0_source_first = litepciedma0_writer_bufferizeendpoints0_first_n;
assign litepciedma0_writer_bufferizeendpoints0_source_last = litepciedma0_writer_bufferizeendpoints0_last_n;
always @(*) begin
	litepciedma0_writer_bufferizeendpoints0_source_ready <= 1'd0;
	litepciedma0_writer_splitter_end <= 1'd0;
	subfragments_fsm0_next_state1 <= 1'd0;
	litepciedma0_writer_counter_reset <= 1'd0;
	litepciedma0_litepciemasterinternalport0_sink_valid <= 1'd0;
	litepciedma0_writer_counter_ce <= 1'd0;
	litepciedma0_writer_fifo_re <= 1'd0;
	subfragments_fsm0_next_state1 <= subfragments_fsm0_state1;
	case (subfragments_fsm0_state1)
		1'd1: begin
			litepciedma0_writer_counter_ce <= (litepciedma0_litepciemasterinternalport0_sink_valid & litepciedma0_litepciemasterinternalport0_sink_ready);
			litepciedma0_litepciemasterinternalport0_sink_valid <= 1'd1;
			if (litepciedma0_litepciemasterinternalport0_sink_ready) begin
				litepciedma0_writer_fifo_re <= (~(litepciedma0_writer_fifo_syncfifo0_dout[128] & (~litepciedma0_writer_bufferizeendpoints0_source_payload_control[1])));
				if (litepciedma0_litepciemasterinternalport0_sink_last) begin
					litepciedma0_writer_fifo_re <= 1'd1;
					litepciedma0_writer_splitter_end <= (litepciedma0_writer_fifo_syncfifo0_dout[128] & (~litepciedma0_writer_bufferizeendpoints0_source_payload_control[1]));
					litepciedma0_writer_bufferizeendpoints0_source_ready <= 1'd1;
					subfragments_fsm0_next_state1 <= 1'd0;
				end
			end
		end
		default: begin
			litepciedma0_writer_counter_reset <= 1'd1;
			if (litepciedma0_writer_request_ready) begin
				subfragments_fsm0_next_state1 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_reader_resetinserter_reset0 = (~litepciedma0_reader_enable_storage);
assign litepciedma0_reader_splitter_sink_valid = litepciedma0_reader_table_source_source_valid;
assign litepciedma0_reader_table_source_source_ready = litepciedma0_reader_splitter_sink_ready;
assign litepciedma0_reader_splitter_sink_first = litepciedma0_reader_table_source_source_first;
assign litepciedma0_reader_splitter_sink_last = litepciedma0_reader_table_source_source_last;
assign litepciedma0_reader_splitter_sink_payload_address = litepciedma0_reader_table_source_source_payload_address;
assign litepciedma0_reader_splitter_sink_payload_length = litepciedma0_reader_table_source_source_payload_length;
assign litepciedma0_reader_splitter_sink_payload_control = litepciedma0_reader_table_source_source_payload_control;
assign litepciedma0_reader_requests_per_pckt = (litepciedma0_reader_table_value_storage[63:32] >>> 4'd9);
assign litepciedma0_litepciemasterinternalport1_sink_payload_channel = 1'd1;
assign litepciedma0_litepciemasterinternalport1_sink_payload_user_id = litepciedma0_reader_bufferizeendpoints0_source_payload_user_id;
assign litepciedma0_litepciemasterinternalport1_sink_first = 1'd1;
assign litepciedma0_litepciemasterinternalport1_sink_last = 1'd1;
assign litepciedma0_litepciemasterinternalport1_sink_payload_we = 1'd0;
assign litepciedma0_litepciemasterinternalport1_sink_payload_adr = litepciedma0_reader_bufferizeendpoints0_source_payload_address;
assign litepciedma0_litepciemasterinternalport1_sink_payload_len = litepciedma0_reader_bufferizeendpoints0_source_payload_length[23:2];
assign litepciedma0_litepciemasterinternalport1_sink_payload_req_id = pcie_phy_id;
assign litepciedma0_litepciemasterinternalport1_sink_payload_dat = 1'd0;
assign litepciedma0_reader_resetinserter_reset1 = (~litepciedma0_reader_enable_storage);
assign litepciedma0_reader_fifo_sink_valid = (litepciedma0_litepciemasterinternalport1_source_valid & (~litepciedma0_reader_flush));
assign litepciedma0_reader_fifo_sink_first = (litepciedma0_litepciemasterinternalport1_source_first & (litepciedma0_litepciemasterinternalport1_source_payload_user_id != litepciedma0_reader_last_user_id));
assign litepciedma0_reader_fifo_sink_payload_data = litepciedma0_litepciemasterinternalport1_source_payload_dat;
assign litepciedma0_litepciemasterinternalport1_source_ready = (litepciedma0_reader_fifo_sink_ready | (~litepciedma0_reader_enable_storage));
assign litepciedma0_reader_source_source_valid = litepciedma0_reader_fifo_source_valid;
assign litepciedma0_reader_fifo_source_ready = litepciedma0_reader_source_source_ready;
assign litepciedma0_reader_source_source_first = litepciedma0_reader_fifo_source_first;
assign litepciedma0_reader_source_source_last = litepciedma0_reader_fifo_source_last;
assign litepciedma0_reader_source_source_payload_data = litepciedma0_reader_fifo_source_payload_data;
assign litepciedma0_reader_irq = (((litepciedma0_reader_bufferizeendpoints0_source_valid & litepciedma0_reader_bufferizeendpoints0_source_ready) & litepciedma0_reader_bufferizeendpoints0_source_last) & (~litepciedma0_reader_bufferizeendpoints0_source_payload_control[0]));
assign litepciedma0_reader_table_reset = (litepciedma0_reader_table_flush_r & litepciedma0_reader_table_flush_re);
assign litepciedma0_reader_table_level_status = litepciedma0_reader_table_syncfifo0_level;
assign litepciedma0_reader_table_source_source_valid = litepciedma0_reader_table_syncfifo0_source_valid;
assign litepciedma0_reader_table_source_source_first = litepciedma0_reader_table_syncfifo0_source_first;
assign litepciedma0_reader_table_syncfifo0_source_ready = (litepciedma0_reader_table_source_source_valid & litepciedma0_reader_table_source_source_ready);
assign litepciedma0_reader_table_source_source_payload_address = litepciedma0_reader_table_syncfifo0_source_payload_address;
assign litepciedma0_reader_table_source_source_payload_length = litepciedma0_reader_table_syncfifo0_source_payload_length;
assign litepciedma0_reader_table_source_source_payload_control = litepciedma0_reader_table_syncfifo0_source_payload_control;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_din = {litepciedma0_reader_table_syncfifo0_fifo_in_last, litepciedma0_reader_table_syncfifo0_fifo_in_first, litepciedma0_reader_table_syncfifo0_fifo_in_payload_control, litepciedma0_reader_table_syncfifo0_fifo_in_payload_length, litepciedma0_reader_table_syncfifo0_fifo_in_payload_address};
assign {litepciedma0_reader_table_syncfifo0_fifo_out_last, litepciedma0_reader_table_syncfifo0_fifo_out_first, litepciedma0_reader_table_syncfifo0_fifo_out_payload_control, litepciedma0_reader_table_syncfifo0_fifo_out_payload_length, litepciedma0_reader_table_syncfifo0_fifo_out_payload_address} = litepciedma0_reader_table_syncfifo0_syncfifo0_dout;
assign litepciedma0_reader_table_syncfifo0_sink_ready = litepciedma0_reader_table_syncfifo0_syncfifo0_writable;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_we = litepciedma0_reader_table_syncfifo0_sink_valid;
assign litepciedma0_reader_table_syncfifo0_fifo_in_first = litepciedma0_reader_table_syncfifo0_sink_first;
assign litepciedma0_reader_table_syncfifo0_fifo_in_last = litepciedma0_reader_table_syncfifo0_sink_last;
assign litepciedma0_reader_table_syncfifo0_fifo_in_payload_address = litepciedma0_reader_table_syncfifo0_sink_payload_address;
assign litepciedma0_reader_table_syncfifo0_fifo_in_payload_length = litepciedma0_reader_table_syncfifo0_sink_payload_length;
assign litepciedma0_reader_table_syncfifo0_fifo_in_payload_control = litepciedma0_reader_table_syncfifo0_sink_payload_control;
assign litepciedma0_reader_table_syncfifo0_source_valid = litepciedma0_reader_table_syncfifo0_syncfifo0_readable;
assign litepciedma0_reader_table_syncfifo0_source_first = litepciedma0_reader_table_syncfifo0_fifo_out_first;
assign litepciedma0_reader_table_syncfifo0_source_last = litepciedma0_reader_table_syncfifo0_fifo_out_last;
assign litepciedma0_reader_table_syncfifo0_source_payload_address = litepciedma0_reader_table_syncfifo0_fifo_out_payload_address;
assign litepciedma0_reader_table_syncfifo0_source_payload_length = litepciedma0_reader_table_syncfifo0_fifo_out_payload_length;
assign litepciedma0_reader_table_syncfifo0_source_payload_control = litepciedma0_reader_table_syncfifo0_fifo_out_payload_control;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_re = litepciedma0_reader_table_syncfifo0_source_ready;
always @(*) begin
	litepciedma0_reader_table_syncfifo0_wrport_adr <= 8'd0;
	if (litepciedma0_reader_table_syncfifo0_replace) begin
		litepciedma0_reader_table_syncfifo0_wrport_adr <= (litepciedma0_reader_table_syncfifo0_produce - 1'd1);
	end else begin
		litepciedma0_reader_table_syncfifo0_wrport_adr <= litepciedma0_reader_table_syncfifo0_produce;
	end
end
assign litepciedma0_reader_table_syncfifo0_wrport_dat_w = litepciedma0_reader_table_syncfifo0_syncfifo0_din;
assign litepciedma0_reader_table_syncfifo0_wrport_we = (litepciedma0_reader_table_syncfifo0_syncfifo0_we & (litepciedma0_reader_table_syncfifo0_syncfifo0_writable | litepciedma0_reader_table_syncfifo0_replace));
assign litepciedma0_reader_table_syncfifo0_do_read = (litepciedma0_reader_table_syncfifo0_syncfifo0_readable & litepciedma0_reader_table_syncfifo0_syncfifo0_re);
assign litepciedma0_reader_table_syncfifo0_rdport_adr = litepciedma0_reader_table_syncfifo0_consume;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_dout = litepciedma0_reader_table_syncfifo0_rdport_dat_r;
assign litepciedma0_reader_table_syncfifo0_syncfifo0_writable = (litepciedma0_reader_table_syncfifo0_level != 9'd256);
assign litepciedma0_reader_table_syncfifo0_syncfifo0_readable = (litepciedma0_reader_table_syncfifo0_level != 1'd0);
assign litepciedma0_reader_splitter_user_id_ce = (litepciedma0_reader_splitter_sink_valid & litepciedma0_reader_splitter_sink_ready);
assign litepciedma0_reader_splitter_source_payload_address = (litepciedma0_reader_splitter_sink_payload_address + litepciedma0_reader_splitter_offset);
assign litepciedma0_reader_splitter_source_payload_control = litepciedma0_reader_splitter_sink_payload_control;
assign litepciedma0_reader_splitter_source_payload_user_id = litepciedma0_reader_splitter_user_id;
assign litepciedma0_reader_bufferizeendpoints0_sink_valid = litepciedma0_reader_splitter_source_valid;
assign litepciedma0_reader_splitter_source_ready = litepciedma0_reader_bufferizeendpoints0_sink_ready;
assign litepciedma0_reader_bufferizeendpoints0_sink_first = litepciedma0_reader_splitter_source_first;
assign litepciedma0_reader_bufferizeendpoints0_sink_last = litepciedma0_reader_splitter_source_last;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_address = litepciedma0_reader_splitter_source_payload_address;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_length = litepciedma0_reader_splitter_source_payload_length;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_control = litepciedma0_reader_splitter_source_payload_control;
assign litepciedma0_reader_bufferizeendpoints0_sink_payload_user_id = litepciedma0_reader_splitter_source_payload_user_id;
always @(*) begin
	litepciedma0_reader_splitter_source_valid <= 1'd0;
	subfragments_bufferizeendpoints0_next_state1 <= 2'd0;
	litepciedma0_reader_splitter_source_first <= 1'd0;
	litepciedma0_reader_splitter_length_update <= 1'd0;
	litepciedma0_reader_splitter_source_last <= 1'd0;
	litepciedma0_reader_splitter_source_payload_length <= 24'd0;
	litepciedma0_reader_splitter_sink_ready <= 1'd0;
	litepciedma0_reader_splitter_offset_reset <= 1'd0;
	litepciedma0_reader_splitter_offset_ce <= 1'd0;
	subfragments_bufferizeendpoints0_next_state1 <= subfragments_bufferizeendpoints0_state1;
	case (subfragments_bufferizeendpoints0_state1)
		1'd1: begin
			litepciedma0_reader_splitter_source_valid <= 1'd1;
			litepciedma0_reader_splitter_source_first <= (litepciedma0_reader_splitter_offset == 1'd0);
			if (((litepciedma0_reader_splitter_length - litepciedma0_reader_splitter_offset) > 10'd512)) begin
				litepciedma0_reader_splitter_source_last <= litepciedma0_reader_splitter_end;
				litepciedma0_reader_splitter_source_payload_length <= 10'd512;
				litepciedma0_reader_splitter_offset_ce <= litepciedma0_reader_splitter_source_ready;
				if ((litepciedma0_reader_splitter_source_ready & litepciedma0_reader_splitter_end)) begin
					subfragments_bufferizeendpoints0_next_state1 <= 2'd2;
				end
			end else begin
				litepciedma0_reader_splitter_source_last <= 1'd1;
				litepciedma0_reader_splitter_source_payload_length <= (litepciedma0_reader_splitter_length - litepciedma0_reader_splitter_offset);
				if (litepciedma0_reader_splitter_source_ready) begin
					subfragments_bufferizeendpoints0_next_state1 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma0_reader_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints0_next_state1 <= 1'd0;
		end
		default: begin
			litepciedma0_reader_splitter_offset_reset <= 1'd1;
			if (litepciedma0_reader_splitter_sink_valid) begin
				litepciedma0_reader_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints0_next_state1 <= 1'd1;
			end else begin
				litepciedma0_reader_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_reader_bufferizeendpoints0_pipe_ce = (litepciedma0_reader_bufferizeendpoints0_source_ready | (~litepciedma0_reader_bufferizeendpoints0_valid_n));
assign litepciedma0_reader_bufferizeendpoints0_sink_ready = litepciedma0_reader_bufferizeendpoints0_pipe_ce;
assign litepciedma0_reader_bufferizeendpoints0_source_valid = litepciedma0_reader_bufferizeendpoints0_valid_n;
assign litepciedma0_reader_bufferizeendpoints0_busy = (1'd0 | litepciedma0_reader_bufferizeendpoints0_valid_n);
assign litepciedma0_reader_bufferizeendpoints0_source_first = litepciedma0_reader_bufferizeendpoints0_first_n;
assign litepciedma0_reader_bufferizeendpoints0_source_last = litepciedma0_reader_bufferizeendpoints0_last_n;
always @(*) begin
	litepciedma0_reader_request_cnt_litepciedma0_next_value0 <= 8'd0;
	litepciedma0_litepciemasterinternalport1_sink_valid <= 1'd0;
	litepciedma0_reader_request_cnt_litepciedma0_next_value_ce0 <= 1'd0;
	litepciedma0_reader_bufferizeendpoints0_source_ready <= 1'd0;
	litepciedma0_reader_request_counted_litepciedma0_next_value1 <= 1'd0;
	litepciedma0_reader_request_counted_litepciedma0_next_value_ce1 <= 1'd0;
	subfragments_fsm0_next_state2 <= 1'd0;
	subfragments_fsm0_next_state2 <= subfragments_fsm0_state2;
	case (subfragments_fsm0_state2)
		1'd1: begin
			litepciedma0_litepciemasterinternalport1_sink_valid <= 1'd1;
			if (litepciedma0_litepciemasterinternalport1_sink_ready) begin
				litepciedma0_reader_request_cnt_litepciedma0_next_value0 <= (litepciedma0_reader_request_cnt + 1'd1);
				litepciedma0_reader_request_cnt_litepciedma0_next_value_ce0 <= 1'd1;
				litepciedma0_reader_request_counted_litepciedma0_next_value1 <= 1'd1;
				litepciedma0_reader_request_counted_litepciedma0_next_value_ce1 <= 1'd1;
				if ((litepciedma0_reader_request_cnt == litepciedma0_reader_requests_per_pckt)) begin
					litepciedma0_reader_request_cnt_litepciedma0_next_value0 <= 1'd1;
					litepciedma0_reader_request_cnt_litepciedma0_next_value_ce0 <= 1'd1;
				end
				litepciedma0_reader_bufferizeendpoints0_source_ready <= 1'd1;
				subfragments_fsm0_next_state2 <= 1'd0;
			end
		end
		default: begin
			if (litepciedma0_reader_request_ready) begin
				subfragments_fsm0_next_state2 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma0_reader_fifo_syncfifo0_din = {litepciedma0_reader_fifo_fifo_in_last, litepciedma0_reader_fifo_fifo_in_first, litepciedma0_reader_fifo_fifo_in_payload_data};
assign {litepciedma0_reader_fifo_fifo_out_last, litepciedma0_reader_fifo_fifo_out_first, litepciedma0_reader_fifo_fifo_out_payload_data} = litepciedma0_reader_fifo_syncfifo0_dout;
assign litepciedma0_reader_fifo_sink_ready = litepciedma0_reader_fifo_syncfifo0_writable;
assign litepciedma0_reader_fifo_syncfifo0_we = litepciedma0_reader_fifo_sink_valid;
assign litepciedma0_reader_fifo_fifo_in_first = litepciedma0_reader_fifo_sink_first;
assign litepciedma0_reader_fifo_fifo_in_last = litepciedma0_reader_fifo_sink_last;
assign litepciedma0_reader_fifo_fifo_in_payload_data = litepciedma0_reader_fifo_sink_payload_data;
assign litepciedma0_reader_fifo_source_valid = litepciedma0_reader_fifo_readable;
assign litepciedma0_reader_fifo_source_first = litepciedma0_reader_fifo_fifo_out_first;
assign litepciedma0_reader_fifo_source_last = litepciedma0_reader_fifo_fifo_out_last;
assign litepciedma0_reader_fifo_source_payload_data = litepciedma0_reader_fifo_fifo_out_payload_data;
assign litepciedma0_reader_fifo_re = litepciedma0_reader_fifo_source_ready;
assign litepciedma0_reader_fifo_syncfifo0_re = (litepciedma0_reader_fifo_syncfifo0_readable & ((~litepciedma0_reader_fifo_readable) | litepciedma0_reader_fifo_re));
assign litepciedma0_reader_fifo_level1 = (litepciedma0_reader_fifo_level0 + litepciedma0_reader_fifo_readable);
always @(*) begin
	litepciedma0_reader_fifo_wrport_adr <= 8'd0;
	if (litepciedma0_reader_fifo_replace) begin
		litepciedma0_reader_fifo_wrport_adr <= (litepciedma0_reader_fifo_produce - 1'd1);
	end else begin
		litepciedma0_reader_fifo_wrport_adr <= litepciedma0_reader_fifo_produce;
	end
end
assign litepciedma0_reader_fifo_wrport_dat_w = litepciedma0_reader_fifo_syncfifo0_din;
assign litepciedma0_reader_fifo_wrport_we = (litepciedma0_reader_fifo_syncfifo0_we & (litepciedma0_reader_fifo_syncfifo0_writable | litepciedma0_reader_fifo_replace));
assign litepciedma0_reader_fifo_do_read = (litepciedma0_reader_fifo_syncfifo0_readable & litepciedma0_reader_fifo_syncfifo0_re);
assign litepciedma0_reader_fifo_rdport_adr = litepciedma0_reader_fifo_consume;
assign litepciedma0_reader_fifo_syncfifo0_dout = litepciedma0_reader_fifo_rdport_dat_r;
assign litepciedma0_reader_fifo_rdport_re = litepciedma0_reader_fifo_do_read;
assign litepciedma0_reader_fifo_syncfifo0_writable = (litepciedma0_reader_fifo_level0 != 9'd256);
assign litepciedma0_reader_fifo_syncfifo0_readable = (litepciedma0_reader_fifo_level0 != 1'd0);
assign litepciedma0_reader_fifo_level_status = litepciedma0_syncfifo0_level1;
assign litepciedma0_writer_fifo_level_status = litepciedma0_syncfifo1_level1;
assign litepciedma0_next_source_source_valid = (litepciedma0_syncfifo0_source_valid & litepciedma0_next_source_source_ready);
assign litepciedma0_next_source_source_payload_data = litepciedma0_syncfifo0_source_payload_data;
assign litepciedma0_next_source_source_last = litepciedma0_syncfifo0_source_last;
assign litepciedma0_syncfifo0_source_ready = litepciedma0_next_source_source_ready;
assign litepciedma0_syncfifo0_syncfifo0_din = {litepciedma0_syncfifo0_fifo_in_last, litepciedma0_syncfifo0_fifo_in_first, litepciedma0_syncfifo0_fifo_in_payload_data};
assign {litepciedma0_syncfifo0_fifo_out_last, litepciedma0_syncfifo0_fifo_out_first, litepciedma0_syncfifo0_fifo_out_payload_data} = litepciedma0_syncfifo0_syncfifo0_dout;
assign litepciedma0_syncfifo0_sink_ready = litepciedma0_syncfifo0_syncfifo0_writable;
assign litepciedma0_syncfifo0_syncfifo0_we = litepciedma0_syncfifo0_sink_valid;
assign litepciedma0_syncfifo0_fifo_in_first = litepciedma0_syncfifo0_sink_first;
assign litepciedma0_syncfifo0_fifo_in_last = litepciedma0_syncfifo0_sink_last;
assign litepciedma0_syncfifo0_fifo_in_payload_data = litepciedma0_syncfifo0_sink_payload_data;
assign litepciedma0_syncfifo0_source_valid = litepciedma0_syncfifo0_readable;
assign litepciedma0_syncfifo0_source_first = litepciedma0_syncfifo0_fifo_out_first;
assign litepciedma0_syncfifo0_source_last = litepciedma0_syncfifo0_fifo_out_last;
assign litepciedma0_syncfifo0_source_payload_data = litepciedma0_syncfifo0_fifo_out_payload_data;
assign litepciedma0_syncfifo0_re = litepciedma0_syncfifo0_source_ready;
assign litepciedma0_syncfifo0_syncfifo0_re = (litepciedma0_syncfifo0_syncfifo0_readable & ((~litepciedma0_syncfifo0_readable) | litepciedma0_syncfifo0_re));
assign litepciedma0_syncfifo0_level1 = (litepciedma0_syncfifo0_level0 + litepciedma0_syncfifo0_readable);
always @(*) begin
	litepciedma0_syncfifo0_wrport_adr <= 10'd0;
	if (litepciedma0_syncfifo0_replace) begin
		litepciedma0_syncfifo0_wrport_adr <= (litepciedma0_syncfifo0_produce - 1'd1);
	end else begin
		litepciedma0_syncfifo0_wrport_adr <= litepciedma0_syncfifo0_produce;
	end
end
assign litepciedma0_syncfifo0_wrport_dat_w = litepciedma0_syncfifo0_syncfifo0_din;
assign litepciedma0_syncfifo0_wrport_we = (litepciedma0_syncfifo0_syncfifo0_we & (litepciedma0_syncfifo0_syncfifo0_writable | litepciedma0_syncfifo0_replace));
assign litepciedma0_syncfifo0_do_read = (litepciedma0_syncfifo0_syncfifo0_readable & litepciedma0_syncfifo0_syncfifo0_re);
assign litepciedma0_syncfifo0_rdport_adr = litepciedma0_syncfifo0_consume;
assign litepciedma0_syncfifo0_syncfifo0_dout = litepciedma0_syncfifo0_rdport_dat_r;
assign litepciedma0_syncfifo0_rdport_re = litepciedma0_syncfifo0_do_read;
assign litepciedma0_syncfifo0_syncfifo0_writable = (litepciedma0_syncfifo0_level0 != 10'd768);
assign litepciedma0_syncfifo0_syncfifo0_readable = (litepciedma0_syncfifo0_level0 != 1'd0);
assign litepciedma0_syncfifo1_syncfifo1_din = {litepciedma0_syncfifo1_fifo_in_last, litepciedma0_syncfifo1_fifo_in_first, litepciedma0_syncfifo1_fifo_in_payload_data};
assign {litepciedma0_syncfifo1_fifo_out_last, litepciedma0_syncfifo1_fifo_out_first, litepciedma0_syncfifo1_fifo_out_payload_data} = litepciedma0_syncfifo1_syncfifo1_dout;
assign litepciedma0_syncfifo1_sink_ready = litepciedma0_syncfifo1_syncfifo1_writable;
assign litepciedma0_syncfifo1_syncfifo1_we = litepciedma0_syncfifo1_sink_valid;
assign litepciedma0_syncfifo1_fifo_in_first = litepciedma0_syncfifo1_sink_first;
assign litepciedma0_syncfifo1_fifo_in_last = litepciedma0_syncfifo1_sink_last;
assign litepciedma0_syncfifo1_fifo_in_payload_data = litepciedma0_syncfifo1_sink_payload_data;
assign litepciedma0_syncfifo1_source_valid = litepciedma0_syncfifo1_readable;
assign litepciedma0_syncfifo1_source_first = litepciedma0_syncfifo1_fifo_out_first;
assign litepciedma0_syncfifo1_source_last = litepciedma0_syncfifo1_fifo_out_last;
assign litepciedma0_syncfifo1_source_payload_data = litepciedma0_syncfifo1_fifo_out_payload_data;
assign litepciedma0_syncfifo1_re = litepciedma0_syncfifo1_source_ready;
assign litepciedma0_syncfifo1_syncfifo1_re = (litepciedma0_syncfifo1_syncfifo1_readable & ((~litepciedma0_syncfifo1_readable) | litepciedma0_syncfifo1_re));
assign litepciedma0_syncfifo1_level1 = (litepciedma0_syncfifo1_level0 + litepciedma0_syncfifo1_readable);
always @(*) begin
	litepciedma0_syncfifo1_wrport_adr <= 10'd0;
	if (litepciedma0_syncfifo1_replace) begin
		litepciedma0_syncfifo1_wrport_adr <= (litepciedma0_syncfifo1_produce - 1'd1);
	end else begin
		litepciedma0_syncfifo1_wrport_adr <= litepciedma0_syncfifo1_produce;
	end
end
assign litepciedma0_syncfifo1_wrport_dat_w = litepciedma0_syncfifo1_syncfifo1_din;
assign litepciedma0_syncfifo1_wrport_we = (litepciedma0_syncfifo1_syncfifo1_we & (litepciedma0_syncfifo1_syncfifo1_writable | litepciedma0_syncfifo1_replace));
assign litepciedma0_syncfifo1_do_read = (litepciedma0_syncfifo1_syncfifo1_readable & litepciedma0_syncfifo1_syncfifo1_re);
assign litepciedma0_syncfifo1_rdport_adr = litepciedma0_syncfifo1_consume;
assign litepciedma0_syncfifo1_syncfifo1_dout = litepciedma0_syncfifo1_rdport_dat_r;
assign litepciedma0_syncfifo1_rdport_re = litepciedma0_syncfifo1_do_read;
assign litepciedma0_syncfifo1_syncfifo1_writable = (litepciedma0_syncfifo1_level0 != 10'd768);
assign litepciedma0_syncfifo1_syncfifo1_readable = (litepciedma0_syncfifo1_level0 != 1'd0);
assign litepciedma1_syncfifo2_sink_valid = litepciedma1_reader_source_source_valid;
assign litepciedma1_reader_source_source_ready = litepciedma1_syncfifo2_sink_ready;
assign litepciedma1_syncfifo2_sink_first = litepciedma1_reader_source_source_first;
assign litepciedma1_syncfifo2_sink_last = litepciedma1_reader_source_source_last;
assign litepciedma1_syncfifo2_sink_payload_data = litepciedma1_reader_source_source_payload_data;
assign litepciedma1_writer_sink_sink_valid = litepciedma1_syncfifo3_source_valid;
assign litepciedma1_syncfifo3_source_ready = litepciedma1_writer_sink_sink_ready;
assign litepciedma1_writer_sink_sink_first = litepciedma1_syncfifo3_source_first;
assign litepciedma1_writer_sink_sink_last = litepciedma1_syncfifo3_source_last;
assign litepciedma1_writer_sink_sink_payload_data = litepciedma1_syncfifo3_source_payload_data;
assign litepciedma1_reader_fifo_reset = (~litepciedma1_reader_enable_storage);
assign litepciedma1_writer_fifo_reset = (~litepciedma1_writer_enable_storage);
assign litepciedma1_writer_fifo_syncfifo1_we = (litepciedma1_writer_sink_sink_valid & litepciedma1_writer_enable_storage);
assign litepciedma1_writer_sink_sink_ready = (litepciedma1_writer_fifo_syncfifo1_writable | (~litepciedma1_writer_enable_storage));
assign litepciedma1_writer_fifo_syncfifo1_din = {litepciedma1_writer_sink_sink_last, litepciedma1_writer_sink_sink_payload_data};
assign litepciedma1_writer_resetinserter_reset0 = (~litepciedma1_writer_enable_storage);
assign litepciedma1_writer_resetinserter_reset1 = (~litepciedma1_writer_enable_storage);
assign litepciedma1_writer_splitter_sink_valid = litepciedma1_writer_table_source_source_valid;
assign litepciedma1_writer_table_source_source_ready = litepciedma1_writer_splitter_sink_ready;
assign litepciedma1_writer_splitter_sink_first = litepciedma1_writer_table_source_source_first;
assign litepciedma1_writer_splitter_sink_last = litepciedma1_writer_table_source_source_last;
assign litepciedma1_writer_splitter_sink_payload_address = litepciedma1_writer_table_source_source_payload_address;
assign litepciedma1_writer_splitter_sink_payload_length = litepciedma1_writer_table_source_source_payload_length;
assign litepciedma1_writer_splitter_sink_payload_control = litepciedma1_writer_table_source_source_payload_control;
assign litepciedma1_litepciemasterinternalport2_sink_payload_channel = 2'd2;
assign litepciedma1_litepciemasterinternalport2_sink_payload_user_id = litepciedma1_writer_bufferizeendpoints1_source_payload_user_id;
assign litepciedma1_litepciemasterinternalport2_sink_first = (litepciedma1_writer_counter == 1'd0);
assign litepciedma1_litepciemasterinternalport2_sink_last = ((~litepciedma1_writer_enable_storage) | (litepciedma1_writer_counter == (litepciedma1_writer_bufferizeendpoints1_source_payload_length[23:4] - 1'd1)));
assign litepciedma1_litepciemasterinternalport2_sink_payload_we = 1'd1;
assign litepciedma1_litepciemasterinternalport2_sink_payload_adr = litepciedma1_writer_bufferizeendpoints1_source_payload_address;
assign litepciedma1_litepciemasterinternalport2_sink_payload_req_id = pcie_phy_id;
assign litepciedma1_litepciemasterinternalport2_sink_payload_tag = 1'd0;
assign litepciedma1_litepciemasterinternalport2_sink_payload_len = litepciedma1_writer_bufferizeendpoints1_source_payload_length[23:2];
assign litepciedma1_litepciemasterinternalport2_sink_payload_dat = litepciedma1_writer_fifo_syncfifo1_dout[127:0];
assign litepciedma1_writer_irq = (((litepciedma1_writer_bufferizeendpoints1_source_valid & litepciedma1_writer_bufferizeendpoints1_source_ready) & litepciedma1_writer_bufferizeendpoints1_source_last) & (~litepciedma1_writer_bufferizeendpoints1_source_payload_control[0]));
assign litepciedma1_writer_fifo_syncfifo1_re = (litepciedma1_writer_fifo_syncfifo1_readable & ((~litepciedma1_writer_fifo_readable) | litepciedma1_writer_fifo_re));
assign litepciedma1_writer_fifo_level1 = (litepciedma1_writer_fifo_level0 + litepciedma1_writer_fifo_readable);
always @(*) begin
	litepciedma1_writer_fifo_wrport_adr <= 7'd0;
	if (litepciedma1_writer_fifo_replace) begin
		litepciedma1_writer_fifo_wrport_adr <= (litepciedma1_writer_fifo_produce - 1'd1);
	end else begin
		litepciedma1_writer_fifo_wrport_adr <= litepciedma1_writer_fifo_produce;
	end
end
assign litepciedma1_writer_fifo_wrport_dat_w = litepciedma1_writer_fifo_syncfifo1_din;
assign litepciedma1_writer_fifo_wrport_we = (litepciedma1_writer_fifo_syncfifo1_we & (litepciedma1_writer_fifo_syncfifo1_writable | litepciedma1_writer_fifo_replace));
assign litepciedma1_writer_fifo_do_read = (litepciedma1_writer_fifo_syncfifo1_readable & litepciedma1_writer_fifo_syncfifo1_re);
assign litepciedma1_writer_fifo_rdport_adr = litepciedma1_writer_fifo_consume;
assign litepciedma1_writer_fifo_syncfifo1_dout = litepciedma1_writer_fifo_rdport_dat_r;
assign litepciedma1_writer_fifo_rdport_re = litepciedma1_writer_fifo_do_read;
assign litepciedma1_writer_fifo_syncfifo1_writable = (litepciedma1_writer_fifo_level0 != 8'd128);
assign litepciedma1_writer_fifo_syncfifo1_readable = (litepciedma1_writer_fifo_level0 != 1'd0);
assign litepciedma1_writer_table_reset = (litepciedma1_writer_table_flush_r & litepciedma1_writer_table_flush_re);
assign litepciedma1_writer_table_level_status = litepciedma1_writer_table_syncfifo1_level;
assign litepciedma1_writer_table_source_source_valid = litepciedma1_writer_table_syncfifo1_source_valid;
assign litepciedma1_writer_table_source_source_first = litepciedma1_writer_table_syncfifo1_source_first;
assign litepciedma1_writer_table_syncfifo1_source_ready = (litepciedma1_writer_table_source_source_valid & litepciedma1_writer_table_source_source_ready);
assign litepciedma1_writer_table_source_source_payload_address = litepciedma1_writer_table_syncfifo1_source_payload_address;
assign litepciedma1_writer_table_source_source_payload_length = litepciedma1_writer_table_syncfifo1_source_payload_length;
assign litepciedma1_writer_table_source_source_payload_control = litepciedma1_writer_table_syncfifo1_source_payload_control;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_din = {litepciedma1_writer_table_syncfifo1_fifo_in_last, litepciedma1_writer_table_syncfifo1_fifo_in_first, litepciedma1_writer_table_syncfifo1_fifo_in_payload_control, litepciedma1_writer_table_syncfifo1_fifo_in_payload_length, litepciedma1_writer_table_syncfifo1_fifo_in_payload_address};
assign {litepciedma1_writer_table_syncfifo1_fifo_out_last, litepciedma1_writer_table_syncfifo1_fifo_out_first, litepciedma1_writer_table_syncfifo1_fifo_out_payload_control, litepciedma1_writer_table_syncfifo1_fifo_out_payload_length, litepciedma1_writer_table_syncfifo1_fifo_out_payload_address} = litepciedma1_writer_table_syncfifo1_syncfifo1_dout;
assign litepciedma1_writer_table_syncfifo1_sink_ready = litepciedma1_writer_table_syncfifo1_syncfifo1_writable;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_we = litepciedma1_writer_table_syncfifo1_sink_valid;
assign litepciedma1_writer_table_syncfifo1_fifo_in_first = litepciedma1_writer_table_syncfifo1_sink_first;
assign litepciedma1_writer_table_syncfifo1_fifo_in_last = litepciedma1_writer_table_syncfifo1_sink_last;
assign litepciedma1_writer_table_syncfifo1_fifo_in_payload_address = litepciedma1_writer_table_syncfifo1_sink_payload_address;
assign litepciedma1_writer_table_syncfifo1_fifo_in_payload_length = litepciedma1_writer_table_syncfifo1_sink_payload_length;
assign litepciedma1_writer_table_syncfifo1_fifo_in_payload_control = litepciedma1_writer_table_syncfifo1_sink_payload_control;
assign litepciedma1_writer_table_syncfifo1_source_valid = litepciedma1_writer_table_syncfifo1_syncfifo1_readable;
assign litepciedma1_writer_table_syncfifo1_source_first = litepciedma1_writer_table_syncfifo1_fifo_out_first;
assign litepciedma1_writer_table_syncfifo1_source_last = litepciedma1_writer_table_syncfifo1_fifo_out_last;
assign litepciedma1_writer_table_syncfifo1_source_payload_address = litepciedma1_writer_table_syncfifo1_fifo_out_payload_address;
assign litepciedma1_writer_table_syncfifo1_source_payload_length = litepciedma1_writer_table_syncfifo1_fifo_out_payload_length;
assign litepciedma1_writer_table_syncfifo1_source_payload_control = litepciedma1_writer_table_syncfifo1_fifo_out_payload_control;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_re = litepciedma1_writer_table_syncfifo1_source_ready;
always @(*) begin
	litepciedma1_writer_table_syncfifo1_wrport_adr <= 8'd0;
	if (litepciedma1_writer_table_syncfifo1_replace) begin
		litepciedma1_writer_table_syncfifo1_wrport_adr <= (litepciedma1_writer_table_syncfifo1_produce - 1'd1);
	end else begin
		litepciedma1_writer_table_syncfifo1_wrport_adr <= litepciedma1_writer_table_syncfifo1_produce;
	end
end
assign litepciedma1_writer_table_syncfifo1_wrport_dat_w = litepciedma1_writer_table_syncfifo1_syncfifo1_din;
assign litepciedma1_writer_table_syncfifo1_wrport_we = (litepciedma1_writer_table_syncfifo1_syncfifo1_we & (litepciedma1_writer_table_syncfifo1_syncfifo1_writable | litepciedma1_writer_table_syncfifo1_replace));
assign litepciedma1_writer_table_syncfifo1_do_read = (litepciedma1_writer_table_syncfifo1_syncfifo1_readable & litepciedma1_writer_table_syncfifo1_syncfifo1_re);
assign litepciedma1_writer_table_syncfifo1_rdport_adr = litepciedma1_writer_table_syncfifo1_consume;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_dout = litepciedma1_writer_table_syncfifo1_rdport_dat_r;
assign litepciedma1_writer_table_syncfifo1_syncfifo1_writable = (litepciedma1_writer_table_syncfifo1_level != 9'd256);
assign litepciedma1_writer_table_syncfifo1_syncfifo1_readable = (litepciedma1_writer_table_syncfifo1_level != 1'd0);
assign litepciedma1_writer_splitter_user_id_ce = (litepciedma1_writer_splitter_sink_valid & litepciedma1_writer_splitter_sink_ready);
assign litepciedma1_writer_splitter_source_payload_address = (litepciedma1_writer_splitter_sink_payload_address + litepciedma1_writer_splitter_offset);
assign litepciedma1_writer_splitter_source_payload_control = litepciedma1_writer_splitter_sink_payload_control;
assign litepciedma1_writer_splitter_source_payload_user_id = litepciedma1_writer_splitter_user_id;
assign litepciedma1_writer_bufferizeendpoints1_sink_valid = litepciedma1_writer_splitter_source_valid;
assign litepciedma1_writer_splitter_source_ready = litepciedma1_writer_bufferizeendpoints1_sink_ready;
assign litepciedma1_writer_bufferizeendpoints1_sink_first = litepciedma1_writer_splitter_source_first;
assign litepciedma1_writer_bufferizeendpoints1_sink_last = litepciedma1_writer_splitter_source_last;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_address = litepciedma1_writer_splitter_source_payload_address;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_length = litepciedma1_writer_splitter_source_payload_length;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_control = litepciedma1_writer_splitter_source_payload_control;
assign litepciedma1_writer_bufferizeendpoints1_sink_payload_user_id = litepciedma1_writer_splitter_source_payload_user_id;
always @(*) begin
	litepciedma1_writer_splitter_sink_ready <= 1'd0;
	litepciedma1_writer_splitter_offset_reset <= 1'd0;
	litepciedma1_writer_splitter_offset_ce <= 1'd0;
	litepciedma1_writer_splitter_source_valid <= 1'd0;
	litepciedma1_writer_splitter_source_first <= 1'd0;
	litepciedma1_writer_splitter_length_update <= 1'd0;
	litepciedma1_writer_splitter_source_last <= 1'd0;
	subfragments_bufferizeendpoints1_next_state0 <= 2'd0;
	litepciedma1_writer_splitter_source_payload_length <= 24'd0;
	subfragments_bufferizeendpoints1_next_state0 <= subfragments_bufferizeendpoints1_state0;
	case (subfragments_bufferizeendpoints1_state0)
		1'd1: begin
			litepciedma1_writer_splitter_source_valid <= 1'd1;
			litepciedma1_writer_splitter_source_first <= (litepciedma1_writer_splitter_offset == 1'd0);
			if (((litepciedma1_writer_splitter_length - litepciedma1_writer_splitter_offset) > pcie_phy_max_payload_size)) begin
				litepciedma1_writer_splitter_source_last <= litepciedma1_writer_splitter_end;
				litepciedma1_writer_splitter_source_payload_length <= pcie_phy_max_payload_size;
				litepciedma1_writer_splitter_offset_ce <= litepciedma1_writer_splitter_source_ready;
				if ((litepciedma1_writer_splitter_source_ready & litepciedma1_writer_splitter_end)) begin
					subfragments_bufferizeendpoints1_next_state0 <= 2'd2;
				end
			end else begin
				litepciedma1_writer_splitter_source_last <= 1'd1;
				litepciedma1_writer_splitter_source_payload_length <= (litepciedma1_writer_splitter_length - litepciedma1_writer_splitter_offset);
				if (litepciedma1_writer_splitter_source_ready) begin
					subfragments_bufferizeendpoints1_next_state0 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma1_writer_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints1_next_state0 <= 1'd0;
		end
		default: begin
			litepciedma1_writer_splitter_offset_reset <= 1'd1;
			if (litepciedma1_writer_splitter_sink_valid) begin
				litepciedma1_writer_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints1_next_state0 <= 1'd1;
			end else begin
				litepciedma1_writer_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_writer_bufferizeendpoints1_pipe_ce = (litepciedma1_writer_bufferizeendpoints1_source_ready | (~litepciedma1_writer_bufferizeendpoints1_valid_n));
assign litepciedma1_writer_bufferizeendpoints1_sink_ready = litepciedma1_writer_bufferizeendpoints1_pipe_ce;
assign litepciedma1_writer_bufferizeendpoints1_source_valid = litepciedma1_writer_bufferizeendpoints1_valid_n;
assign litepciedma1_writer_bufferizeendpoints1_busy = (1'd0 | litepciedma1_writer_bufferizeendpoints1_valid_n);
assign litepciedma1_writer_bufferizeendpoints1_source_first = litepciedma1_writer_bufferizeendpoints1_first_n;
assign litepciedma1_writer_bufferizeendpoints1_source_last = litepciedma1_writer_bufferizeendpoints1_last_n;
always @(*) begin
	litepciedma1_writer_counter_reset <= 1'd0;
	litepciedma1_litepciemasterinternalport2_sink_valid <= 1'd0;
	litepciedma1_writer_counter_ce <= 1'd0;
	litepciedma1_writer_bufferizeendpoints1_source_ready <= 1'd0;
	litepciedma1_writer_fifo_re <= 1'd0;
	subfragments_fsm1_next_state1 <= 1'd0;
	litepciedma1_writer_splitter_end <= 1'd0;
	subfragments_fsm1_next_state1 <= subfragments_fsm1_state1;
	case (subfragments_fsm1_state1)
		1'd1: begin
			litepciedma1_writer_counter_ce <= (litepciedma1_litepciemasterinternalport2_sink_valid & litepciedma1_litepciemasterinternalport2_sink_ready);
			litepciedma1_litepciemasterinternalport2_sink_valid <= 1'd1;
			if (litepciedma1_litepciemasterinternalport2_sink_ready) begin
				litepciedma1_writer_fifo_re <= (~(litepciedma1_writer_fifo_syncfifo1_dout[128] & (~litepciedma1_writer_bufferizeendpoints1_source_payload_control[1])));
				if (litepciedma1_litepciemasterinternalport2_sink_last) begin
					litepciedma1_writer_fifo_re <= 1'd1;
					litepciedma1_writer_splitter_end <= (litepciedma1_writer_fifo_syncfifo1_dout[128] & (~litepciedma1_writer_bufferizeendpoints1_source_payload_control[1]));
					litepciedma1_writer_bufferizeendpoints1_source_ready <= 1'd1;
					subfragments_fsm1_next_state1 <= 1'd0;
				end
			end
		end
		default: begin
			litepciedma1_writer_counter_reset <= 1'd1;
			if (litepciedma1_writer_request_ready) begin
				subfragments_fsm1_next_state1 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_reader_resetinserter_reset0 = (~litepciedma1_reader_enable_storage);
assign litepciedma1_reader_splitter_sink_valid = litepciedma1_reader_table_source_source_valid;
assign litepciedma1_reader_table_source_source_ready = litepciedma1_reader_splitter_sink_ready;
assign litepciedma1_reader_splitter_sink_first = litepciedma1_reader_table_source_source_first;
assign litepciedma1_reader_splitter_sink_last = litepciedma1_reader_table_source_source_last;
assign litepciedma1_reader_splitter_sink_payload_address = litepciedma1_reader_table_source_source_payload_address;
assign litepciedma1_reader_splitter_sink_payload_length = litepciedma1_reader_table_source_source_payload_length;
assign litepciedma1_reader_splitter_sink_payload_control = litepciedma1_reader_table_source_source_payload_control;
assign litepciedma1_reader_requests_per_pckt = (litepciedma1_reader_table_value_storage[63:32] >>> 4'd9);
assign litepciedma1_litepciemasterinternalport3_sink_payload_channel = 2'd3;
assign litepciedma1_litepciemasterinternalport3_sink_payload_user_id = litepciedma1_reader_bufferizeendpoints1_source_payload_user_id;
assign litepciedma1_litepciemasterinternalport3_sink_first = 1'd1;
assign litepciedma1_litepciemasterinternalport3_sink_last = 1'd1;
assign litepciedma1_litepciemasterinternalport3_sink_payload_we = 1'd0;
assign litepciedma1_litepciemasterinternalport3_sink_payload_adr = litepciedma1_reader_bufferizeendpoints1_source_payload_address;
assign litepciedma1_litepciemasterinternalport3_sink_payload_len = litepciedma1_reader_bufferizeendpoints1_source_payload_length[23:2];
assign litepciedma1_litepciemasterinternalport3_sink_payload_req_id = pcie_phy_id;
assign litepciedma1_litepciemasterinternalport3_sink_payload_dat = 1'd0;
assign litepciedma1_reader_resetinserter_reset1 = (~litepciedma1_reader_enable_storage);
assign litepciedma1_reader_fifo_sink_valid = (litepciedma1_litepciemasterinternalport3_source_valid & (~litepciedma1_reader_flush));
assign litepciedma1_reader_fifo_sink_first = (litepciedma1_litepciemasterinternalport3_source_first & (litepciedma1_litepciemasterinternalport3_source_payload_user_id != litepciedma1_reader_last_user_id));
assign litepciedma1_reader_fifo_sink_payload_data = litepciedma1_litepciemasterinternalport3_source_payload_dat;
assign litepciedma1_litepciemasterinternalport3_source_ready = (litepciedma1_reader_fifo_sink_ready | (~litepciedma1_reader_enable_storage));
assign litepciedma1_reader_source_source_valid = litepciedma1_reader_fifo_source_valid;
assign litepciedma1_reader_fifo_source_ready = litepciedma1_reader_source_source_ready;
assign litepciedma1_reader_source_source_first = litepciedma1_reader_fifo_source_first;
assign litepciedma1_reader_source_source_last = litepciedma1_reader_fifo_source_last;
assign litepciedma1_reader_source_source_payload_data = litepciedma1_reader_fifo_source_payload_data;
assign litepciedma1_reader_irq = (((litepciedma1_reader_bufferizeendpoints1_source_valid & litepciedma1_reader_bufferizeendpoints1_source_ready) & litepciedma1_reader_bufferizeendpoints1_source_last) & (~litepciedma1_reader_bufferizeendpoints1_source_payload_control[0]));
assign litepciedma1_reader_table_reset = (litepciedma1_reader_table_flush_r & litepciedma1_reader_table_flush_re);
assign litepciedma1_reader_table_level_status = litepciedma1_reader_table_syncfifo1_level;
assign litepciedma1_reader_table_source_source_valid = litepciedma1_reader_table_syncfifo1_source_valid;
assign litepciedma1_reader_table_source_source_first = litepciedma1_reader_table_syncfifo1_source_first;
assign litepciedma1_reader_table_syncfifo1_source_ready = (litepciedma1_reader_table_source_source_valid & litepciedma1_reader_table_source_source_ready);
assign litepciedma1_reader_table_source_source_payload_address = litepciedma1_reader_table_syncfifo1_source_payload_address;
assign litepciedma1_reader_table_source_source_payload_length = litepciedma1_reader_table_syncfifo1_source_payload_length;
assign litepciedma1_reader_table_source_source_payload_control = litepciedma1_reader_table_syncfifo1_source_payload_control;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_din = {litepciedma1_reader_table_syncfifo1_fifo_in_last, litepciedma1_reader_table_syncfifo1_fifo_in_first, litepciedma1_reader_table_syncfifo1_fifo_in_payload_control, litepciedma1_reader_table_syncfifo1_fifo_in_payload_length, litepciedma1_reader_table_syncfifo1_fifo_in_payload_address};
assign {litepciedma1_reader_table_syncfifo1_fifo_out_last, litepciedma1_reader_table_syncfifo1_fifo_out_first, litepciedma1_reader_table_syncfifo1_fifo_out_payload_control, litepciedma1_reader_table_syncfifo1_fifo_out_payload_length, litepciedma1_reader_table_syncfifo1_fifo_out_payload_address} = litepciedma1_reader_table_syncfifo1_syncfifo1_dout;
assign litepciedma1_reader_table_syncfifo1_sink_ready = litepciedma1_reader_table_syncfifo1_syncfifo1_writable;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_we = litepciedma1_reader_table_syncfifo1_sink_valid;
assign litepciedma1_reader_table_syncfifo1_fifo_in_first = litepciedma1_reader_table_syncfifo1_sink_first;
assign litepciedma1_reader_table_syncfifo1_fifo_in_last = litepciedma1_reader_table_syncfifo1_sink_last;
assign litepciedma1_reader_table_syncfifo1_fifo_in_payload_address = litepciedma1_reader_table_syncfifo1_sink_payload_address;
assign litepciedma1_reader_table_syncfifo1_fifo_in_payload_length = litepciedma1_reader_table_syncfifo1_sink_payload_length;
assign litepciedma1_reader_table_syncfifo1_fifo_in_payload_control = litepciedma1_reader_table_syncfifo1_sink_payload_control;
assign litepciedma1_reader_table_syncfifo1_source_valid = litepciedma1_reader_table_syncfifo1_syncfifo1_readable;
assign litepciedma1_reader_table_syncfifo1_source_first = litepciedma1_reader_table_syncfifo1_fifo_out_first;
assign litepciedma1_reader_table_syncfifo1_source_last = litepciedma1_reader_table_syncfifo1_fifo_out_last;
assign litepciedma1_reader_table_syncfifo1_source_payload_address = litepciedma1_reader_table_syncfifo1_fifo_out_payload_address;
assign litepciedma1_reader_table_syncfifo1_source_payload_length = litepciedma1_reader_table_syncfifo1_fifo_out_payload_length;
assign litepciedma1_reader_table_syncfifo1_source_payload_control = litepciedma1_reader_table_syncfifo1_fifo_out_payload_control;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_re = litepciedma1_reader_table_syncfifo1_source_ready;
always @(*) begin
	litepciedma1_reader_table_syncfifo1_wrport_adr <= 8'd0;
	if (litepciedma1_reader_table_syncfifo1_replace) begin
		litepciedma1_reader_table_syncfifo1_wrport_adr <= (litepciedma1_reader_table_syncfifo1_produce - 1'd1);
	end else begin
		litepciedma1_reader_table_syncfifo1_wrport_adr <= litepciedma1_reader_table_syncfifo1_produce;
	end
end
assign litepciedma1_reader_table_syncfifo1_wrport_dat_w = litepciedma1_reader_table_syncfifo1_syncfifo1_din;
assign litepciedma1_reader_table_syncfifo1_wrport_we = (litepciedma1_reader_table_syncfifo1_syncfifo1_we & (litepciedma1_reader_table_syncfifo1_syncfifo1_writable | litepciedma1_reader_table_syncfifo1_replace));
assign litepciedma1_reader_table_syncfifo1_do_read = (litepciedma1_reader_table_syncfifo1_syncfifo1_readable & litepciedma1_reader_table_syncfifo1_syncfifo1_re);
assign litepciedma1_reader_table_syncfifo1_rdport_adr = litepciedma1_reader_table_syncfifo1_consume;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_dout = litepciedma1_reader_table_syncfifo1_rdport_dat_r;
assign litepciedma1_reader_table_syncfifo1_syncfifo1_writable = (litepciedma1_reader_table_syncfifo1_level != 9'd256);
assign litepciedma1_reader_table_syncfifo1_syncfifo1_readable = (litepciedma1_reader_table_syncfifo1_level != 1'd0);
assign litepciedma1_reader_splitter_user_id_ce = (litepciedma1_reader_splitter_sink_valid & litepciedma1_reader_splitter_sink_ready);
assign litepciedma1_reader_splitter_source_payload_address = (litepciedma1_reader_splitter_sink_payload_address + litepciedma1_reader_splitter_offset);
assign litepciedma1_reader_splitter_source_payload_control = litepciedma1_reader_splitter_sink_payload_control;
assign litepciedma1_reader_splitter_source_payload_user_id = litepciedma1_reader_splitter_user_id;
assign litepciedma1_reader_bufferizeendpoints1_sink_valid = litepciedma1_reader_splitter_source_valid;
assign litepciedma1_reader_splitter_source_ready = litepciedma1_reader_bufferizeendpoints1_sink_ready;
assign litepciedma1_reader_bufferizeendpoints1_sink_first = litepciedma1_reader_splitter_source_first;
assign litepciedma1_reader_bufferizeendpoints1_sink_last = litepciedma1_reader_splitter_source_last;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_address = litepciedma1_reader_splitter_source_payload_address;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_length = litepciedma1_reader_splitter_source_payload_length;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_control = litepciedma1_reader_splitter_source_payload_control;
assign litepciedma1_reader_bufferizeendpoints1_sink_payload_user_id = litepciedma1_reader_splitter_source_payload_user_id;
always @(*) begin
	litepciedma1_reader_splitter_sink_ready <= 1'd0;
	litepciedma1_reader_splitter_offset_reset <= 1'd0;
	litepciedma1_reader_splitter_offset_ce <= 1'd0;
	litepciedma1_reader_splitter_source_payload_length <= 24'd0;
	litepciedma1_reader_splitter_source_valid <= 1'd0;
	litepciedma1_reader_splitter_source_first <= 1'd0;
	litepciedma1_reader_splitter_length_update <= 1'd0;
	litepciedma1_reader_splitter_source_last <= 1'd0;
	subfragments_bufferizeendpoints1_next_state1 <= 2'd0;
	subfragments_bufferizeendpoints1_next_state1 <= subfragments_bufferizeendpoints1_state1;
	case (subfragments_bufferizeendpoints1_state1)
		1'd1: begin
			litepciedma1_reader_splitter_source_valid <= 1'd1;
			litepciedma1_reader_splitter_source_first <= (litepciedma1_reader_splitter_offset == 1'd0);
			if (((litepciedma1_reader_splitter_length - litepciedma1_reader_splitter_offset) > 10'd512)) begin
				litepciedma1_reader_splitter_source_last <= litepciedma1_reader_splitter_end;
				litepciedma1_reader_splitter_source_payload_length <= 10'd512;
				litepciedma1_reader_splitter_offset_ce <= litepciedma1_reader_splitter_source_ready;
				if ((litepciedma1_reader_splitter_source_ready & litepciedma1_reader_splitter_end)) begin
					subfragments_bufferizeendpoints1_next_state1 <= 2'd2;
				end
			end else begin
				litepciedma1_reader_splitter_source_last <= 1'd1;
				litepciedma1_reader_splitter_source_payload_length <= (litepciedma1_reader_splitter_length - litepciedma1_reader_splitter_offset);
				if (litepciedma1_reader_splitter_source_ready) begin
					subfragments_bufferizeendpoints1_next_state1 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma1_reader_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints1_next_state1 <= 1'd0;
		end
		default: begin
			litepciedma1_reader_splitter_offset_reset <= 1'd1;
			if (litepciedma1_reader_splitter_sink_valid) begin
				litepciedma1_reader_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints1_next_state1 <= 1'd1;
			end else begin
				litepciedma1_reader_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_reader_bufferizeendpoints1_pipe_ce = (litepciedma1_reader_bufferizeendpoints1_source_ready | (~litepciedma1_reader_bufferizeendpoints1_valid_n));
assign litepciedma1_reader_bufferizeendpoints1_sink_ready = litepciedma1_reader_bufferizeendpoints1_pipe_ce;
assign litepciedma1_reader_bufferizeendpoints1_source_valid = litepciedma1_reader_bufferizeendpoints1_valid_n;
assign litepciedma1_reader_bufferizeendpoints1_busy = (1'd0 | litepciedma1_reader_bufferizeendpoints1_valid_n);
assign litepciedma1_reader_bufferizeendpoints1_source_first = litepciedma1_reader_bufferizeendpoints1_first_n;
assign litepciedma1_reader_bufferizeendpoints1_source_last = litepciedma1_reader_bufferizeendpoints1_last_n;
always @(*) begin
	subfragments_fsm1_next_state2 <= 1'd0;
	litepciedma1_reader_request_cnt_litepciedma1_next_value0 <= 8'd0;
	litepciedma1_reader_request_cnt_litepciedma1_next_value_ce0 <= 1'd0;
	litepciedma1_reader_request_counted_litepciedma1_next_value1 <= 1'd0;
	litepciedma1_reader_request_counted_litepciedma1_next_value_ce1 <= 1'd0;
	litepciedma1_litepciemasterinternalport3_sink_valid <= 1'd0;
	litepciedma1_reader_bufferizeendpoints1_source_ready <= 1'd0;
	subfragments_fsm1_next_state2 <= subfragments_fsm1_state2;
	case (subfragments_fsm1_state2)
		1'd1: begin
			litepciedma1_litepciemasterinternalport3_sink_valid <= 1'd1;
			if (litepciedma1_litepciemasterinternalport3_sink_ready) begin
				litepciedma1_reader_request_cnt_litepciedma1_next_value0 <= (litepciedma1_reader_request_cnt + 1'd1);
				litepciedma1_reader_request_cnt_litepciedma1_next_value_ce0 <= 1'd1;
				litepciedma1_reader_request_counted_litepciedma1_next_value1 <= 1'd1;
				litepciedma1_reader_request_counted_litepciedma1_next_value_ce1 <= 1'd1;
				if ((litepciedma1_reader_request_cnt == litepciedma1_reader_requests_per_pckt)) begin
					litepciedma1_reader_request_cnt_litepciedma1_next_value0 <= 1'd1;
					litepciedma1_reader_request_cnt_litepciedma1_next_value_ce0 <= 1'd1;
				end
				litepciedma1_reader_bufferizeendpoints1_source_ready <= 1'd1;
				subfragments_fsm1_next_state2 <= 1'd0;
			end
		end
		default: begin
			if (litepciedma1_reader_request_ready) begin
				subfragments_fsm1_next_state2 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma1_reader_fifo_syncfifo1_din = {litepciedma1_reader_fifo_fifo_in_last, litepciedma1_reader_fifo_fifo_in_first, litepciedma1_reader_fifo_fifo_in_payload_data};
assign {litepciedma1_reader_fifo_fifo_out_last, litepciedma1_reader_fifo_fifo_out_first, litepciedma1_reader_fifo_fifo_out_payload_data} = litepciedma1_reader_fifo_syncfifo1_dout;
assign litepciedma1_reader_fifo_sink_ready = litepciedma1_reader_fifo_syncfifo1_writable;
assign litepciedma1_reader_fifo_syncfifo1_we = litepciedma1_reader_fifo_sink_valid;
assign litepciedma1_reader_fifo_fifo_in_first = litepciedma1_reader_fifo_sink_first;
assign litepciedma1_reader_fifo_fifo_in_last = litepciedma1_reader_fifo_sink_last;
assign litepciedma1_reader_fifo_fifo_in_payload_data = litepciedma1_reader_fifo_sink_payload_data;
assign litepciedma1_reader_fifo_source_valid = litepciedma1_reader_fifo_readable;
assign litepciedma1_reader_fifo_source_first = litepciedma1_reader_fifo_fifo_out_first;
assign litepciedma1_reader_fifo_source_last = litepciedma1_reader_fifo_fifo_out_last;
assign litepciedma1_reader_fifo_source_payload_data = litepciedma1_reader_fifo_fifo_out_payload_data;
assign litepciedma1_reader_fifo_re = litepciedma1_reader_fifo_source_ready;
assign litepciedma1_reader_fifo_syncfifo1_re = (litepciedma1_reader_fifo_syncfifo1_readable & ((~litepciedma1_reader_fifo_readable) | litepciedma1_reader_fifo_re));
assign litepciedma1_reader_fifo_level1 = (litepciedma1_reader_fifo_level0 + litepciedma1_reader_fifo_readable);
always @(*) begin
	litepciedma1_reader_fifo_wrport_adr <= 8'd0;
	if (litepciedma1_reader_fifo_replace) begin
		litepciedma1_reader_fifo_wrport_adr <= (litepciedma1_reader_fifo_produce - 1'd1);
	end else begin
		litepciedma1_reader_fifo_wrport_adr <= litepciedma1_reader_fifo_produce;
	end
end
assign litepciedma1_reader_fifo_wrport_dat_w = litepciedma1_reader_fifo_syncfifo1_din;
assign litepciedma1_reader_fifo_wrport_we = (litepciedma1_reader_fifo_syncfifo1_we & (litepciedma1_reader_fifo_syncfifo1_writable | litepciedma1_reader_fifo_replace));
assign litepciedma1_reader_fifo_do_read = (litepciedma1_reader_fifo_syncfifo1_readable & litepciedma1_reader_fifo_syncfifo1_re);
assign litepciedma1_reader_fifo_rdport_adr = litepciedma1_reader_fifo_consume;
assign litepciedma1_reader_fifo_syncfifo1_dout = litepciedma1_reader_fifo_rdport_dat_r;
assign litepciedma1_reader_fifo_rdport_re = litepciedma1_reader_fifo_do_read;
assign litepciedma1_reader_fifo_syncfifo1_writable = (litepciedma1_reader_fifo_level0 != 9'd256);
assign litepciedma1_reader_fifo_syncfifo1_readable = (litepciedma1_reader_fifo_level0 != 1'd0);
assign litepciedma1_reader_fifo_level_status = litepciedma1_syncfifo2_level1;
assign litepciedma1_writer_fifo_level_status = litepciedma1_syncfifo3_level1;
assign litepciedma1_next_source_source_valid = (litepciedma1_syncfifo2_source_valid & litepciedma1_next_source_source_ready);
assign litepciedma1_next_source_source_payload_data = litepciedma1_syncfifo2_source_payload_data;
assign litepciedma1_next_source_source_last = litepciedma1_syncfifo2_source_last;
assign litepciedma1_syncfifo2_source_ready = litepciedma1_next_source_source_ready;
assign litepciedma1_syncfifo2_syncfifo2_din = {litepciedma1_syncfifo2_fifo_in_last, litepciedma1_syncfifo2_fifo_in_first, litepciedma1_syncfifo2_fifo_in_payload_data};
assign {litepciedma1_syncfifo2_fifo_out_last, litepciedma1_syncfifo2_fifo_out_first, litepciedma1_syncfifo2_fifo_out_payload_data} = litepciedma1_syncfifo2_syncfifo2_dout;
assign litepciedma1_syncfifo2_sink_ready = litepciedma1_syncfifo2_syncfifo2_writable;
assign litepciedma1_syncfifo2_syncfifo2_we = litepciedma1_syncfifo2_sink_valid;
assign litepciedma1_syncfifo2_fifo_in_first = litepciedma1_syncfifo2_sink_first;
assign litepciedma1_syncfifo2_fifo_in_last = litepciedma1_syncfifo2_sink_last;
assign litepciedma1_syncfifo2_fifo_in_payload_data = litepciedma1_syncfifo2_sink_payload_data;
assign litepciedma1_syncfifo2_source_valid = litepciedma1_syncfifo2_readable;
assign litepciedma1_syncfifo2_source_first = litepciedma1_syncfifo2_fifo_out_first;
assign litepciedma1_syncfifo2_source_last = litepciedma1_syncfifo2_fifo_out_last;
assign litepciedma1_syncfifo2_source_payload_data = litepciedma1_syncfifo2_fifo_out_payload_data;
assign litepciedma1_syncfifo2_re = litepciedma1_syncfifo2_source_ready;
assign litepciedma1_syncfifo2_syncfifo2_re = (litepciedma1_syncfifo2_syncfifo2_readable & ((~litepciedma1_syncfifo2_readable) | litepciedma1_syncfifo2_re));
assign litepciedma1_syncfifo2_level1 = (litepciedma1_syncfifo2_level0 + litepciedma1_syncfifo2_readable);
always @(*) begin
	litepciedma1_syncfifo2_wrport_adr <= 10'd0;
	if (litepciedma1_syncfifo2_replace) begin
		litepciedma1_syncfifo2_wrport_adr <= (litepciedma1_syncfifo2_produce - 1'd1);
	end else begin
		litepciedma1_syncfifo2_wrport_adr <= litepciedma1_syncfifo2_produce;
	end
end
assign litepciedma1_syncfifo2_wrport_dat_w = litepciedma1_syncfifo2_syncfifo2_din;
assign litepciedma1_syncfifo2_wrport_we = (litepciedma1_syncfifo2_syncfifo2_we & (litepciedma1_syncfifo2_syncfifo2_writable | litepciedma1_syncfifo2_replace));
assign litepciedma1_syncfifo2_do_read = (litepciedma1_syncfifo2_syncfifo2_readable & litepciedma1_syncfifo2_syncfifo2_re);
assign litepciedma1_syncfifo2_rdport_adr = litepciedma1_syncfifo2_consume;
assign litepciedma1_syncfifo2_syncfifo2_dout = litepciedma1_syncfifo2_rdport_dat_r;
assign litepciedma1_syncfifo2_rdport_re = litepciedma1_syncfifo2_do_read;
assign litepciedma1_syncfifo2_syncfifo2_writable = (litepciedma1_syncfifo2_level0 != 10'd768);
assign litepciedma1_syncfifo2_syncfifo2_readable = (litepciedma1_syncfifo2_level0 != 1'd0);
assign litepciedma1_syncfifo3_syncfifo3_din = {litepciedma1_syncfifo3_fifo_in_last, litepciedma1_syncfifo3_fifo_in_first, litepciedma1_syncfifo3_fifo_in_payload_data};
assign {litepciedma1_syncfifo3_fifo_out_last, litepciedma1_syncfifo3_fifo_out_first, litepciedma1_syncfifo3_fifo_out_payload_data} = litepciedma1_syncfifo3_syncfifo3_dout;
assign litepciedma1_syncfifo3_sink_ready = litepciedma1_syncfifo3_syncfifo3_writable;
assign litepciedma1_syncfifo3_syncfifo3_we = litepciedma1_syncfifo3_sink_valid;
assign litepciedma1_syncfifo3_fifo_in_first = litepciedma1_syncfifo3_sink_first;
assign litepciedma1_syncfifo3_fifo_in_last = litepciedma1_syncfifo3_sink_last;
assign litepciedma1_syncfifo3_fifo_in_payload_data = litepciedma1_syncfifo3_sink_payload_data;
assign litepciedma1_syncfifo3_source_valid = litepciedma1_syncfifo3_readable;
assign litepciedma1_syncfifo3_source_first = litepciedma1_syncfifo3_fifo_out_first;
assign litepciedma1_syncfifo3_source_last = litepciedma1_syncfifo3_fifo_out_last;
assign litepciedma1_syncfifo3_source_payload_data = litepciedma1_syncfifo3_fifo_out_payload_data;
assign litepciedma1_syncfifo3_re = litepciedma1_syncfifo3_source_ready;
assign litepciedma1_syncfifo3_syncfifo3_re = (litepciedma1_syncfifo3_syncfifo3_readable & ((~litepciedma1_syncfifo3_readable) | litepciedma1_syncfifo3_re));
assign litepciedma1_syncfifo3_level1 = (litepciedma1_syncfifo3_level0 + litepciedma1_syncfifo3_readable);
always @(*) begin
	litepciedma1_syncfifo3_wrport_adr <= 10'd0;
	if (litepciedma1_syncfifo3_replace) begin
		litepciedma1_syncfifo3_wrport_adr <= (litepciedma1_syncfifo3_produce - 1'd1);
	end else begin
		litepciedma1_syncfifo3_wrport_adr <= litepciedma1_syncfifo3_produce;
	end
end
assign litepciedma1_syncfifo3_wrport_dat_w = litepciedma1_syncfifo3_syncfifo3_din;
assign litepciedma1_syncfifo3_wrport_we = (litepciedma1_syncfifo3_syncfifo3_we & (litepciedma1_syncfifo3_syncfifo3_writable | litepciedma1_syncfifo3_replace));
assign litepciedma1_syncfifo3_do_read = (litepciedma1_syncfifo3_syncfifo3_readable & litepciedma1_syncfifo3_syncfifo3_re);
assign litepciedma1_syncfifo3_rdport_adr = litepciedma1_syncfifo3_consume;
assign litepciedma1_syncfifo3_syncfifo3_dout = litepciedma1_syncfifo3_rdport_dat_r;
assign litepciedma1_syncfifo3_rdport_re = litepciedma1_syncfifo3_do_read;
assign litepciedma1_syncfifo3_syncfifo3_writable = (litepciedma1_syncfifo3_level0 != 10'd768);
assign litepciedma1_syncfifo3_syncfifo3_readable = (litepciedma1_syncfifo3_level0 != 1'd0);
assign litepciedma2_syncfifo4_sink_valid = litepciedma2_reader_source_source_valid;
assign litepciedma2_reader_source_source_ready = litepciedma2_syncfifo4_sink_ready;
assign litepciedma2_syncfifo4_sink_first = litepciedma2_reader_source_source_first;
assign litepciedma2_syncfifo4_sink_last = litepciedma2_reader_source_source_last;
assign litepciedma2_syncfifo4_sink_payload_data = litepciedma2_reader_source_source_payload_data;
assign litepciedma2_writer_sink_sink_valid = litepciedma2_syncfifo5_source_valid;
assign litepciedma2_syncfifo5_source_ready = litepciedma2_writer_sink_sink_ready;
assign litepciedma2_writer_sink_sink_first = litepciedma2_syncfifo5_source_first;
assign litepciedma2_writer_sink_sink_last = litepciedma2_syncfifo5_source_last;
assign litepciedma2_writer_sink_sink_payload_data = litepciedma2_syncfifo5_source_payload_data;
assign litepciedma2_reader_fifo_reset = (~litepciedma2_reader_enable_storage);
assign litepciedma2_writer_fifo_reset = (~litepciedma2_writer_enable_storage);
assign litepciedma2_writer_fifo_syncfifo2_we = (litepciedma2_writer_sink_sink_valid & litepciedma2_writer_enable_storage);
assign litepciedma2_writer_sink_sink_ready = (litepciedma2_writer_fifo_syncfifo2_writable | (~litepciedma2_writer_enable_storage));
assign litepciedma2_writer_fifo_syncfifo2_din = {litepciedma2_writer_sink_sink_last, litepciedma2_writer_sink_sink_payload_data};
assign litepciedma2_writer_resetinserter_reset0 = (~litepciedma2_writer_enable_storage);
assign litepciedma2_writer_resetinserter_reset1 = (~litepciedma2_writer_enable_storage);
assign litepciedma2_writer_splitter_sink_valid = litepciedma2_writer_table_source_source_valid;
assign litepciedma2_writer_table_source_source_ready = litepciedma2_writer_splitter_sink_ready;
assign litepciedma2_writer_splitter_sink_first = litepciedma2_writer_table_source_source_first;
assign litepciedma2_writer_splitter_sink_last = litepciedma2_writer_table_source_source_last;
assign litepciedma2_writer_splitter_sink_payload_address = litepciedma2_writer_table_source_source_payload_address;
assign litepciedma2_writer_splitter_sink_payload_length = litepciedma2_writer_table_source_source_payload_length;
assign litepciedma2_writer_splitter_sink_payload_control = litepciedma2_writer_table_source_source_payload_control;
assign litepciedma2_litepciemasterinternalport4_sink_payload_channel = 3'd4;
assign litepciedma2_litepciemasterinternalport4_sink_payload_user_id = litepciedma2_writer_bufferizeendpoints2_source_payload_user_id;
assign litepciedma2_litepciemasterinternalport4_sink_first = (litepciedma2_writer_counter == 1'd0);
assign litepciedma2_litepciemasterinternalport4_sink_last = ((~litepciedma2_writer_enable_storage) | (litepciedma2_writer_counter == (litepciedma2_writer_bufferizeendpoints2_source_payload_length[23:4] - 1'd1)));
assign litepciedma2_litepciemasterinternalport4_sink_payload_we = 1'd1;
assign litepciedma2_litepciemasterinternalport4_sink_payload_adr = litepciedma2_writer_bufferizeendpoints2_source_payload_address;
assign litepciedma2_litepciemasterinternalport4_sink_payload_req_id = pcie_phy_id;
assign litepciedma2_litepciemasterinternalport4_sink_payload_tag = 1'd0;
assign litepciedma2_litepciemasterinternalport4_sink_payload_len = litepciedma2_writer_bufferizeendpoints2_source_payload_length[23:2];
assign litepciedma2_litepciemasterinternalport4_sink_payload_dat = litepciedma2_writer_fifo_syncfifo2_dout[127:0];
assign litepciedma2_writer_irq = (((litepciedma2_writer_bufferizeendpoints2_source_valid & litepciedma2_writer_bufferizeendpoints2_source_ready) & litepciedma2_writer_bufferizeendpoints2_source_last) & (~litepciedma2_writer_bufferizeendpoints2_source_payload_control[0]));
assign litepciedma2_writer_fifo_syncfifo2_re = (litepciedma2_writer_fifo_syncfifo2_readable & ((~litepciedma2_writer_fifo_readable) | litepciedma2_writer_fifo_re));
assign litepciedma2_writer_fifo_level1 = (litepciedma2_writer_fifo_level0 + litepciedma2_writer_fifo_readable);
always @(*) begin
	litepciedma2_writer_fifo_wrport_adr <= 7'd0;
	if (litepciedma2_writer_fifo_replace) begin
		litepciedma2_writer_fifo_wrport_adr <= (litepciedma2_writer_fifo_produce - 1'd1);
	end else begin
		litepciedma2_writer_fifo_wrport_adr <= litepciedma2_writer_fifo_produce;
	end
end
assign litepciedma2_writer_fifo_wrport_dat_w = litepciedma2_writer_fifo_syncfifo2_din;
assign litepciedma2_writer_fifo_wrport_we = (litepciedma2_writer_fifo_syncfifo2_we & (litepciedma2_writer_fifo_syncfifo2_writable | litepciedma2_writer_fifo_replace));
assign litepciedma2_writer_fifo_do_read = (litepciedma2_writer_fifo_syncfifo2_readable & litepciedma2_writer_fifo_syncfifo2_re);
assign litepciedma2_writer_fifo_rdport_adr = litepciedma2_writer_fifo_consume;
assign litepciedma2_writer_fifo_syncfifo2_dout = litepciedma2_writer_fifo_rdport_dat_r;
assign litepciedma2_writer_fifo_rdport_re = litepciedma2_writer_fifo_do_read;
assign litepciedma2_writer_fifo_syncfifo2_writable = (litepciedma2_writer_fifo_level0 != 8'd128);
assign litepciedma2_writer_fifo_syncfifo2_readable = (litepciedma2_writer_fifo_level0 != 1'd0);
assign litepciedma2_writer_table_reset = (litepciedma2_writer_table_flush_r & litepciedma2_writer_table_flush_re);
assign litepciedma2_writer_table_level_status = litepciedma2_writer_table_syncfifo2_level;
assign litepciedma2_writer_table_source_source_valid = litepciedma2_writer_table_syncfifo2_source_valid;
assign litepciedma2_writer_table_source_source_first = litepciedma2_writer_table_syncfifo2_source_first;
assign litepciedma2_writer_table_syncfifo2_source_ready = (litepciedma2_writer_table_source_source_valid & litepciedma2_writer_table_source_source_ready);
assign litepciedma2_writer_table_source_source_payload_address = litepciedma2_writer_table_syncfifo2_source_payload_address;
assign litepciedma2_writer_table_source_source_payload_length = litepciedma2_writer_table_syncfifo2_source_payload_length;
assign litepciedma2_writer_table_source_source_payload_control = litepciedma2_writer_table_syncfifo2_source_payload_control;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_din = {litepciedma2_writer_table_syncfifo2_fifo_in_last, litepciedma2_writer_table_syncfifo2_fifo_in_first, litepciedma2_writer_table_syncfifo2_fifo_in_payload_control, litepciedma2_writer_table_syncfifo2_fifo_in_payload_length, litepciedma2_writer_table_syncfifo2_fifo_in_payload_address};
assign {litepciedma2_writer_table_syncfifo2_fifo_out_last, litepciedma2_writer_table_syncfifo2_fifo_out_first, litepciedma2_writer_table_syncfifo2_fifo_out_payload_control, litepciedma2_writer_table_syncfifo2_fifo_out_payload_length, litepciedma2_writer_table_syncfifo2_fifo_out_payload_address} = litepciedma2_writer_table_syncfifo2_syncfifo2_dout;
assign litepciedma2_writer_table_syncfifo2_sink_ready = litepciedma2_writer_table_syncfifo2_syncfifo2_writable;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_we = litepciedma2_writer_table_syncfifo2_sink_valid;
assign litepciedma2_writer_table_syncfifo2_fifo_in_first = litepciedma2_writer_table_syncfifo2_sink_first;
assign litepciedma2_writer_table_syncfifo2_fifo_in_last = litepciedma2_writer_table_syncfifo2_sink_last;
assign litepciedma2_writer_table_syncfifo2_fifo_in_payload_address = litepciedma2_writer_table_syncfifo2_sink_payload_address;
assign litepciedma2_writer_table_syncfifo2_fifo_in_payload_length = litepciedma2_writer_table_syncfifo2_sink_payload_length;
assign litepciedma2_writer_table_syncfifo2_fifo_in_payload_control = litepciedma2_writer_table_syncfifo2_sink_payload_control;
assign litepciedma2_writer_table_syncfifo2_source_valid = litepciedma2_writer_table_syncfifo2_syncfifo2_readable;
assign litepciedma2_writer_table_syncfifo2_source_first = litepciedma2_writer_table_syncfifo2_fifo_out_first;
assign litepciedma2_writer_table_syncfifo2_source_last = litepciedma2_writer_table_syncfifo2_fifo_out_last;
assign litepciedma2_writer_table_syncfifo2_source_payload_address = litepciedma2_writer_table_syncfifo2_fifo_out_payload_address;
assign litepciedma2_writer_table_syncfifo2_source_payload_length = litepciedma2_writer_table_syncfifo2_fifo_out_payload_length;
assign litepciedma2_writer_table_syncfifo2_source_payload_control = litepciedma2_writer_table_syncfifo2_fifo_out_payload_control;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_re = litepciedma2_writer_table_syncfifo2_source_ready;
always @(*) begin
	litepciedma2_writer_table_syncfifo2_wrport_adr <= 8'd0;
	if (litepciedma2_writer_table_syncfifo2_replace) begin
		litepciedma2_writer_table_syncfifo2_wrport_adr <= (litepciedma2_writer_table_syncfifo2_produce - 1'd1);
	end else begin
		litepciedma2_writer_table_syncfifo2_wrport_adr <= litepciedma2_writer_table_syncfifo2_produce;
	end
end
assign litepciedma2_writer_table_syncfifo2_wrport_dat_w = litepciedma2_writer_table_syncfifo2_syncfifo2_din;
assign litepciedma2_writer_table_syncfifo2_wrport_we = (litepciedma2_writer_table_syncfifo2_syncfifo2_we & (litepciedma2_writer_table_syncfifo2_syncfifo2_writable | litepciedma2_writer_table_syncfifo2_replace));
assign litepciedma2_writer_table_syncfifo2_do_read = (litepciedma2_writer_table_syncfifo2_syncfifo2_readable & litepciedma2_writer_table_syncfifo2_syncfifo2_re);
assign litepciedma2_writer_table_syncfifo2_rdport_adr = litepciedma2_writer_table_syncfifo2_consume;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_dout = litepciedma2_writer_table_syncfifo2_rdport_dat_r;
assign litepciedma2_writer_table_syncfifo2_syncfifo2_writable = (litepciedma2_writer_table_syncfifo2_level != 9'd256);
assign litepciedma2_writer_table_syncfifo2_syncfifo2_readable = (litepciedma2_writer_table_syncfifo2_level != 1'd0);
assign litepciedma2_writer_splitter_user_id_ce = (litepciedma2_writer_splitter_sink_valid & litepciedma2_writer_splitter_sink_ready);
assign litepciedma2_writer_splitter_source_payload_address = (litepciedma2_writer_splitter_sink_payload_address + litepciedma2_writer_splitter_offset);
assign litepciedma2_writer_splitter_source_payload_control = litepciedma2_writer_splitter_sink_payload_control;
assign litepciedma2_writer_splitter_source_payload_user_id = litepciedma2_writer_splitter_user_id;
assign litepciedma2_writer_bufferizeendpoints2_sink_valid = litepciedma2_writer_splitter_source_valid;
assign litepciedma2_writer_splitter_source_ready = litepciedma2_writer_bufferizeendpoints2_sink_ready;
assign litepciedma2_writer_bufferizeendpoints2_sink_first = litepciedma2_writer_splitter_source_first;
assign litepciedma2_writer_bufferizeendpoints2_sink_last = litepciedma2_writer_splitter_source_last;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_address = litepciedma2_writer_splitter_source_payload_address;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_length = litepciedma2_writer_splitter_source_payload_length;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_control = litepciedma2_writer_splitter_source_payload_control;
assign litepciedma2_writer_bufferizeendpoints2_sink_payload_user_id = litepciedma2_writer_splitter_source_payload_user_id;
always @(*) begin
	litepciedma2_writer_splitter_source_payload_length <= 24'd0;
	subfragments_bufferizeendpoints2_next_state0 <= 2'd0;
	litepciedma2_writer_splitter_sink_ready <= 1'd0;
	litepciedma2_writer_splitter_offset_reset <= 1'd0;
	litepciedma2_writer_splitter_offset_ce <= 1'd0;
	litepciedma2_writer_splitter_source_valid <= 1'd0;
	litepciedma2_writer_splitter_source_first <= 1'd0;
	litepciedma2_writer_splitter_length_update <= 1'd0;
	litepciedma2_writer_splitter_source_last <= 1'd0;
	subfragments_bufferizeendpoints2_next_state0 <= subfragments_bufferizeendpoints2_state0;
	case (subfragments_bufferizeendpoints2_state0)
		1'd1: begin
			litepciedma2_writer_splitter_source_valid <= 1'd1;
			litepciedma2_writer_splitter_source_first <= (litepciedma2_writer_splitter_offset == 1'd0);
			if (((litepciedma2_writer_splitter_length - litepciedma2_writer_splitter_offset) > pcie_phy_max_payload_size)) begin
				litepciedma2_writer_splitter_source_last <= litepciedma2_writer_splitter_end;
				litepciedma2_writer_splitter_source_payload_length <= pcie_phy_max_payload_size;
				litepciedma2_writer_splitter_offset_ce <= litepciedma2_writer_splitter_source_ready;
				if ((litepciedma2_writer_splitter_source_ready & litepciedma2_writer_splitter_end)) begin
					subfragments_bufferizeendpoints2_next_state0 <= 2'd2;
				end
			end else begin
				litepciedma2_writer_splitter_source_last <= 1'd1;
				litepciedma2_writer_splitter_source_payload_length <= (litepciedma2_writer_splitter_length - litepciedma2_writer_splitter_offset);
				if (litepciedma2_writer_splitter_source_ready) begin
					subfragments_bufferizeendpoints2_next_state0 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma2_writer_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints2_next_state0 <= 1'd0;
		end
		default: begin
			litepciedma2_writer_splitter_offset_reset <= 1'd1;
			if (litepciedma2_writer_splitter_sink_valid) begin
				litepciedma2_writer_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints2_next_state0 <= 1'd1;
			end else begin
				litepciedma2_writer_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_writer_bufferizeendpoints2_pipe_ce = (litepciedma2_writer_bufferizeendpoints2_source_ready | (~litepciedma2_writer_bufferizeendpoints2_valid_n));
assign litepciedma2_writer_bufferizeendpoints2_sink_ready = litepciedma2_writer_bufferizeendpoints2_pipe_ce;
assign litepciedma2_writer_bufferizeendpoints2_source_valid = litepciedma2_writer_bufferizeendpoints2_valid_n;
assign litepciedma2_writer_bufferizeendpoints2_busy = (1'd0 | litepciedma2_writer_bufferizeendpoints2_valid_n);
assign litepciedma2_writer_bufferizeendpoints2_source_first = litepciedma2_writer_bufferizeendpoints2_first_n;
assign litepciedma2_writer_bufferizeendpoints2_source_last = litepciedma2_writer_bufferizeendpoints2_last_n;
always @(*) begin
	litepciedma2_writer_counter_ce <= 1'd0;
	litepciedma2_writer_fifo_re <= 1'd0;
	litepciedma2_litepciemasterinternalport4_sink_valid <= 1'd0;
	litepciedma2_writer_splitter_end <= 1'd0;
	litepciedma2_writer_counter_reset <= 1'd0;
	subfragments_fsm2_next_state0 <= 1'd0;
	litepciedma2_writer_bufferizeendpoints2_source_ready <= 1'd0;
	subfragments_fsm2_next_state0 <= subfragments_fsm2_state0;
	case (subfragments_fsm2_state0)
		1'd1: begin
			litepciedma2_writer_counter_ce <= (litepciedma2_litepciemasterinternalport4_sink_valid & litepciedma2_litepciemasterinternalport4_sink_ready);
			litepciedma2_litepciemasterinternalport4_sink_valid <= 1'd1;
			if (litepciedma2_litepciemasterinternalport4_sink_ready) begin
				litepciedma2_writer_fifo_re <= (~(litepciedma2_writer_fifo_syncfifo2_dout[128] & (~litepciedma2_writer_bufferizeendpoints2_source_payload_control[1])));
				if (litepciedma2_litepciemasterinternalport4_sink_last) begin
					litepciedma2_writer_fifo_re <= 1'd1;
					litepciedma2_writer_splitter_end <= (litepciedma2_writer_fifo_syncfifo2_dout[128] & (~litepciedma2_writer_bufferizeendpoints2_source_payload_control[1]));
					litepciedma2_writer_bufferizeendpoints2_source_ready <= 1'd1;
					subfragments_fsm2_next_state0 <= 1'd0;
				end
			end
		end
		default: begin
			litepciedma2_writer_counter_reset <= 1'd1;
			if (litepciedma2_writer_request_ready) begin
				subfragments_fsm2_next_state0 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_reader_resetinserter_reset0 = (~litepciedma2_reader_enable_storage);
assign litepciedma2_reader_splitter_sink_valid = litepciedma2_reader_table_source_source_valid;
assign litepciedma2_reader_table_source_source_ready = litepciedma2_reader_splitter_sink_ready;
assign litepciedma2_reader_splitter_sink_first = litepciedma2_reader_table_source_source_first;
assign litepciedma2_reader_splitter_sink_last = litepciedma2_reader_table_source_source_last;
assign litepciedma2_reader_splitter_sink_payload_address = litepciedma2_reader_table_source_source_payload_address;
assign litepciedma2_reader_splitter_sink_payload_length = litepciedma2_reader_table_source_source_payload_length;
assign litepciedma2_reader_splitter_sink_payload_control = litepciedma2_reader_table_source_source_payload_control;
assign litepciedma2_reader_requests_per_pckt = (litepciedma2_reader_table_value_storage[63:32] >>> 4'd9);
assign litepciedma2_litepciemasterinternalport5_sink_payload_channel = 3'd5;
assign litepciedma2_litepciemasterinternalport5_sink_payload_user_id = litepciedma2_reader_bufferizeendpoints2_source_payload_user_id;
assign litepciedma2_litepciemasterinternalport5_sink_first = 1'd1;
assign litepciedma2_litepciemasterinternalport5_sink_last = 1'd1;
assign litepciedma2_litepciemasterinternalport5_sink_payload_we = 1'd0;
assign litepciedma2_litepciemasterinternalport5_sink_payload_adr = litepciedma2_reader_bufferizeendpoints2_source_payload_address;
assign litepciedma2_litepciemasterinternalport5_sink_payload_len = litepciedma2_reader_bufferizeendpoints2_source_payload_length[23:2];
assign litepciedma2_litepciemasterinternalport5_sink_payload_req_id = pcie_phy_id;
assign litepciedma2_litepciemasterinternalport5_sink_payload_dat = 1'd0;
assign litepciedma2_reader_resetinserter_reset1 = (~litepciedma2_reader_enable_storage);
assign litepciedma2_reader_fifo_sink_valid = (litepciedma2_litepciemasterinternalport5_source_valid & (~litepciedma2_reader_flush));
assign litepciedma2_reader_fifo_sink_first = (litepciedma2_litepciemasterinternalport5_source_first & (litepciedma2_litepciemasterinternalport5_source_payload_user_id != litepciedma2_reader_last_user_id));
assign litepciedma2_reader_fifo_sink_payload_data = litepciedma2_litepciemasterinternalport5_source_payload_dat;
assign litepciedma2_litepciemasterinternalport5_source_ready = (litepciedma2_reader_fifo_sink_ready | (~litepciedma2_reader_enable_storage));
assign litepciedma2_reader_source_source_valid = litepciedma2_reader_fifo_source_valid;
assign litepciedma2_reader_fifo_source_ready = litepciedma2_reader_source_source_ready;
assign litepciedma2_reader_source_source_first = litepciedma2_reader_fifo_source_first;
assign litepciedma2_reader_source_source_last = litepciedma2_reader_fifo_source_last;
assign litepciedma2_reader_source_source_payload_data = litepciedma2_reader_fifo_source_payload_data;
assign litepciedma2_reader_irq = (((litepciedma2_reader_bufferizeendpoints2_source_valid & litepciedma2_reader_bufferizeendpoints2_source_ready) & litepciedma2_reader_bufferizeendpoints2_source_last) & (~litepciedma2_reader_bufferizeendpoints2_source_payload_control[0]));
assign litepciedma2_reader_table_reset = (litepciedma2_reader_table_flush_r & litepciedma2_reader_table_flush_re);
assign litepciedma2_reader_table_level_status = litepciedma2_reader_table_syncfifo2_level;
assign litepciedma2_reader_table_source_source_valid = litepciedma2_reader_table_syncfifo2_source_valid;
assign litepciedma2_reader_table_source_source_first = litepciedma2_reader_table_syncfifo2_source_first;
assign litepciedma2_reader_table_syncfifo2_source_ready = (litepciedma2_reader_table_source_source_valid & litepciedma2_reader_table_source_source_ready);
assign litepciedma2_reader_table_source_source_payload_address = litepciedma2_reader_table_syncfifo2_source_payload_address;
assign litepciedma2_reader_table_source_source_payload_length = litepciedma2_reader_table_syncfifo2_source_payload_length;
assign litepciedma2_reader_table_source_source_payload_control = litepciedma2_reader_table_syncfifo2_source_payload_control;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_din = {litepciedma2_reader_table_syncfifo2_fifo_in_last, litepciedma2_reader_table_syncfifo2_fifo_in_first, litepciedma2_reader_table_syncfifo2_fifo_in_payload_control, litepciedma2_reader_table_syncfifo2_fifo_in_payload_length, litepciedma2_reader_table_syncfifo2_fifo_in_payload_address};
assign {litepciedma2_reader_table_syncfifo2_fifo_out_last, litepciedma2_reader_table_syncfifo2_fifo_out_first, litepciedma2_reader_table_syncfifo2_fifo_out_payload_control, litepciedma2_reader_table_syncfifo2_fifo_out_payload_length, litepciedma2_reader_table_syncfifo2_fifo_out_payload_address} = litepciedma2_reader_table_syncfifo2_syncfifo2_dout;
assign litepciedma2_reader_table_syncfifo2_sink_ready = litepciedma2_reader_table_syncfifo2_syncfifo2_writable;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_we = litepciedma2_reader_table_syncfifo2_sink_valid;
assign litepciedma2_reader_table_syncfifo2_fifo_in_first = litepciedma2_reader_table_syncfifo2_sink_first;
assign litepciedma2_reader_table_syncfifo2_fifo_in_last = litepciedma2_reader_table_syncfifo2_sink_last;
assign litepciedma2_reader_table_syncfifo2_fifo_in_payload_address = litepciedma2_reader_table_syncfifo2_sink_payload_address;
assign litepciedma2_reader_table_syncfifo2_fifo_in_payload_length = litepciedma2_reader_table_syncfifo2_sink_payload_length;
assign litepciedma2_reader_table_syncfifo2_fifo_in_payload_control = litepciedma2_reader_table_syncfifo2_sink_payload_control;
assign litepciedma2_reader_table_syncfifo2_source_valid = litepciedma2_reader_table_syncfifo2_syncfifo2_readable;
assign litepciedma2_reader_table_syncfifo2_source_first = litepciedma2_reader_table_syncfifo2_fifo_out_first;
assign litepciedma2_reader_table_syncfifo2_source_last = litepciedma2_reader_table_syncfifo2_fifo_out_last;
assign litepciedma2_reader_table_syncfifo2_source_payload_address = litepciedma2_reader_table_syncfifo2_fifo_out_payload_address;
assign litepciedma2_reader_table_syncfifo2_source_payload_length = litepciedma2_reader_table_syncfifo2_fifo_out_payload_length;
assign litepciedma2_reader_table_syncfifo2_source_payload_control = litepciedma2_reader_table_syncfifo2_fifo_out_payload_control;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_re = litepciedma2_reader_table_syncfifo2_source_ready;
always @(*) begin
	litepciedma2_reader_table_syncfifo2_wrport_adr <= 8'd0;
	if (litepciedma2_reader_table_syncfifo2_replace) begin
		litepciedma2_reader_table_syncfifo2_wrport_adr <= (litepciedma2_reader_table_syncfifo2_produce - 1'd1);
	end else begin
		litepciedma2_reader_table_syncfifo2_wrport_adr <= litepciedma2_reader_table_syncfifo2_produce;
	end
end
assign litepciedma2_reader_table_syncfifo2_wrport_dat_w = litepciedma2_reader_table_syncfifo2_syncfifo2_din;
assign litepciedma2_reader_table_syncfifo2_wrport_we = (litepciedma2_reader_table_syncfifo2_syncfifo2_we & (litepciedma2_reader_table_syncfifo2_syncfifo2_writable | litepciedma2_reader_table_syncfifo2_replace));
assign litepciedma2_reader_table_syncfifo2_do_read = (litepciedma2_reader_table_syncfifo2_syncfifo2_readable & litepciedma2_reader_table_syncfifo2_syncfifo2_re);
assign litepciedma2_reader_table_syncfifo2_rdport_adr = litepciedma2_reader_table_syncfifo2_consume;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_dout = litepciedma2_reader_table_syncfifo2_rdport_dat_r;
assign litepciedma2_reader_table_syncfifo2_syncfifo2_writable = (litepciedma2_reader_table_syncfifo2_level != 9'd256);
assign litepciedma2_reader_table_syncfifo2_syncfifo2_readable = (litepciedma2_reader_table_syncfifo2_level != 1'd0);
assign litepciedma2_reader_splitter_user_id_ce = (litepciedma2_reader_splitter_sink_valid & litepciedma2_reader_splitter_sink_ready);
assign litepciedma2_reader_splitter_source_payload_address = (litepciedma2_reader_splitter_sink_payload_address + litepciedma2_reader_splitter_offset);
assign litepciedma2_reader_splitter_source_payload_control = litepciedma2_reader_splitter_sink_payload_control;
assign litepciedma2_reader_splitter_source_payload_user_id = litepciedma2_reader_splitter_user_id;
assign litepciedma2_reader_bufferizeendpoints2_sink_valid = litepciedma2_reader_splitter_source_valid;
assign litepciedma2_reader_splitter_source_ready = litepciedma2_reader_bufferizeendpoints2_sink_ready;
assign litepciedma2_reader_bufferizeendpoints2_sink_first = litepciedma2_reader_splitter_source_first;
assign litepciedma2_reader_bufferizeendpoints2_sink_last = litepciedma2_reader_splitter_source_last;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_address = litepciedma2_reader_splitter_source_payload_address;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_length = litepciedma2_reader_splitter_source_payload_length;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_control = litepciedma2_reader_splitter_source_payload_control;
assign litepciedma2_reader_bufferizeendpoints2_sink_payload_user_id = litepciedma2_reader_splitter_source_payload_user_id;
always @(*) begin
	litepciedma2_reader_splitter_source_first <= 1'd0;
	litepciedma2_reader_splitter_length_update <= 1'd0;
	litepciedma2_reader_splitter_source_last <= 1'd0;
	litepciedma2_reader_splitter_source_payload_length <= 24'd0;
	litepciedma2_reader_splitter_sink_ready <= 1'd0;
	subfragments_bufferizeendpoints2_next_state1 <= 2'd0;
	litepciedma2_reader_splitter_offset_reset <= 1'd0;
	litepciedma2_reader_splitter_offset_ce <= 1'd0;
	litepciedma2_reader_splitter_source_valid <= 1'd0;
	subfragments_bufferizeendpoints2_next_state1 <= subfragments_bufferizeendpoints2_state1;
	case (subfragments_bufferizeendpoints2_state1)
		1'd1: begin
			litepciedma2_reader_splitter_source_valid <= 1'd1;
			litepciedma2_reader_splitter_source_first <= (litepciedma2_reader_splitter_offset == 1'd0);
			if (((litepciedma2_reader_splitter_length - litepciedma2_reader_splitter_offset) > 10'd512)) begin
				litepciedma2_reader_splitter_source_last <= litepciedma2_reader_splitter_end;
				litepciedma2_reader_splitter_source_payload_length <= 10'd512;
				litepciedma2_reader_splitter_offset_ce <= litepciedma2_reader_splitter_source_ready;
				if ((litepciedma2_reader_splitter_source_ready & litepciedma2_reader_splitter_end)) begin
					subfragments_bufferizeendpoints2_next_state1 <= 2'd2;
				end
			end else begin
				litepciedma2_reader_splitter_source_last <= 1'd1;
				litepciedma2_reader_splitter_source_payload_length <= (litepciedma2_reader_splitter_length - litepciedma2_reader_splitter_offset);
				if (litepciedma2_reader_splitter_source_ready) begin
					subfragments_bufferizeendpoints2_next_state1 <= 2'd2;
				end
			end
		end
		2'd2: begin
			litepciedma2_reader_splitter_sink_ready <= 1'd1;
			subfragments_bufferizeendpoints2_next_state1 <= 1'd0;
		end
		default: begin
			litepciedma2_reader_splitter_offset_reset <= 1'd1;
			if (litepciedma2_reader_splitter_sink_valid) begin
				litepciedma2_reader_splitter_length_update <= 1'd1;
				subfragments_bufferizeendpoints2_next_state1 <= 1'd1;
			end else begin
				litepciedma2_reader_splitter_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_reader_bufferizeendpoints2_pipe_ce = (litepciedma2_reader_bufferizeendpoints2_source_ready | (~litepciedma2_reader_bufferizeendpoints2_valid_n));
assign litepciedma2_reader_bufferizeendpoints2_sink_ready = litepciedma2_reader_bufferizeendpoints2_pipe_ce;
assign litepciedma2_reader_bufferizeendpoints2_source_valid = litepciedma2_reader_bufferizeendpoints2_valid_n;
assign litepciedma2_reader_bufferizeendpoints2_busy = (1'd0 | litepciedma2_reader_bufferizeendpoints2_valid_n);
assign litepciedma2_reader_bufferizeendpoints2_source_first = litepciedma2_reader_bufferizeendpoints2_first_n;
assign litepciedma2_reader_bufferizeendpoints2_source_last = litepciedma2_reader_bufferizeendpoints2_last_n;
always @(*) begin
	subfragments_fsm2_next_state1 <= 1'd0;
	litepciedma2_litepciemasterinternalport5_sink_valid <= 1'd0;
	litepciedma2_reader_request_cnt_litepciedma2_next_value0 <= 8'd0;
	litepciedma2_reader_request_cnt_litepciedma2_next_value_ce0 <= 1'd0;
	litepciedma2_reader_bufferizeendpoints2_source_ready <= 1'd0;
	litepciedma2_reader_request_counted_litepciedma2_next_value1 <= 1'd0;
	litepciedma2_reader_request_counted_litepciedma2_next_value_ce1 <= 1'd0;
	subfragments_fsm2_next_state1 <= subfragments_fsm2_state1;
	case (subfragments_fsm2_state1)
		1'd1: begin
			litepciedma2_litepciemasterinternalport5_sink_valid <= 1'd1;
			if (litepciedma2_litepciemasterinternalport5_sink_ready) begin
				litepciedma2_reader_request_cnt_litepciedma2_next_value0 <= (litepciedma2_reader_request_cnt + 1'd1);
				litepciedma2_reader_request_cnt_litepciedma2_next_value_ce0 <= 1'd1;
				litepciedma2_reader_request_counted_litepciedma2_next_value1 <= 1'd1;
				litepciedma2_reader_request_counted_litepciedma2_next_value_ce1 <= 1'd1;
				if ((litepciedma2_reader_request_cnt == litepciedma2_reader_requests_per_pckt)) begin
					litepciedma2_reader_request_cnt_litepciedma2_next_value0 <= 1'd1;
					litepciedma2_reader_request_cnt_litepciedma2_next_value_ce0 <= 1'd1;
				end
				litepciedma2_reader_bufferizeendpoints2_source_ready <= 1'd1;
				subfragments_fsm2_next_state1 <= 1'd0;
			end
		end
		default: begin
			if (litepciedma2_reader_request_ready) begin
				subfragments_fsm2_next_state1 <= 1'd1;
			end
		end
	endcase
end
assign litepciedma2_reader_fifo_syncfifo2_din = {litepciedma2_reader_fifo_fifo_in_last, litepciedma2_reader_fifo_fifo_in_first, litepciedma2_reader_fifo_fifo_in_payload_data};
assign {litepciedma2_reader_fifo_fifo_out_last, litepciedma2_reader_fifo_fifo_out_first, litepciedma2_reader_fifo_fifo_out_payload_data} = litepciedma2_reader_fifo_syncfifo2_dout;
assign litepciedma2_reader_fifo_sink_ready = litepciedma2_reader_fifo_syncfifo2_writable;
assign litepciedma2_reader_fifo_syncfifo2_we = litepciedma2_reader_fifo_sink_valid;
assign litepciedma2_reader_fifo_fifo_in_first = litepciedma2_reader_fifo_sink_first;
assign litepciedma2_reader_fifo_fifo_in_last = litepciedma2_reader_fifo_sink_last;
assign litepciedma2_reader_fifo_fifo_in_payload_data = litepciedma2_reader_fifo_sink_payload_data;
assign litepciedma2_reader_fifo_source_valid = litepciedma2_reader_fifo_readable;
assign litepciedma2_reader_fifo_source_first = litepciedma2_reader_fifo_fifo_out_first;
assign litepciedma2_reader_fifo_source_last = litepciedma2_reader_fifo_fifo_out_last;
assign litepciedma2_reader_fifo_source_payload_data = litepciedma2_reader_fifo_fifo_out_payload_data;
assign litepciedma2_reader_fifo_re = litepciedma2_reader_fifo_source_ready;
assign litepciedma2_reader_fifo_syncfifo2_re = (litepciedma2_reader_fifo_syncfifo2_readable & ((~litepciedma2_reader_fifo_readable) | litepciedma2_reader_fifo_re));
assign litepciedma2_reader_fifo_level1 = (litepciedma2_reader_fifo_level0 + litepciedma2_reader_fifo_readable);
always @(*) begin
	litepciedma2_reader_fifo_wrport_adr <= 8'd0;
	if (litepciedma2_reader_fifo_replace) begin
		litepciedma2_reader_fifo_wrport_adr <= (litepciedma2_reader_fifo_produce - 1'd1);
	end else begin
		litepciedma2_reader_fifo_wrport_adr <= litepciedma2_reader_fifo_produce;
	end
end
assign litepciedma2_reader_fifo_wrport_dat_w = litepciedma2_reader_fifo_syncfifo2_din;
assign litepciedma2_reader_fifo_wrport_we = (litepciedma2_reader_fifo_syncfifo2_we & (litepciedma2_reader_fifo_syncfifo2_writable | litepciedma2_reader_fifo_replace));
assign litepciedma2_reader_fifo_do_read = (litepciedma2_reader_fifo_syncfifo2_readable & litepciedma2_reader_fifo_syncfifo2_re);
assign litepciedma2_reader_fifo_rdport_adr = litepciedma2_reader_fifo_consume;
assign litepciedma2_reader_fifo_syncfifo2_dout = litepciedma2_reader_fifo_rdport_dat_r;
assign litepciedma2_reader_fifo_rdport_re = litepciedma2_reader_fifo_do_read;
assign litepciedma2_reader_fifo_syncfifo2_writable = (litepciedma2_reader_fifo_level0 != 9'd256);
assign litepciedma2_reader_fifo_syncfifo2_readable = (litepciedma2_reader_fifo_level0 != 1'd0);
assign litepciedma2_reader_fifo_level_status = litepciedma2_syncfifo4_level1;
assign litepciedma2_writer_fifo_level_status = litepciedma2_syncfifo5_level1;
assign litepciedma2_next_source_source_valid = (litepciedma2_syncfifo4_source_valid & litepciedma2_next_source_source_ready);
assign litepciedma2_next_source_source_payload_data = litepciedma2_syncfifo4_source_payload_data;
assign litepciedma2_next_source_source_last = litepciedma2_syncfifo4_source_last;
assign litepciedma2_syncfifo4_source_ready = litepciedma2_next_source_source_ready;
assign litepciedma2_syncfifo4_syncfifo4_din = {litepciedma2_syncfifo4_fifo_in_last, litepciedma2_syncfifo4_fifo_in_first, litepciedma2_syncfifo4_fifo_in_payload_data};
assign {litepciedma2_syncfifo4_fifo_out_last, litepciedma2_syncfifo4_fifo_out_first, litepciedma2_syncfifo4_fifo_out_payload_data} = litepciedma2_syncfifo4_syncfifo4_dout;
assign litepciedma2_syncfifo4_sink_ready = litepciedma2_syncfifo4_syncfifo4_writable;
assign litepciedma2_syncfifo4_syncfifo4_we = litepciedma2_syncfifo4_sink_valid;
assign litepciedma2_syncfifo4_fifo_in_first = litepciedma2_syncfifo4_sink_first;
assign litepciedma2_syncfifo4_fifo_in_last = litepciedma2_syncfifo4_sink_last;
assign litepciedma2_syncfifo4_fifo_in_payload_data = litepciedma2_syncfifo4_sink_payload_data;
assign litepciedma2_syncfifo4_source_valid = litepciedma2_syncfifo4_readable;
assign litepciedma2_syncfifo4_source_first = litepciedma2_syncfifo4_fifo_out_first;
assign litepciedma2_syncfifo4_source_last = litepciedma2_syncfifo4_fifo_out_last;
assign litepciedma2_syncfifo4_source_payload_data = litepciedma2_syncfifo4_fifo_out_payload_data;
assign litepciedma2_syncfifo4_re = litepciedma2_syncfifo4_source_ready;
assign litepciedma2_syncfifo4_syncfifo4_re = (litepciedma2_syncfifo4_syncfifo4_readable & ((~litepciedma2_syncfifo4_readable) | litepciedma2_syncfifo4_re));
assign litepciedma2_syncfifo4_level1 = (litepciedma2_syncfifo4_level0 + litepciedma2_syncfifo4_readable);
always @(*) begin
	litepciedma2_syncfifo4_wrport_adr <= 10'd0;
	if (litepciedma2_syncfifo4_replace) begin
		litepciedma2_syncfifo4_wrport_adr <= (litepciedma2_syncfifo4_produce - 1'd1);
	end else begin
		litepciedma2_syncfifo4_wrport_adr <= litepciedma2_syncfifo4_produce;
	end
end
assign litepciedma2_syncfifo4_wrport_dat_w = litepciedma2_syncfifo4_syncfifo4_din;
assign litepciedma2_syncfifo4_wrport_we = (litepciedma2_syncfifo4_syncfifo4_we & (litepciedma2_syncfifo4_syncfifo4_writable | litepciedma2_syncfifo4_replace));
assign litepciedma2_syncfifo4_do_read = (litepciedma2_syncfifo4_syncfifo4_readable & litepciedma2_syncfifo4_syncfifo4_re);
assign litepciedma2_syncfifo4_rdport_adr = litepciedma2_syncfifo4_consume;
assign litepciedma2_syncfifo4_syncfifo4_dout = litepciedma2_syncfifo4_rdport_dat_r;
assign litepciedma2_syncfifo4_rdport_re = litepciedma2_syncfifo4_do_read;
assign litepciedma2_syncfifo4_syncfifo4_writable = (litepciedma2_syncfifo4_level0 != 10'd768);
assign litepciedma2_syncfifo4_syncfifo4_readable = (litepciedma2_syncfifo4_level0 != 1'd0);
assign litepciedma2_syncfifo5_syncfifo5_din = {litepciedma2_syncfifo5_fifo_in_last, litepciedma2_syncfifo5_fifo_in_first, litepciedma2_syncfifo5_fifo_in_payload_data};
assign {litepciedma2_syncfifo5_fifo_out_last, litepciedma2_syncfifo5_fifo_out_first, litepciedma2_syncfifo5_fifo_out_payload_data} = litepciedma2_syncfifo5_syncfifo5_dout;
assign litepciedma2_syncfifo5_sink_ready = litepciedma2_syncfifo5_syncfifo5_writable;
assign litepciedma2_syncfifo5_syncfifo5_we = litepciedma2_syncfifo5_sink_valid;
assign litepciedma2_syncfifo5_fifo_in_first = litepciedma2_syncfifo5_sink_first;
assign litepciedma2_syncfifo5_fifo_in_last = litepciedma2_syncfifo5_sink_last;
assign litepciedma2_syncfifo5_fifo_in_payload_data = litepciedma2_syncfifo5_sink_payload_data;
assign litepciedma2_syncfifo5_source_valid = litepciedma2_syncfifo5_readable;
assign litepciedma2_syncfifo5_source_first = litepciedma2_syncfifo5_fifo_out_first;
assign litepciedma2_syncfifo5_source_last = litepciedma2_syncfifo5_fifo_out_last;
assign litepciedma2_syncfifo5_source_payload_data = litepciedma2_syncfifo5_fifo_out_payload_data;
assign litepciedma2_syncfifo5_re = litepciedma2_syncfifo5_source_ready;
assign litepciedma2_syncfifo5_syncfifo5_re = (litepciedma2_syncfifo5_syncfifo5_readable & ((~litepciedma2_syncfifo5_readable) | litepciedma2_syncfifo5_re));
assign litepciedma2_syncfifo5_level1 = (litepciedma2_syncfifo5_level0 + litepciedma2_syncfifo5_readable);
always @(*) begin
	litepciedma2_syncfifo5_wrport_adr <= 10'd0;
	if (litepciedma2_syncfifo5_replace) begin
		litepciedma2_syncfifo5_wrport_adr <= (litepciedma2_syncfifo5_produce - 1'd1);
	end else begin
		litepciedma2_syncfifo5_wrport_adr <= litepciedma2_syncfifo5_produce;
	end
end
assign litepciedma2_syncfifo5_wrport_dat_w = litepciedma2_syncfifo5_syncfifo5_din;
assign litepciedma2_syncfifo5_wrport_we = (litepciedma2_syncfifo5_syncfifo5_we & (litepciedma2_syncfifo5_syncfifo5_writable | litepciedma2_syncfifo5_replace));
assign litepciedma2_syncfifo5_do_read = (litepciedma2_syncfifo5_syncfifo5_readable & litepciedma2_syncfifo5_syncfifo5_re);
assign litepciedma2_syncfifo5_rdport_adr = litepciedma2_syncfifo5_consume;
assign litepciedma2_syncfifo5_syncfifo5_dout = litepciedma2_syncfifo5_rdport_dat_r;
assign litepciedma2_syncfifo5_rdport_re = litepciedma2_syncfifo5_do_read;
assign litepciedma2_syncfifo5_syncfifo5_writable = (litepciedma2_syncfifo5_level0 != 10'd768);
assign litepciedma2_syncfifo5_syncfifo5_readable = (litepciedma2_syncfifo5_level0 != 1'd0);
assign litepciecore_shared_adr = array_muxed0;
assign litepciecore_shared_dat_w = array_muxed1;
assign litepciecore_shared_sel = array_muxed2;
assign litepciecore_shared_cyc = array_muxed3;
assign litepciecore_shared_stb = array_muxed4;
assign litepciecore_shared_we = array_muxed5;
assign litepciecore_shared_cti = array_muxed6;
assign litepciecore_shared_bte = array_muxed7;
assign wishbone_dat_r = litepciecore_shared_dat_r;
assign wishbone_ack = (litepciecore_shared_ack & (litepciecore_grant == 1'd0));
assign wishbone_err = (litepciecore_shared_err & (litepciecore_grant == 1'd0));
assign litepciecore_request = {wishbone_cyc};
assign litepciecore_grant = 1'd0;
always @(*) begin
	litepciecore_slave_sel <= 2'd0;
	litepciecore_slave_sel[0] <= (litepciecore_shared_adr[28:26] == 1'd1);
	litepciecore_slave_sel[1] <= (litepciecore_shared_adr[28:26] == 1'd0);
end
assign sram_bus_adr = litepciecore_shared_adr;
assign sram_bus_dat_w = litepciecore_shared_dat_w;
assign sram_bus_sel = litepciecore_shared_sel;
assign sram_bus_stb = litepciecore_shared_stb;
assign sram_bus_we = litepciecore_shared_we;
assign sram_bus_cti = litepciecore_shared_cti;
assign sram_bus_bte = litepciecore_shared_bte;
assign bus_wishbone_adr = litepciecore_shared_adr;
assign bus_wishbone_dat_w = litepciecore_shared_dat_w;
assign bus_wishbone_sel = litepciecore_shared_sel;
assign bus_wishbone_stb = litepciecore_shared_stb;
assign bus_wishbone_we = litepciecore_shared_we;
assign bus_wishbone_cti = litepciecore_shared_cti;
assign bus_wishbone_bte = litepciecore_shared_bte;
assign sram_bus_cyc = (litepciecore_shared_cyc & litepciecore_slave_sel[0]);
assign bus_wishbone_cyc = (litepciecore_shared_cyc & litepciecore_slave_sel[1]);
assign litepciecore_shared_err = (sram_bus_err | bus_wishbone_err);
assign litepciecore_wait = ((litepciecore_shared_stb & litepciecore_shared_cyc) & (~litepciecore_shared_ack));
always @(*) begin
	litepciecore_shared_dat_r <= 32'd0;
	litepciecore_shared_ack <= 1'd0;
	litepciecore_error <= 1'd0;
	litepciecore_shared_ack <= (sram_bus_ack | bus_wishbone_ack);
	litepciecore_shared_dat_r <= (({32{litepciecore_slave_sel_r[0]}} & sram_bus_dat_r) | ({32{litepciecore_slave_sel_r[1]}} & bus_wishbone_dat_r));
	if (litepciecore_done) begin
		litepciecore_shared_dat_r <= 32'd4294967295;
		litepciecore_shared_ack <= 1'd1;
		litepciecore_error <= 1'd1;
	end
end
assign litepciecore_done = (litepciecore_count == 1'd0);
assign litepciecore_csrbank0_sel = (litepciecore_interface0_bank_bus_adr[13:9] == 5'd26);
assign litepciecore_csrbank0_cntrl15_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl15_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank0_cntrl14_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl14_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank0_cntrl13_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl13_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank0_cntrl12_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl12_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 2'd3));
assign litepciecore_csrbank0_cntrl11_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl11_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank0_cntrl10_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl10_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank0_cntrl9_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl9_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank0_cntrl8_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl8_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 3'd7));
assign litepciecore_csrbank0_cntrl7_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl7_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank0_cntrl6_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl6_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank0_cntrl5_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl5_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank0_cntrl4_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl4_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank0_cntrl3_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl3_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd12));
assign litepciecore_csrbank0_cntrl2_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl2_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank0_cntrl1_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl1_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd14));
assign litepciecore_csrbank0_cntrl0_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_cntrl0_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank0_enable0_r = litepciecore_interface0_bank_bus_dat_w[0];
assign litepciecore_csrbank0_enable0_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 5'd16));
assign litepciecore_csrbank0_test0_r = litepciecore_interface0_bank_bus_dat_w[31:0];
assign litepciecore_csrbank0_test0_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 5'd17));
assign litepciecore_csrbank0_ndma_r = litepciecore_interface0_bank_bus_dat_w[3:0];
assign litepciecore_csrbank0_ndma_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 5'd18));
assign litepciecore_csrbank0_enable_both0_r = litepciecore_interface0_bank_bus_dat_w[0];
assign litepciecore_csrbank0_enable_both0_re = ((litepciecore_csrbank0_sel & litepciecore_interface0_bank_bus_we) & (litepciecore_interface0_bank_bus_adr[4:0] == 5'd19));
assign cntrl_storage = cntrl_storage_full[511:0];
assign litepciecore_csrbank0_cntrl15_w = cntrl_storage_full[511:480];
assign litepciecore_csrbank0_cntrl14_w = cntrl_storage_full[479:448];
assign litepciecore_csrbank0_cntrl13_w = cntrl_storage_full[447:416];
assign litepciecore_csrbank0_cntrl12_w = cntrl_storage_full[415:384];
assign litepciecore_csrbank0_cntrl11_w = cntrl_storage_full[383:352];
assign litepciecore_csrbank0_cntrl10_w = cntrl_storage_full[351:320];
assign litepciecore_csrbank0_cntrl9_w = cntrl_storage_full[319:288];
assign litepciecore_csrbank0_cntrl8_w = cntrl_storage_full[287:256];
assign litepciecore_csrbank0_cntrl7_w = cntrl_storage_full[255:224];
assign litepciecore_csrbank0_cntrl6_w = cntrl_storage_full[223:192];
assign litepciecore_csrbank0_cntrl5_w = cntrl_storage_full[191:160];
assign litepciecore_csrbank0_cntrl4_w = cntrl_storage_full[159:128];
assign litepciecore_csrbank0_cntrl3_w = cntrl_storage_full[127:96];
assign litepciecore_csrbank0_cntrl2_w = cntrl_storage_full[95:64];
assign litepciecore_csrbank0_cntrl1_w = cntrl_storage_full[63:32];
assign litepciecore_csrbank0_cntrl0_w = cntrl_storage_full[31:0];
assign enable_storage = enable_storage_full;
assign litepciecore_csrbank0_enable0_w = enable_storage_full;
assign test_storage = test_storage_full[31:0];
assign litepciecore_csrbank0_test0_w = test_storage_full[31:0];
assign litepciecore_csrbank0_ndma_w = status[3:0];
assign enable_both_storage = enable_both_storage_full;
assign litepciecore_csrbank0_enable_both0_w = enable_both_storage_full;
assign litepciecore_sel = (litepciecore_sram_bus_adr[13:9] == 1'd1);
always @(*) begin
	litepciecore_sram_bus_dat_r <= 32'd0;
	if (litepciecore_sel_r) begin
		litepciecore_sram_bus_dat_r <= litepciecore_dat_r;
	end
end
assign litepciecore_adr = litepciecore_sram_bus_adr[5:0];
assign litepciecore_csrbank1_sel = (litepciecore_interface1_bank_bus_adr[13:9] == 5'd21);
assign litepciecore_csrbank1_writer_enable0_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciecore_csrbank1_writer_enable0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank1_writer_allow_requests0_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciecore_csrbank1_writer_allow_requests0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank1_writer_table_value1_r = litepciecore_interface1_bank_bus_dat_w[31:0];
assign litepciecore_csrbank1_writer_table_value1_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank1_writer_table_value0_r = litepciecore_interface1_bank_bus_dat_w[31:0];
assign litepciecore_csrbank1_writer_table_value0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 2'd3));
assign litepciedma0_writer_table_we_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciedma0_writer_table_we_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank1_writer_table_loop_prog_n0_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciecore_csrbank1_writer_table_loop_prog_n0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank1_writer_table_loop_status_r = litepciecore_interface1_bank_bus_dat_w[15:0];
assign litepciecore_csrbank1_writer_table_loop_status_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank1_writer_table_level_r = litepciecore_interface1_bank_bus_dat_w[7:0];
assign litepciecore_csrbank1_writer_table_level_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 3'd7));
assign litepciedma0_writer_table_flush_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciedma0_writer_table_flush_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank1_writer_current_packet_r = litepciecore_interface1_bank_bus_dat_w[15:0];
assign litepciecore_csrbank1_writer_current_packet_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank1_reader_enable0_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciecore_csrbank1_reader_enable0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank1_reader_packet_nr0_r = litepciecore_interface1_bank_bus_dat_w[15:0];
assign litepciecore_csrbank1_reader_packet_nr0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank1_reader_current_packet_r = litepciecore_interface1_bank_bus_dat_w[15:0];
assign litepciecore_csrbank1_reader_current_packet_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd12));
assign litepciecore_csrbank1_reader_table_value1_r = litepciecore_interface1_bank_bus_dat_w[31:0];
assign litepciecore_csrbank1_reader_table_value1_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank1_reader_table_value0_r = litepciecore_interface1_bank_bus_dat_w[31:0];
assign litepciecore_csrbank1_reader_table_value0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd14));
assign litepciedma0_reader_table_we_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciedma0_reader_table_we_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank1_reader_table_loop_prog_n0_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciecore_csrbank1_reader_table_loop_prog_n0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd16));
assign litepciecore_csrbank1_reader_table_loop_status_r = litepciecore_interface1_bank_bus_dat_w[15:0];
assign litepciecore_csrbank1_reader_table_loop_status_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd17));
assign litepciecore_csrbank1_reader_table_level_r = litepciecore_interface1_bank_bus_dat_w[7:0];
assign litepciecore_csrbank1_reader_table_level_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd18));
assign litepciedma0_reader_table_flush_r = litepciecore_interface1_bank_bus_dat_w[0];
assign litepciedma0_reader_table_flush_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd19));
assign litepciecore_csrbank1_reader_flush_nr0_r = litepciecore_interface1_bank_bus_dat_w[15:0];
assign litepciecore_csrbank1_reader_flush_nr0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd20));
assign litepciecore_csrbank1_reader_flush_nbytes0_r = litepciecore_interface1_bank_bus_dat_w[15:0];
assign litepciecore_csrbank1_reader_flush_nbytes0_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd21));
assign litepciecore_csrbank1_buffering_reader_fifo_level_r = litepciecore_interface1_bank_bus_dat_w[13:0];
assign litepciecore_csrbank1_buffering_reader_fifo_level_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd22));
assign litepciecore_csrbank1_buffering_writer_fifo_level_r = litepciecore_interface1_bank_bus_dat_w[13:0];
assign litepciecore_csrbank1_buffering_writer_fifo_level_re = ((litepciecore_csrbank1_sel & litepciecore_interface1_bank_bus_we) & (litepciecore_interface1_bank_bus_adr[4:0] == 5'd23));
assign litepciedma0_writer_enable_storage = litepciedma0_writer_enable_storage_full;
assign litepciecore_csrbank1_writer_enable0_w = litepciedma0_writer_enable_storage_full;
assign litepciedma0_writer_allow_requests_storage = litepciedma0_writer_allow_requests_storage_full;
assign litepciecore_csrbank1_writer_allow_requests0_w = litepciedma0_writer_allow_requests_storage_full;
assign litepciedma0_writer_table_value_storage = litepciedma0_writer_table_value_storage_full[63:0];
assign litepciecore_csrbank1_writer_table_value1_w = litepciedma0_writer_table_value_storage_full[63:32];
assign litepciecore_csrbank1_writer_table_value0_w = litepciedma0_writer_table_value_storage_full[31:0];
assign litepciedma0_writer_table_loop_prog_n_storage = litepciedma0_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank1_writer_table_loop_prog_n0_w = litepciedma0_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank1_writer_table_loop_status_w = litepciedma0_writer_table_loop_status_status[15:0];
assign litepciecore_csrbank1_writer_table_level_w = litepciedma0_writer_table_level_status[7:0];
assign litepciecore_csrbank1_writer_current_packet_w = litepciedma0_writer_status[15:0];
assign litepciedma0_reader_enable_storage = litepciedma0_reader_enable_storage_full;
assign litepciecore_csrbank1_reader_enable0_w = litepciedma0_reader_enable_storage_full;
assign litepciedma0_reader_packet_nr_storage = litepciedma0_reader_packet_nr_storage_full[15:0];
assign litepciecore_csrbank1_reader_packet_nr0_w = litepciedma0_reader_packet_nr_storage_full[15:0];
assign litepciecore_csrbank1_reader_current_packet_w = litepciedma0_reader_status[15:0];
assign litepciedma0_reader_table_value_storage = litepciedma0_reader_table_value_storage_full[63:0];
assign litepciecore_csrbank1_reader_table_value1_w = litepciedma0_reader_table_value_storage_full[63:32];
assign litepciecore_csrbank1_reader_table_value0_w = litepciedma0_reader_table_value_storage_full[31:0];
assign litepciedma0_reader_table_loop_prog_n_storage = litepciedma0_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank1_reader_table_loop_prog_n0_w = litepciedma0_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank1_reader_table_loop_status_w = litepciedma0_reader_table_loop_status_status[15:0];
assign litepciecore_csrbank1_reader_table_level_w = litepciedma0_reader_table_level_status[7:0];
assign litepciedma0_reader_flush_nr_storage = litepciedma0_reader_flush_nr_storage_full[15:0];
assign litepciecore_csrbank1_reader_flush_nr0_w = litepciedma0_reader_flush_nr_storage_full[15:0];
assign litepciedma0_reader_flush_nbytes_storage = litepciedma0_reader_flush_nbytes_storage_full[15:0];
assign litepciecore_csrbank1_reader_flush_nbytes0_w = litepciedma0_reader_flush_nbytes_storage_full[15:0];
assign litepciecore_csrbank1_buffering_reader_fifo_level_w = litepciedma0_reader_fifo_level_status[13:0];
assign litepciecore_csrbank1_buffering_writer_fifo_level_w = litepciedma0_writer_fifo_level_status[13:0];
assign litepciecore_csrbank2_sel = (litepciecore_interface2_bank_bus_adr[13:9] == 5'd22);
assign litepciecore_csrbank2_writer_enable0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_writer_enable0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank2_writer_allow_requests0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_writer_allow_requests0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank2_writer_table_value1_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_writer_table_value1_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank2_writer_table_value0_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_writer_table_value0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 2'd3));
assign litepciedma1_writer_table_we_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma1_writer_table_we_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank2_writer_table_loop_prog_n0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_writer_table_loop_prog_n0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank2_writer_table_loop_status_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_writer_table_loop_status_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank2_writer_table_level_r = litepciecore_interface2_bank_bus_dat_w[7:0];
assign litepciecore_csrbank2_writer_table_level_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 3'd7));
assign litepciedma1_writer_table_flush_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma1_writer_table_flush_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank2_writer_current_packet_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_writer_current_packet_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank2_reader_enable0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_reader_enable0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank2_reader_packet_nr0_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_reader_packet_nr0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank2_reader_current_packet_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_reader_current_packet_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd12));
assign litepciecore_csrbank2_reader_table_value1_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_reader_table_value1_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank2_reader_table_value0_r = litepciecore_interface2_bank_bus_dat_w[31:0];
assign litepciecore_csrbank2_reader_table_value0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd14));
assign litepciedma1_reader_table_we_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma1_reader_table_we_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank2_reader_table_loop_prog_n0_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciecore_csrbank2_reader_table_loop_prog_n0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd16));
assign litepciecore_csrbank2_reader_table_loop_status_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_reader_table_loop_status_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd17));
assign litepciecore_csrbank2_reader_table_level_r = litepciecore_interface2_bank_bus_dat_w[7:0];
assign litepciecore_csrbank2_reader_table_level_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd18));
assign litepciedma1_reader_table_flush_r = litepciecore_interface2_bank_bus_dat_w[0];
assign litepciedma1_reader_table_flush_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd19));
assign litepciecore_csrbank2_reader_flush_nr0_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_reader_flush_nr0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd20));
assign litepciecore_csrbank2_reader_flush_nbytes0_r = litepciecore_interface2_bank_bus_dat_w[15:0];
assign litepciecore_csrbank2_reader_flush_nbytes0_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd21));
assign litepciecore_csrbank2_buffering_reader_fifo_level_r = litepciecore_interface2_bank_bus_dat_w[13:0];
assign litepciecore_csrbank2_buffering_reader_fifo_level_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd22));
assign litepciecore_csrbank2_buffering_writer_fifo_level_r = litepciecore_interface2_bank_bus_dat_w[13:0];
assign litepciecore_csrbank2_buffering_writer_fifo_level_re = ((litepciecore_csrbank2_sel & litepciecore_interface2_bank_bus_we) & (litepciecore_interface2_bank_bus_adr[4:0] == 5'd23));
assign litepciedma1_writer_enable_storage = litepciedma1_writer_enable_storage_full;
assign litepciecore_csrbank2_writer_enable0_w = litepciedma1_writer_enable_storage_full;
assign litepciedma1_writer_allow_requests_storage = litepciedma1_writer_allow_requests_storage_full;
assign litepciecore_csrbank2_writer_allow_requests0_w = litepciedma1_writer_allow_requests_storage_full;
assign litepciedma1_writer_table_value_storage = litepciedma1_writer_table_value_storage_full[63:0];
assign litepciecore_csrbank2_writer_table_value1_w = litepciedma1_writer_table_value_storage_full[63:32];
assign litepciecore_csrbank2_writer_table_value0_w = litepciedma1_writer_table_value_storage_full[31:0];
assign litepciedma1_writer_table_loop_prog_n_storage = litepciedma1_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_writer_table_loop_prog_n0_w = litepciedma1_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_writer_table_loop_status_w = litepciedma1_writer_table_loop_status_status[15:0];
assign litepciecore_csrbank2_writer_table_level_w = litepciedma1_writer_table_level_status[7:0];
assign litepciecore_csrbank2_writer_current_packet_w = litepciedma1_writer_status[15:0];
assign litepciedma1_reader_enable_storage = litepciedma1_reader_enable_storage_full;
assign litepciecore_csrbank2_reader_enable0_w = litepciedma1_reader_enable_storage_full;
assign litepciedma1_reader_packet_nr_storage = litepciedma1_reader_packet_nr_storage_full[15:0];
assign litepciecore_csrbank2_reader_packet_nr0_w = litepciedma1_reader_packet_nr_storage_full[15:0];
assign litepciecore_csrbank2_reader_current_packet_w = litepciedma1_reader_status[15:0];
assign litepciedma1_reader_table_value_storage = litepciedma1_reader_table_value_storage_full[63:0];
assign litepciecore_csrbank2_reader_table_value1_w = litepciedma1_reader_table_value_storage_full[63:32];
assign litepciecore_csrbank2_reader_table_value0_w = litepciedma1_reader_table_value_storage_full[31:0];
assign litepciedma1_reader_table_loop_prog_n_storage = litepciedma1_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_reader_table_loop_prog_n0_w = litepciedma1_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank2_reader_table_loop_status_w = litepciedma1_reader_table_loop_status_status[15:0];
assign litepciecore_csrbank2_reader_table_level_w = litepciedma1_reader_table_level_status[7:0];
assign litepciedma1_reader_flush_nr_storage = litepciedma1_reader_flush_nr_storage_full[15:0];
assign litepciecore_csrbank2_reader_flush_nr0_w = litepciedma1_reader_flush_nr_storage_full[15:0];
assign litepciedma1_reader_flush_nbytes_storage = litepciedma1_reader_flush_nbytes_storage_full[15:0];
assign litepciecore_csrbank2_reader_flush_nbytes0_w = litepciedma1_reader_flush_nbytes_storage_full[15:0];
assign litepciecore_csrbank2_buffering_reader_fifo_level_w = litepciedma1_reader_fifo_level_status[13:0];
assign litepciecore_csrbank2_buffering_writer_fifo_level_w = litepciedma1_writer_fifo_level_status[13:0];
assign litepciecore_csrbank3_sel = (litepciecore_interface3_bank_bus_adr[13:9] == 5'd23);
assign litepciecore_csrbank3_writer_enable0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_writer_enable0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 1'd0));
assign litepciecore_csrbank3_writer_allow_requests0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_writer_allow_requests0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 1'd1));
assign litepciecore_csrbank3_writer_table_value1_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_writer_table_value1_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 2'd2));
assign litepciecore_csrbank3_writer_table_value0_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_writer_table_value0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 2'd3));
assign litepciedma2_writer_table_we_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma2_writer_table_we_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd4));
assign litepciecore_csrbank3_writer_table_loop_prog_n0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_writer_table_loop_prog_n0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd5));
assign litepciecore_csrbank3_writer_table_loop_status_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_writer_table_loop_status_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd6));
assign litepciecore_csrbank3_writer_table_level_r = litepciecore_interface3_bank_bus_dat_w[7:0];
assign litepciecore_csrbank3_writer_table_level_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 3'd7));
assign litepciedma2_writer_table_flush_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma2_writer_table_flush_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd8));
assign litepciecore_csrbank3_writer_current_packet_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_writer_current_packet_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd9));
assign litepciecore_csrbank3_reader_enable0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_reader_enable0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd10));
assign litepciecore_csrbank3_reader_packet_nr0_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_reader_packet_nr0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd11));
assign litepciecore_csrbank3_reader_current_packet_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_reader_current_packet_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd12));
assign litepciecore_csrbank3_reader_table_value1_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_reader_table_value1_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd13));
assign litepciecore_csrbank3_reader_table_value0_r = litepciecore_interface3_bank_bus_dat_w[31:0];
assign litepciecore_csrbank3_reader_table_value0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd14));
assign litepciedma2_reader_table_we_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma2_reader_table_we_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 4'd15));
assign litepciecore_csrbank3_reader_table_loop_prog_n0_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciecore_csrbank3_reader_table_loop_prog_n0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd16));
assign litepciecore_csrbank3_reader_table_loop_status_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_reader_table_loop_status_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd17));
assign litepciecore_csrbank3_reader_table_level_r = litepciecore_interface3_bank_bus_dat_w[7:0];
assign litepciecore_csrbank3_reader_table_level_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd18));
assign litepciedma2_reader_table_flush_r = litepciecore_interface3_bank_bus_dat_w[0];
assign litepciedma2_reader_table_flush_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd19));
assign litepciecore_csrbank3_reader_flush_nr0_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_reader_flush_nr0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd20));
assign litepciecore_csrbank3_reader_flush_nbytes0_r = litepciecore_interface3_bank_bus_dat_w[15:0];
assign litepciecore_csrbank3_reader_flush_nbytes0_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd21));
assign litepciecore_csrbank3_buffering_reader_fifo_level_r = litepciecore_interface3_bank_bus_dat_w[13:0];
assign litepciecore_csrbank3_buffering_reader_fifo_level_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd22));
assign litepciecore_csrbank3_buffering_writer_fifo_level_r = litepciecore_interface3_bank_bus_dat_w[13:0];
assign litepciecore_csrbank3_buffering_writer_fifo_level_re = ((litepciecore_csrbank3_sel & litepciecore_interface3_bank_bus_we) & (litepciecore_interface3_bank_bus_adr[4:0] == 5'd23));
assign litepciedma2_writer_enable_storage = litepciedma2_writer_enable_storage_full;
assign litepciecore_csrbank3_writer_enable0_w = litepciedma2_writer_enable_storage_full;
assign litepciedma2_writer_allow_requests_storage = litepciedma2_writer_allow_requests_storage_full;
assign litepciecore_csrbank3_writer_allow_requests0_w = litepciedma2_writer_allow_requests_storage_full;
assign litepciedma2_writer_table_value_storage = litepciedma2_writer_table_value_storage_full[63:0];
assign litepciecore_csrbank3_writer_table_value1_w = litepciedma2_writer_table_value_storage_full[63:32];
assign litepciecore_csrbank3_writer_table_value0_w = litepciedma2_writer_table_value_storage_full[31:0];
assign litepciedma2_writer_table_loop_prog_n_storage = litepciedma2_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_writer_table_loop_prog_n0_w = litepciedma2_writer_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_writer_table_loop_status_w = litepciedma2_writer_table_loop_status_status[15:0];
assign litepciecore_csrbank3_writer_table_level_w = litepciedma2_writer_table_level_status[7:0];
assign litepciecore_csrbank3_writer_current_packet_w = litepciedma2_writer_status[15:0];
assign litepciedma2_reader_enable_storage = litepciedma2_reader_enable_storage_full;
assign litepciecore_csrbank3_reader_enable0_w = litepciedma2_reader_enable_storage_full;
assign litepciedma2_reader_packet_nr_storage = litepciedma2_reader_packet_nr_storage_full[15:0];
assign litepciecore_csrbank3_reader_packet_nr0_w = litepciedma2_reader_packet_nr_storage_full[15:0];
assign litepciecore_csrbank3_reader_current_packet_w = litepciedma2_reader_status[15:0];
assign litepciedma2_reader_table_value_storage = litepciedma2_reader_table_value_storage_full[63:0];
assign litepciecore_csrbank3_reader_table_value1_w = litepciedma2_reader_table_value_storage_full[63:32];
assign litepciecore_csrbank3_reader_table_value0_w = litepciedma2_reader_table_value_storage_full[31:0];
assign litepciedma2_reader_table_loop_prog_n_storage = litepciedma2_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_reader_table_loop_prog_n0_w = litepciedma2_reader_table_loop_prog_n_storage_full;
assign litepciecore_csrbank3_reader_table_loop_status_w = litepciedma2_reader_table_loop_status_status[15:0];
assign litepciecore_csrbank3_reader_table_level_w = litepciedma2_reader_table_level_status[7:0];
assign litepciedma2_reader_flush_nr_storage = litepciedma2_reader_flush_nr_storage_full[15:0];
assign litepciecore_csrbank3_reader_flush_nr0_w = litepciedma2_reader_flush_nr_storage_full[15:0];
assign litepciedma2_reader_flush_nbytes_storage = litepciedma2_reader_flush_nbytes_storage_full[15:0];
assign litepciecore_csrbank3_reader_flush_nbytes0_w = litepciedma2_reader_flush_nbytes_storage_full[15:0];
assign litepciecore_csrbank3_buffering_reader_fifo_level_w = litepciedma2_reader_fifo_level_status[13:0];
assign litepciecore_csrbank3_buffering_writer_fifo_level_w = litepciedma2_writer_fifo_level_status[13:0];
assign litepciecore_csrbank4_sel = (litepciecore_interface4_bank_bus_adr[13:9] == 5'd20);
assign litepciecore_csrbank4_lnk_up_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_lnk_up_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[2:0] == 1'd0));
assign litepciecore_csrbank4_msi_enable_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_msi_enable_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[2:0] == 1'd1));
assign litepciecore_csrbank4_bus_master_enable_r = litepciecore_interface4_bank_bus_dat_w[0];
assign litepciecore_csrbank4_bus_master_enable_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[2:0] == 2'd2));
assign litepciecore_csrbank4_max_request_size_r = litepciecore_interface4_bank_bus_dat_w[15:0];
assign litepciecore_csrbank4_max_request_size_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[2:0] == 2'd3));
assign litepciecore_csrbank4_max_payload_size_r = litepciecore_interface4_bank_bus_dat_w[15:0];
assign litepciecore_csrbank4_max_payload_size_re = ((litepciecore_csrbank4_sel & litepciecore_interface4_bank_bus_we) & (litepciecore_interface4_bank_bus_adr[2:0] == 3'd4));
assign litepciecore_csrbank4_lnk_up_w = pcie_phy_lnk_up_status;
assign litepciecore_csrbank4_msi_enable_w = pcie_phy_msi_enable_status;
assign litepciecore_csrbank4_bus_master_enable_w = pcie_phy_bus_master_enable_status;
assign litepciecore_csrbank4_max_request_size_w = pcie_phy_max_request_size_status[15:0];
assign litepciecore_csrbank4_max_payload_size_w = pcie_phy_max_payload_size_status[15:0];
assign litepciecore_interface0_bank_bus_adr = interface_adr;
assign litepciecore_interface1_bank_bus_adr = interface_adr;
assign litepciecore_interface2_bank_bus_adr = interface_adr;
assign litepciecore_interface3_bank_bus_adr = interface_adr;
assign litepciecore_interface4_bank_bus_adr = interface_adr;
assign litepciecore_sram_bus_adr = interface_adr;
assign litepciecore_interface0_bank_bus_we = interface_we;
assign litepciecore_interface1_bank_bus_we = interface_we;
assign litepciecore_interface2_bank_bus_we = interface_we;
assign litepciecore_interface3_bank_bus_we = interface_we;
assign litepciecore_interface4_bank_bus_we = interface_we;
assign litepciecore_sram_bus_we = interface_we;
assign litepciecore_interface0_bank_bus_dat_w = interface_dat_w;
assign litepciecore_interface1_bank_bus_dat_w = interface_dat_w;
assign litepciecore_interface2_bank_bus_dat_w = interface_dat_w;
assign litepciecore_interface3_bank_bus_dat_w = interface_dat_w;
assign litepciecore_interface4_bank_bus_dat_w = interface_dat_w;
assign litepciecore_sram_bus_dat_w = interface_dat_w;
assign interface_dat_r = (((((litepciecore_interface0_bank_bus_dat_r | litepciecore_interface1_bank_bus_dat_r) | litepciecore_interface2_bank_bus_dat_r) | litepciecore_interface3_bank_bus_dat_r) | litepciecore_interface4_bank_bus_dat_r) | litepciecore_sram_bus_dat_r);
assign slice_proxy0 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat[127:96];
assign slice_proxy1 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat[127:96];
assign slice_proxy2 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat[127:96];
assign slice_proxy3 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat[127:96];
assign slice_proxy4 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy5 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy6 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy7 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy8 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy9 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy10 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy11 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy12 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy13 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy14 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy15 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy16 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_be[15:12];
assign slice_proxy17 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_be[15:12];
assign slice_proxy18 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_be[15:12];
assign slice_proxy19 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_be[15:12];
assign slice_proxy20 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy21 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy22 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy23 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy24 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy25 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy26 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy27 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy28 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[11:8];
assign slice_proxy29 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[11:8];
assign slice_proxy30 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[11:8];
assign slice_proxy31 = pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be[11:8];
assign t_slice_proxy0 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy1 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy2 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy3 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy4 = pcie_endpoint_header_inserter_sink_payload_be[3:0];
assign t_slice_proxy5 = pcie_endpoint_header_inserter_sink_payload_be[3:0];
assign t_slice_proxy6 = pcie_endpoint_header_inserter_sink_payload_be[3:0];
assign t_slice_proxy7 = pcie_endpoint_header_inserter_sink_payload_be[3:0];
assign rhs_slice_proxy0 = pcie_endpoint_header_inserter_dat[63:32];
assign rhs_slice_proxy1 = pcie_endpoint_header_inserter_dat[63:32];
assign rhs_slice_proxy2 = pcie_endpoint_header_inserter_dat[63:32];
assign rhs_slice_proxy3 = pcie_endpoint_header_inserter_dat[63:32];
assign rhs_slice_proxy4 = pcie_endpoint_header_inserter_dat[95:64];
assign rhs_slice_proxy5 = pcie_endpoint_header_inserter_dat[95:64];
assign rhs_slice_proxy6 = pcie_endpoint_header_inserter_dat[95:64];
assign rhs_slice_proxy7 = pcie_endpoint_header_inserter_dat[95:64];
assign rhs_slice_proxy8 = pcie_endpoint_header_inserter_dat[127:96];
assign rhs_slice_proxy9 = pcie_endpoint_header_inserter_dat[127:96];
assign rhs_slice_proxy10 = pcie_endpoint_header_inserter_dat[127:96];
assign rhs_slice_proxy11 = pcie_endpoint_header_inserter_dat[127:96];
assign rhs_slice_proxy12 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
assign rhs_slice_proxy13 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
assign rhs_slice_proxy14 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
assign rhs_slice_proxy15 = pcie_endpoint_header_inserter_sink_payload_dat[31:0];
always @(*) begin
	array_muxed0 <= 30'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed0 <= wishbone_adr;
		end
	endcase
end
always @(*) begin
	array_muxed1 <= 32'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed1 <= wishbone_dat_w;
		end
	endcase
end
always @(*) begin
	array_muxed2 <= 4'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed2 <= wishbone_sel;
		end
	endcase
end
always @(*) begin
	array_muxed3 <= 1'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed3 <= wishbone_cyc;
		end
	endcase
end
always @(*) begin
	array_muxed4 <= 1'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed4 <= wishbone_stb;
		end
	endcase
end
always @(*) begin
	array_muxed5 <= 1'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed5 <= wishbone_we;
		end
	endcase
end
always @(*) begin
	array_muxed6 <= 3'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed6 <= wishbone_cti;
		end
	endcase
end
always @(*) begin
	array_muxed7 <= 2'd0;
	case (litepciecore_grant)
		default: begin
			array_muxed7 <= wishbone_bte;
		end
	endcase
end
assign pcie_phy_tx_cdc_produce_rdomain = xilinxmultiregimpl0_regs1;
assign pcie_phy_tx_cdc_consume_wdomain = xilinxmultiregimpl1_regs1;
assign pcie_phy_rx_cdc_produce_rdomain = xilinxmultiregimpl2_regs1;
assign pcie_phy_rx_cdc_consume_wdomain = xilinxmultiregimpl3_regs1;
assign pcie_phy_msi_cdc_produce_rdomain = xilinxmultiregimpl4_regs1;
assign pcie_phy_msi_cdc_consume_wdomain = xilinxmultiregimpl5_regs1;
assign pcie_phy_lnk_up_status = xilinxmultiregimpl6_regs1;
assign pcie_phy_bus_master_enable_status = xilinxmultiregimpl7_regs1;
assign xilinxmultiregimpl7 = pcie_phy_command[2];
assign pcie_phy_msi_enable_status = xilinxmultiregimpl8_regs1;
assign pcie_phy_max_request_size_status = xilinxmultiregimpl9_regs1;
assign pcie_phy_max_payload_size_status = xilinxmultiregimpl10_regs1;

always @(posedge pcie_clk) begin
	case (pcie_phy_dcommand[14:12])
		1'd0: begin
			pcie_phy_max_request_size <= 8'd128;
		end
		1'd1: begin
			pcie_phy_max_request_size <= 9'd256;
		end
		2'd2: begin
			pcie_phy_max_request_size <= 10'd512;
		end
		2'd3: begin
			pcie_phy_max_request_size <= 11'd1024;
		end
		3'd4: begin
			pcie_phy_max_request_size <= 12'd2048;
		end
		3'd5: begin
			pcie_phy_max_request_size <= 13'd4096;
		end
	endcase
	case (pcie_phy_dcommand[7:5])
		1'd0: begin
			pcie_phy_max_payload_size <= 8'd128;
		end
		1'd1: begin
			pcie_phy_max_payload_size <= 9'd256;
		end
		2'd2: begin
			pcie_phy_max_payload_size <= 10'd512;
		end
		2'd3: begin
			pcie_phy_max_payload_size <= 11'd1024;
		end
		3'd4: begin
			pcie_phy_max_payload_size <= 12'd2048;
		end
		3'd5: begin
			pcie_phy_max_payload_size <= 13'd4096;
		end
	endcase
	pcie_phy_id <= {pcie_phy_bus_number, pcie_phy_device_number, pcie_phy_function_number};
	pcie_phy_tx_cdc_graycounter1_q_binary <= pcie_phy_tx_cdc_graycounter1_q_next_binary;
	pcie_phy_tx_cdc_graycounter1_q <= pcie_phy_tx_cdc_graycounter1_q_next;
	pcie_phy_rx_cdc_graycounter0_q_binary <= pcie_phy_rx_cdc_graycounter0_q_next_binary;
	pcie_phy_rx_cdc_graycounter0_q <= pcie_phy_rx_cdc_graycounter0_q_next;
	pcie_phy_msi_cdc_graycounter1_q_binary <= pcie_phy_msi_cdc_graycounter1_q_next_binary;
	pcie_phy_msi_cdc_graycounter1_q <= pcie_phy_msi_cdc_graycounter1_q_next;
	if (pcie_rst) begin
		pcie_phy_id <= 16'd0;
		pcie_phy_max_request_size <= 16'd0;
		pcie_phy_max_payload_size <= 16'd0;
		pcie_phy_tx_cdc_graycounter1_q <= 3'd0;
		pcie_phy_tx_cdc_graycounter1_q_binary <= 3'd0;
		pcie_phy_rx_cdc_graycounter0_q <= 3'd0;
		pcie_phy_rx_cdc_graycounter0_q_binary <= 3'd0;
		pcie_phy_msi_cdc_graycounter1_q <= 3'd0;
		pcie_phy_msi_cdc_graycounter1_q_binary <= 3'd0;
	end
	xilinxmultiregimpl0_regs0 <= pcie_phy_tx_cdc_graycounter0_q;
	xilinxmultiregimpl0_regs1 <= xilinxmultiregimpl0_regs0;
	xilinxmultiregimpl3_regs0 <= pcie_phy_rx_cdc_graycounter1_q;
	xilinxmultiregimpl3_regs1 <= xilinxmultiregimpl3_regs0;
	xilinxmultiregimpl4_regs0 <= pcie_phy_msi_cdc_graycounter0_q;
	xilinxmultiregimpl4_regs1 <= xilinxmultiregimpl4_regs0;
end

always @(posedge sys_clk) begin
	sram_bus_ack <= 1'd0;
	if (((sram_bus_cyc & sram_bus_stb) & (~sram_bus_ack))) begin
		sram_bus_ack <= 1'd1;
	end
	interface_we <= 1'd0;
	interface_dat_w <= bus_wishbone_dat_w;
	interface_adr <= bus_wishbone_adr;
	bus_wishbone_dat_r <= interface_dat_r;
	if ((counter == 1'd1)) begin
		interface_we <= bus_wishbone_we;
	end
	if ((counter == 2'd2)) begin
		bus_wishbone_ack <= 1'd1;
	end
	if ((counter == 2'd3)) begin
		bus_wishbone_ack <= 1'd0;
	end
	if ((counter != 1'd0)) begin
		counter <= (counter + 1'd1);
	end else begin
		if ((bus_wishbone_cyc & bus_wishbone_stb)) begin
			counter <= 1'd1;
		end
	end
	if (pcie_phy_tx_buffer_pipe_ce) begin
		pcie_phy_tx_buffer_valid_n <= pcie_phy_tx_buffer_sink_valid;
	end
	if (pcie_phy_tx_buffer_pipe_ce) begin
		pcie_phy_tx_buffer_first_n <= (pcie_phy_tx_buffer_sink_valid & pcie_phy_tx_buffer_sink_first);
		pcie_phy_tx_buffer_last_n <= (pcie_phy_tx_buffer_sink_valid & pcie_phy_tx_buffer_sink_last);
	end
	if (pcie_phy_tx_buffer_pipe_ce) begin
		pcie_phy_tx_buffer_source_payload_dat <= pcie_phy_tx_buffer_sink_payload_dat;
		pcie_phy_tx_buffer_source_payload_be <= pcie_phy_tx_buffer_sink_payload_be;
	end
	pcie_phy_tx_cdc_graycounter0_q_binary <= pcie_phy_tx_cdc_graycounter0_q_next_binary;
	pcie_phy_tx_cdc_graycounter0_q <= pcie_phy_tx_cdc_graycounter0_q_next;
	if (pcie_phy_rx_buffer_pipe_ce) begin
		pcie_phy_rx_buffer_valid_n <= pcie_phy_rx_buffer_sink_valid;
	end
	if (pcie_phy_rx_buffer_pipe_ce) begin
		pcie_phy_rx_buffer_first_n <= (pcie_phy_rx_buffer_sink_valid & pcie_phy_rx_buffer_sink_first);
		pcie_phy_rx_buffer_last_n <= (pcie_phy_rx_buffer_sink_valid & pcie_phy_rx_buffer_sink_last);
	end
	if (pcie_phy_rx_buffer_pipe_ce) begin
		pcie_phy_rx_buffer_source_payload_dat <= pcie_phy_rx_buffer_sink_payload_dat;
		pcie_phy_rx_buffer_source_payload_be <= pcie_phy_rx_buffer_sink_payload_be;
	end
	pcie_phy_rx_cdc_graycounter1_q_binary <= pcie_phy_rx_cdc_graycounter1_q_next_binary;
	pcie_phy_rx_cdc_graycounter1_q <= pcie_phy_rx_cdc_graycounter1_q_next;
	pcie_phy_msi_cdc_graycounter0_q_binary <= pcie_phy_msi_cdc_graycounter0_q_next_binary;
	pcie_phy_msi_cdc_graycounter0_q <= pcie_phy_msi_cdc_graycounter0_q_next;
	if ((pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_valid & pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_ready)) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_dat <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_dat;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_be <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_sink_payload_be;
	end
	subfragments_litepcietlpdepacketizer_state <= subfragments_litepcietlpdepacketizer_next_state;
	if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_first <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0;
	end
	if (pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_last <= pcie_endpoint_litepcietlpdepacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce0) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[31:0] <= subfragments_litepcietlpdepacketizer_next_value0;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce1) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[63:32] <= subfragments_litepcietlpdepacketizer_next_value1;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce2) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[95:64] <= subfragments_litepcietlpdepacketizer_next_value2;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce3) begin
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header[127:96] <= subfragments_litepcietlpdepacketizer_next_value3;
	end
	if (pcie_endpoint_litepcietlpdepacketizer_dispatcher_first) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing <= pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel0;
	end
	pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1 <= ((pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid | pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1) & (~pcie_endpoint_litepcietlpdepacketizer_dispatcher_last));
	if (pcie_endpoint_litepcietlpdepacketizer_dispatcher_last) begin
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_first <= 1'd1;
	end else begin
		if ((pcie_endpoint_litepcietlpdepacketizer_dispatch_source_valid & pcie_endpoint_litepcietlpdepacketizer_dispatch_source_ready)) begin
			pcie_endpoint_litepcietlpdepacketizer_dispatcher_first <= 1'd0;
		end
	end
	case (pcie_endpoint_grant)
		1'd0: begin
			if ((~pcie_endpoint_request[0])) begin
				if (pcie_endpoint_request[1]) begin
					pcie_endpoint_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~pcie_endpoint_request[1])) begin
				if (pcie_endpoint_request[0]) begin
					pcie_endpoint_grant <= 1'd0;
				end
			end
		end
	endcase
	pcie_endpoint_status0_ongoing1 <= ((pcie_endpoint_tlp_raw_req_valid | pcie_endpoint_status0_ongoing1) & (~pcie_endpoint_status0_last));
	if (pcie_endpoint_status0_last) begin
		pcie_endpoint_status0_first <= 1'd1;
	end else begin
		if ((pcie_endpoint_tlp_raw_req_valid & pcie_endpoint_tlp_raw_req_ready)) begin
			pcie_endpoint_status0_first <= 1'd0;
		end
	end
	pcie_endpoint_status1_ongoing1 <= ((pcie_endpoint_tlp_raw_cmp_valid | pcie_endpoint_status1_ongoing1) & (~pcie_endpoint_status1_last));
	if (pcie_endpoint_status1_last) begin
		pcie_endpoint_status1_first <= 1'd1;
	end else begin
		if ((pcie_endpoint_tlp_raw_cmp_valid & pcie_endpoint_tlp_raw_cmp_ready)) begin
			pcie_endpoint_status1_first <= 1'd0;
		end
	end
	if ((pcie_endpoint_header_inserter_sink_valid & pcie_endpoint_header_inserter_sink_ready)) begin
		pcie_endpoint_header_inserter_dat <= pcie_endpoint_header_inserter_sink_payload_dat;
		pcie_endpoint_header_inserter_last <= pcie_endpoint_header_inserter_sink_last;
	end
	subfragments_litepcietlppacketizer_state <= subfragments_litepcietlppacketizer_next_state;
	if (subfragments_tags_queue_syncfifo_re) begin
		subfragments_tags_queue_readable <= 1'd1;
	end else begin
		if (subfragments_tags_queue_re) begin
			subfragments_tags_queue_readable <= 1'd0;
		end
	end
	if (((subfragments_tags_queue_syncfifo_we & subfragments_tags_queue_syncfifo_writable) & (~subfragments_tags_queue_replace))) begin
		subfragments_tags_queue_produce <= (subfragments_tags_queue_produce + 1'd1);
	end
	if (subfragments_tags_queue_do_read) begin
		subfragments_tags_queue_consume <= (subfragments_tags_queue_consume + 1'd1);
	end
	if (((subfragments_tags_queue_syncfifo_we & subfragments_tags_queue_syncfifo_writable) & (~subfragments_tags_queue_replace))) begin
		if ((~subfragments_tags_queue_do_read)) begin
			subfragments_tags_queue_level0 <= (subfragments_tags_queue_level0 + 1'd1);
		end
	end else begin
		if (subfragments_tags_queue_do_read) begin
			subfragments_tags_queue_level0 <= (subfragments_tags_queue_level0 - 1'd1);
		end
	end
	if (subfragments_requests_queue_syncfifo_re) begin
		subfragments_requests_queue_readable <= 1'd1;
	end else begin
		if (subfragments_requests_queue_re) begin
			subfragments_requests_queue_readable <= 1'd0;
		end
	end
	if (((subfragments_requests_queue_syncfifo_we & subfragments_requests_queue_syncfifo_writable) & (~subfragments_requests_queue_replace))) begin
		subfragments_requests_queue_produce <= (subfragments_requests_queue_produce + 1'd1);
	end
	if (subfragments_requests_queue_do_read) begin
		subfragments_requests_queue_consume <= (subfragments_requests_queue_consume + 1'd1);
	end
	if (((subfragments_requests_queue_syncfifo_we & subfragments_requests_queue_syncfifo_writable) & (~subfragments_requests_queue_replace))) begin
		if ((~subfragments_requests_queue_do_read)) begin
			subfragments_requests_queue_level0 <= (subfragments_requests_queue_level0 + 1'd1);
		end
	end else begin
		if (subfragments_requests_queue_do_read) begin
			subfragments_requests_queue_level0 <= (subfragments_requests_queue_level0 - 1'd1);
		end
	end
	subfragments_fsm0_state0 <= subfragments_fsm0_next_state0;
	if (subfragments_syncfifo0_syncfifo0_re) begin
		subfragments_syncfifo0_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo0_re) begin
			subfragments_syncfifo0_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo0_syncfifo0_we & subfragments_syncfifo0_syncfifo0_writable) & (~subfragments_syncfifo0_replace))) begin
		subfragments_syncfifo0_produce <= (subfragments_syncfifo0_produce + 1'd1);
	end
	if (subfragments_syncfifo0_do_read) begin
		subfragments_syncfifo0_consume <= (subfragments_syncfifo0_consume + 1'd1);
	end
	if (((subfragments_syncfifo0_syncfifo0_we & subfragments_syncfifo0_syncfifo0_writable) & (~subfragments_syncfifo0_replace))) begin
		if ((~subfragments_syncfifo0_do_read)) begin
			subfragments_syncfifo0_level0 <= (subfragments_syncfifo0_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo0_do_read) begin
			subfragments_syncfifo0_level0 <= (subfragments_syncfifo0_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo1_syncfifo1_re) begin
		subfragments_syncfifo1_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo1_re) begin
			subfragments_syncfifo1_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo1_syncfifo1_we & subfragments_syncfifo1_syncfifo1_writable) & (~subfragments_syncfifo1_replace))) begin
		subfragments_syncfifo1_produce <= (subfragments_syncfifo1_produce + 1'd1);
	end
	if (subfragments_syncfifo1_do_read) begin
		subfragments_syncfifo1_consume <= (subfragments_syncfifo1_consume + 1'd1);
	end
	if (((subfragments_syncfifo1_syncfifo1_we & subfragments_syncfifo1_syncfifo1_writable) & (~subfragments_syncfifo1_replace))) begin
		if ((~subfragments_syncfifo1_do_read)) begin
			subfragments_syncfifo1_level0 <= (subfragments_syncfifo1_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo1_do_read) begin
			subfragments_syncfifo1_level0 <= (subfragments_syncfifo1_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo2_syncfifo2_re) begin
		subfragments_syncfifo2_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo2_re) begin
			subfragments_syncfifo2_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo2_syncfifo2_we & subfragments_syncfifo2_syncfifo2_writable) & (~subfragments_syncfifo2_replace))) begin
		subfragments_syncfifo2_produce <= (subfragments_syncfifo2_produce + 1'd1);
	end
	if (subfragments_syncfifo2_do_read) begin
		subfragments_syncfifo2_consume <= (subfragments_syncfifo2_consume + 1'd1);
	end
	if (((subfragments_syncfifo2_syncfifo2_we & subfragments_syncfifo2_syncfifo2_writable) & (~subfragments_syncfifo2_replace))) begin
		if ((~subfragments_syncfifo2_do_read)) begin
			subfragments_syncfifo2_level0 <= (subfragments_syncfifo2_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo2_do_read) begin
			subfragments_syncfifo2_level0 <= (subfragments_syncfifo2_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo3_syncfifo3_re) begin
		subfragments_syncfifo3_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo3_re) begin
			subfragments_syncfifo3_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo3_syncfifo3_we & subfragments_syncfifo3_syncfifo3_writable) & (~subfragments_syncfifo3_replace))) begin
		subfragments_syncfifo3_produce <= (subfragments_syncfifo3_produce + 1'd1);
	end
	if (subfragments_syncfifo3_do_read) begin
		subfragments_syncfifo3_consume <= (subfragments_syncfifo3_consume + 1'd1);
	end
	if (((subfragments_syncfifo3_syncfifo3_we & subfragments_syncfifo3_syncfifo3_writable) & (~subfragments_syncfifo3_replace))) begin
		if ((~subfragments_syncfifo3_do_read)) begin
			subfragments_syncfifo3_level0 <= (subfragments_syncfifo3_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo3_do_read) begin
			subfragments_syncfifo3_level0 <= (subfragments_syncfifo3_level0 - 1'd1);
		end
	end
	subfragments_fsm1_state0 <= subfragments_fsm1_next_state0;
	if (subfragments_fill_tag_litepciecrossbar_next_value_ce) begin
		subfragments_fill_tag <= subfragments_fill_tag_litepciecrossbar_next_value;
	end
	case (subfragments_arbiter0_grant)
		1'd0: begin
			if ((~subfragments_arbiter0_request[0])) begin
				if (subfragments_arbiter0_request[1]) begin
					subfragments_arbiter0_grant <= 1'd1;
				end else begin
					if (subfragments_arbiter0_request[2]) begin
						subfragments_arbiter0_grant <= 2'd2;
					end
				end
			end
		end
		1'd1: begin
			if ((~subfragments_arbiter0_request[1])) begin
				if (subfragments_arbiter0_request[2]) begin
					subfragments_arbiter0_grant <= 2'd2;
				end else begin
					if (subfragments_arbiter0_request[0]) begin
						subfragments_arbiter0_grant <= 1'd0;
					end
				end
			end
		end
		2'd2: begin
			if ((~subfragments_arbiter0_request[2])) begin
				if (subfragments_arbiter0_request[0]) begin
					subfragments_arbiter0_grant <= 1'd0;
				end else begin
					if (subfragments_arbiter0_request[1]) begin
						subfragments_arbiter0_grant <= 1'd1;
					end
				end
			end
		end
	endcase
	subfragments_arbiter0_status0_ongoing1 <= ((litepciedma0_litepciemasterinternalport1_sink_valid | subfragments_arbiter0_status0_ongoing1) & (~subfragments_arbiter0_status0_last));
	if (subfragments_arbiter0_status0_last) begin
		subfragments_arbiter0_status0_first <= 1'd1;
	end else begin
		if ((litepciedma0_litepciemasterinternalport1_sink_valid & litepciedma0_litepciemasterinternalport1_sink_ready)) begin
			subfragments_arbiter0_status0_first <= 1'd0;
		end
	end
	subfragments_arbiter0_status1_ongoing1 <= ((litepciedma1_litepciemasterinternalport3_sink_valid | subfragments_arbiter0_status1_ongoing1) & (~subfragments_arbiter0_status1_last));
	if (subfragments_arbiter0_status1_last) begin
		subfragments_arbiter0_status1_first <= 1'd1;
	end else begin
		if ((litepciedma1_litepciemasterinternalport3_sink_valid & litepciedma1_litepciemasterinternalport3_sink_ready)) begin
			subfragments_arbiter0_status1_first <= 1'd0;
		end
	end
	subfragments_arbiter0_status2_ongoing1 <= ((litepciedma2_litepciemasterinternalport5_sink_valid | subfragments_arbiter0_status2_ongoing1) & (~subfragments_arbiter0_status2_last));
	if (subfragments_arbiter0_status2_last) begin
		subfragments_arbiter0_status2_first <= 1'd1;
	end else begin
		if ((litepciedma2_litepciemasterinternalport5_sink_valid & litepciedma2_litepciemasterinternalport5_sink_ready)) begin
			subfragments_arbiter0_status2_first <= 1'd0;
		end
	end
	if (subfragments_dispatcher0_first) begin
		subfragments_dispatcher0_sel_ongoing <= subfragments_dispatcher0_sel0;
	end
	subfragments_dispatcher0_ongoing1 <= ((subfragments_master_in_source_valid | subfragments_dispatcher0_ongoing1) & (~subfragments_dispatcher0_last));
	if (subfragments_dispatcher0_last) begin
		subfragments_dispatcher0_first <= 1'd1;
	end else begin
		if ((subfragments_master_in_source_valid & subfragments_master_in_source_ready)) begin
			subfragments_dispatcher0_first <= 1'd0;
		end
	end
	case (subfragments_arbiter1_grant)
		1'd0: begin
			if ((~subfragments_arbiter1_request[0])) begin
				if (subfragments_arbiter1_request[1]) begin
					subfragments_arbiter1_grant <= 1'd1;
				end else begin
					if (subfragments_arbiter1_request[2]) begin
						subfragments_arbiter1_grant <= 2'd2;
					end
				end
			end
		end
		1'd1: begin
			if ((~subfragments_arbiter1_request[1])) begin
				if (subfragments_arbiter1_request[2]) begin
					subfragments_arbiter1_grant <= 2'd2;
				end else begin
					if (subfragments_arbiter1_request[0]) begin
						subfragments_arbiter1_grant <= 1'd0;
					end
				end
			end
		end
		2'd2: begin
			if ((~subfragments_arbiter1_request[2])) begin
				if (subfragments_arbiter1_request[0]) begin
					subfragments_arbiter1_grant <= 1'd0;
				end else begin
					if (subfragments_arbiter1_request[1]) begin
						subfragments_arbiter1_grant <= 1'd1;
					end
				end
			end
		end
	endcase
	subfragments_arbiter1_status3_ongoing1 <= ((litepciedma0_litepciemasterinternalport0_sink_valid | subfragments_arbiter1_status3_ongoing1) & (~subfragments_arbiter1_status3_last));
	if (subfragments_arbiter1_status3_last) begin
		subfragments_arbiter1_status3_first <= 1'd1;
	end else begin
		if ((litepciedma0_litepciemasterinternalport0_sink_valid & litepciedma0_litepciemasterinternalport0_sink_ready)) begin
			subfragments_arbiter1_status3_first <= 1'd0;
		end
	end
	subfragments_arbiter1_status4_ongoing1 <= ((litepciedma1_litepciemasterinternalport2_sink_valid | subfragments_arbiter1_status4_ongoing1) & (~subfragments_arbiter1_status4_last));
	if (subfragments_arbiter1_status4_last) begin
		subfragments_arbiter1_status4_first <= 1'd1;
	end else begin
		if ((litepciedma1_litepciemasterinternalport2_sink_valid & litepciedma1_litepciemasterinternalport2_sink_ready)) begin
			subfragments_arbiter1_status4_first <= 1'd0;
		end
	end
	subfragments_arbiter1_status5_ongoing1 <= ((litepciedma2_litepciemasterinternalport4_sink_valid | subfragments_arbiter1_status5_ongoing1) & (~subfragments_arbiter1_status5_last));
	if (subfragments_arbiter1_status5_last) begin
		subfragments_arbiter1_status5_first <= 1'd1;
	end else begin
		if ((litepciedma2_litepciemasterinternalport4_sink_valid & litepciedma2_litepciemasterinternalport4_sink_ready)) begin
			subfragments_arbiter1_status5_first <= 1'd0;
		end
	end
	if (subfragments_dispatcher1_first) begin
		subfragments_dispatcher1_sel_ongoing <= subfragments_dispatcher1_sel0;
	end
	subfragments_dispatcher1_ongoing1 <= ((subfragments_source_valid | subfragments_dispatcher1_ongoing1) & (~subfragments_dispatcher1_last));
	if (subfragments_dispatcher1_last) begin
		subfragments_dispatcher1_first <= 1'd1;
	end else begin
		if ((subfragments_source_valid & subfragments_source_ready)) begin
			subfragments_dispatcher1_first <= 1'd0;
		end
	end
	case (subfragments_arbiter2_grant)
		1'd0: begin
			if ((~subfragments_arbiter2_request[0])) begin
				if (subfragments_arbiter2_request[1]) begin
					subfragments_arbiter2_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~subfragments_arbiter2_request[1])) begin
				if (subfragments_arbiter2_request[0]) begin
					subfragments_arbiter2_grant <= 1'd0;
				end
			end
		end
	endcase
	subfragments_arbiter2_status6_ongoing1 <= ((subfragments_master_out_sink_valid | subfragments_arbiter2_status6_ongoing1) & (~subfragments_arbiter2_status6_last));
	if (subfragments_arbiter2_status6_last) begin
		subfragments_arbiter2_status6_first <= 1'd1;
	end else begin
		if ((subfragments_master_out_sink_valid & subfragments_master_out_sink_ready)) begin
			subfragments_arbiter2_status6_first <= 1'd0;
		end
	end
	subfragments_arbiter2_status7_ongoing1 <= ((subfragments_sink_valid | subfragments_arbiter2_status7_ongoing1) & (~subfragments_arbiter2_status7_last));
	if (subfragments_arbiter2_status7_last) begin
		subfragments_arbiter2_status7_first <= 1'd1;
	end else begin
		if ((subfragments_sink_valid & subfragments_sink_ready)) begin
			subfragments_arbiter2_status7_first <= 1'd0;
		end
	end
	wishbone_sel <= 4'd15;
	wishbone_adr <= (source_payload_adr[31:2] | 1'd0);
	if (1'd0) begin
		if (source_payload_adr[2]) begin
			wishbone_dat_w <= source_payload_dat[31:0];
		end else begin
			wishbone_dat_w <= source_payload_dat[127:32];
		end
	end else begin
		wishbone_dat_w <= source_payload_dat[31:0];
	end
	sink_first <= 1'd1;
	sink_last <= 1'd1;
	sink_payload_len <= 1'd1;
	sink_payload_err <= 1'd0;
	sink_payload_tag <= source_payload_tag;
	sink_payload_adr <= source_payload_adr;
	sink_payload_cmp_id <= pcie_phy_id;
	sink_payload_req_id <= source_payload_req_id;
	if (update_dat) begin
		sink_payload_dat <= wishbone_dat_r;
	end
	subfragments_state <= subfragments_next_state;
	if (litepciedma0_writer_counter_reset) begin
		litepciedma0_writer_counter <= 1'd0;
	end else begin
		if (litepciedma0_writer_counter_ce) begin
			litepciedma0_writer_counter <= (litepciedma0_writer_counter + 1'd1);
		end
	end
	if (((litepciedma0_litepciemasterinternalport0_sink_valid & litepciedma0_litepciemasterinternalport0_sink_first) & litepciedma0_litepciemasterinternalport0_sink_ready)) begin
		litepciedma0_writer_status <= litepciedma0_litepciemasterinternalport0_sink_payload_user_id;
	end
	litepciedma0_writer_request_ready <= ((litepciedma0_writer_bufferizeendpoints0_source_valid & (litepciedma0_writer_fifo_level1 >= litepciedma0_writer_bufferizeendpoints0_source_payload_length[23:4])) & litepciedma0_writer_allow_requests_storage);
	if (litepciedma0_writer_fifo_syncfifo0_re) begin
		litepciedma0_writer_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma0_writer_fifo_re) begin
			litepciedma0_writer_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma0_writer_fifo_syncfifo0_we & litepciedma0_writer_fifo_syncfifo0_writable) & (~litepciedma0_writer_fifo_replace))) begin
		litepciedma0_writer_fifo_produce <= (litepciedma0_writer_fifo_produce + 1'd1);
	end
	if (litepciedma0_writer_fifo_do_read) begin
		litepciedma0_writer_fifo_consume <= (litepciedma0_writer_fifo_consume + 1'd1);
	end
	if (((litepciedma0_writer_fifo_syncfifo0_we & litepciedma0_writer_fifo_syncfifo0_writable) & (~litepciedma0_writer_fifo_replace))) begin
		if ((~litepciedma0_writer_fifo_do_read)) begin
			litepciedma0_writer_fifo_level0 <= (litepciedma0_writer_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_writer_fifo_do_read) begin
			litepciedma0_writer_fifo_level0 <= (litepciedma0_writer_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma0_writer_resetinserter_reset0) begin
		litepciedma0_writer_fifo_readable <= 1'd0;
		litepciedma0_writer_fifo_level0 <= 8'd0;
		litepciedma0_writer_fifo_produce <= 7'd0;
		litepciedma0_writer_fifo_consume <= 7'd0;
	end
	if (litepciedma0_writer_table_loop_prog_n_storage) begin
		litepciedma0_writer_table_syncfifo0_sink_payload_address <= litepciedma0_writer_table_syncfifo0_source_payload_address;
		litepciedma0_writer_table_syncfifo0_sink_payload_length <= litepciedma0_writer_table_syncfifo0_source_payload_length;
		litepciedma0_writer_table_syncfifo0_sink_payload_control <= litepciedma0_writer_table_syncfifo0_source_payload_control;
		litepciedma0_writer_table_syncfifo0_sink_first <= litepciedma0_writer_table_syncfifo0_source_first;
		litepciedma0_writer_table_syncfifo0_sink_valid <= litepciedma0_writer_table_syncfifo0_source_ready;
	end else begin
		litepciedma0_writer_table_syncfifo0_sink_payload_address <= litepciedma0_writer_table_value_storage[31:0];
		litepciedma0_writer_table_syncfifo0_sink_payload_length <= litepciedma0_writer_table_value_storage[55:32];
		litepciedma0_writer_table_syncfifo0_sink_payload_control <= litepciedma0_writer_table_value_storage[63:56];
		litepciedma0_writer_table_syncfifo0_sink_first <= (~litepciedma0_writer_table_syncfifo0_source_valid);
		litepciedma0_writer_table_syncfifo0_sink_valid <= (litepciedma0_writer_table_we_r & litepciedma0_writer_table_we_re);
	end
	if ((litepciedma0_writer_table_flush_r & litepciedma0_writer_table_flush_re)) begin
		litepciedma0_writer_table_loop_index <= 1'd1;
		litepciedma0_writer_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma0_writer_table_source_source_valid & litepciedma0_writer_table_source_source_ready)) begin
			litepciedma0_writer_table_loop_status_status <= litepciedma0_writer_table_loop_index;
			litepciedma0_writer_table_loop_index <= (litepciedma0_writer_table_loop_index + 1'd1);
		end
	end
	if (((litepciedma0_writer_table_syncfifo0_syncfifo0_we & litepciedma0_writer_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_writer_table_syncfifo0_replace))) begin
		litepciedma0_writer_table_syncfifo0_produce <= (litepciedma0_writer_table_syncfifo0_produce + 1'd1);
	end
	if (litepciedma0_writer_table_syncfifo0_do_read) begin
		litepciedma0_writer_table_syncfifo0_consume <= (litepciedma0_writer_table_syncfifo0_consume + 1'd1);
	end
	if (((litepciedma0_writer_table_syncfifo0_syncfifo0_we & litepciedma0_writer_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_writer_table_syncfifo0_replace))) begin
		if ((~litepciedma0_writer_table_syncfifo0_do_read)) begin
			litepciedma0_writer_table_syncfifo0_level <= (litepciedma0_writer_table_syncfifo0_level + 1'd1);
		end
	end else begin
		if (litepciedma0_writer_table_syncfifo0_do_read) begin
			litepciedma0_writer_table_syncfifo0_level <= (litepciedma0_writer_table_syncfifo0_level - 1'd1);
		end
	end
	if (litepciedma0_writer_table_reset) begin
		litepciedma0_writer_table_syncfifo0_level <= 9'd0;
		litepciedma0_writer_table_syncfifo0_produce <= 8'd0;
		litepciedma0_writer_table_syncfifo0_consume <= 8'd0;
	end
	if (litepciedma0_writer_splitter_offset_reset) begin
		litepciedma0_writer_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma0_writer_splitter_offset_ce) begin
			litepciedma0_writer_splitter_offset <= (litepciedma0_writer_splitter_offset + pcie_phy_max_payload_size);
		end
	end
	if (litepciedma0_writer_splitter_user_id_ce) begin
		litepciedma0_writer_splitter_user_id <= (litepciedma0_writer_splitter_user_id + 1'd1);
	end
	if (litepciedma0_writer_splitter_length_update) begin
		litepciedma0_writer_splitter_length <= litepciedma0_writer_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints0_state0 <= subfragments_bufferizeendpoints0_next_state0;
	if (litepciedma0_writer_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_writer_bufferizeendpoints0_valid_n <= litepciedma0_writer_bufferizeendpoints0_sink_valid;
	end
	if (litepciedma0_writer_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_writer_bufferizeendpoints0_first_n <= (litepciedma0_writer_bufferizeendpoints0_sink_valid & litepciedma0_writer_bufferizeendpoints0_sink_first);
		litepciedma0_writer_bufferizeendpoints0_last_n <= (litepciedma0_writer_bufferizeendpoints0_sink_valid & litepciedma0_writer_bufferizeendpoints0_sink_last);
	end
	if (litepciedma0_writer_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_writer_bufferizeendpoints0_source_payload_address <= litepciedma0_writer_bufferizeendpoints0_sink_payload_address;
		litepciedma0_writer_bufferizeendpoints0_source_payload_length <= litepciedma0_writer_bufferizeendpoints0_sink_payload_length;
		litepciedma0_writer_bufferizeendpoints0_source_payload_control <= litepciedma0_writer_bufferizeendpoints0_sink_payload_control;
		litepciedma0_writer_bufferizeendpoints0_source_payload_user_id <= litepciedma0_writer_bufferizeendpoints0_sink_payload_user_id;
	end
	if (litepciedma0_writer_resetinserter_reset1) begin
		litepciedma0_writer_splitter_offset <= 32'd0;
		litepciedma0_writer_splitter_user_id <= 32'd0;
		litepciedma0_writer_splitter_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_last_n <= 1'd0;
		subfragments_bufferizeendpoints0_state0 <= 2'd0;
	end
	subfragments_fsm0_state1 <= subfragments_fsm0_next_state1;
	litepciedma0_reader_status <= litepciedma0_reader_req_pck_cnt;
	if (((litepciedma0_reader_request_cnt == litepciedma0_reader_requests_per_pckt) & litepciedma0_reader_request_counted)) begin
		litepciedma0_reader_req_pck_cnt <= (litepciedma0_reader_req_pck_cnt + 1'd1);
		litepciedma0_reader_request_counted <= 1'd0;
	end
	if (((((litepciedma0_reader_req_pck_cnt + 1'd1) == litepciedma0_reader_packet_nr_storage) & ((litepciedma0_reader_request_cnt + 1'd1) == litepciedma0_reader_requests_per_pckt)) & litepciedma0_reader_request_ready)) begin
		litepciedma0_reader_allow_request <= 1'd0;
	end else begin
		if (((litepciedma0_reader_req_pck_cnt + 1'd1) != litepciedma0_reader_packet_nr_storage)) begin
			litepciedma0_reader_allow_request <= 1'd1;
		end else begin
			litepciedma0_reader_allow_request <= litepciedma0_reader_allow_request;
		end
	end
	if ((~litepciedma0_reader_enable_storage)) begin
		litepciedma0_reader_req_pck_cnt <= 1'd0;
		litepciedma0_reader_request_cnt <= 1'd0;
	end
	litepciedma0_reader_flush_nbytes_we <= 1'd0;
	if ((litepciedma0_litepciemasterinternalport1_source_valid & litepciedma0_reader_fifo_sink_ready)) begin
		litepciedma0_reader_sent_cnt <= (litepciedma0_reader_sent_cnt + 5'd16);
		if (((litepciedma0_reader_flush_nr_storage == litepciedma0_reader_sent_pck_cnt) & (litepciedma0_reader_flush_nbytes_storage != 1'd0))) begin
			if ((litepciedma0_reader_flush_nbytes_storage > (litepciedma0_reader_sent_cnt + 5'd16))) begin
				litepciedma0_reader_flush <= 1'd0;
			end else begin
				if (((litepciedma0_reader_sent_cnt + 5'd16) == litepciedma0_reader_table_value_storage[63:32])) begin
					litepciedma0_reader_flush <= 1'd0;
				end else begin
					litepciedma0_reader_flush <= 1'd1;
				end
			end
			if (((litepciedma0_reader_sent_cnt + 5'd16) == litepciedma0_reader_table_value_storage[63:32])) begin
				litepciedma0_reader_flush_nbytes_dat_w <= 1'd0;
				litepciedma0_reader_flush_nbytes_we <= 1'd1;
			end
		end else begin
			litepciedma0_reader_flush <= 1'd0;
		end
		if (((litepciedma0_reader_sent_cnt + 5'd16) == litepciedma0_reader_table_value_storage[63:32])) begin
			litepciedma0_reader_sent_pck_cnt <= (litepciedma0_reader_sent_pck_cnt + 1'd1);
			litepciedma0_reader_sent_cnt <= 1'd0;
		end
	end
	if ((~litepciedma0_reader_enable_storage)) begin
		litepciedma0_reader_sent_cnt <= 1'd0;
		litepciedma0_reader_sent_pck_cnt <= 1'd1;
	end
	if (((litepciedma0_litepciemasterinternalport1_source_valid & litepciedma0_litepciemasterinternalport1_source_first) & litepciedma0_litepciemasterinternalport1_source_ready)) begin
		litepciedma0_reader_last_user_id <= litepciedma0_litepciemasterinternalport1_source_payload_user_id;
	end
	if ((((litepciedma0_reader_packet_nr_storage != litepciedma0_reader_req_pck_cnt) & litepciedma0_reader_table_loop_prog_n_storage) & litepciedma0_reader_allow_request)) begin
		litepciedma0_reader_request_ready <= (litepciedma0_reader_bufferizeendpoints0_source_valid & (litepciedma0_reader_fifo_level1 < 8'd128));
	end else begin
		litepciedma0_reader_request_ready <= 1'd0;
	end
	if ((litepciedma0_reader_fifo_sink_valid & litepciedma0_reader_fifo_sink_ready)) begin
		litepciedma0_reader_sent_dbg <= (litepciedma0_reader_sent_dbg + 1'd1);
		if ((litepciedma0_reader_sent_dbg != litepciedma0_reader_fifo_sink_payload_data[63:0])) begin
			litepciedma0_reader_bad_fifo_write <= 1'd1;
		end
	end else begin
		if ((~litepciedma0_reader_enable_storage)) begin
			litepciedma0_reader_sent_dbg <= 1'd0;
			litepciedma0_reader_bad_fifo_write <= 1'd0;
		end
	end
	if (litepciedma0_reader_table_loop_prog_n_storage) begin
		litepciedma0_reader_table_syncfifo0_sink_payload_address <= litepciedma0_reader_table_syncfifo0_source_payload_address;
		litepciedma0_reader_table_syncfifo0_sink_payload_length <= litepciedma0_reader_table_syncfifo0_source_payload_length;
		litepciedma0_reader_table_syncfifo0_sink_payload_control <= litepciedma0_reader_table_syncfifo0_source_payload_control;
		litepciedma0_reader_table_syncfifo0_sink_first <= litepciedma0_reader_table_syncfifo0_source_first;
		litepciedma0_reader_table_syncfifo0_sink_valid <= litepciedma0_reader_table_syncfifo0_source_ready;
	end else begin
		litepciedma0_reader_table_syncfifo0_sink_payload_address <= litepciedma0_reader_table_value_storage[31:0];
		litepciedma0_reader_table_syncfifo0_sink_payload_length <= litepciedma0_reader_table_value_storage[55:32];
		litepciedma0_reader_table_syncfifo0_sink_payload_control <= litepciedma0_reader_table_value_storage[63:56];
		litepciedma0_reader_table_syncfifo0_sink_first <= (~litepciedma0_reader_table_syncfifo0_source_valid);
		litepciedma0_reader_table_syncfifo0_sink_valid <= (litepciedma0_reader_table_we_r & litepciedma0_reader_table_we_re);
	end
	if ((litepciedma0_reader_table_flush_r & litepciedma0_reader_table_flush_re)) begin
		litepciedma0_reader_table_loop_index <= 1'd1;
		litepciedma0_reader_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma0_reader_table_source_source_valid & litepciedma0_reader_table_source_source_ready)) begin
			litepciedma0_reader_table_loop_status_status <= litepciedma0_reader_table_loop_index;
			litepciedma0_reader_table_loop_index <= (litepciedma0_reader_table_loop_index + 1'd1);
		end
	end
	if (((litepciedma0_reader_table_syncfifo0_syncfifo0_we & litepciedma0_reader_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_reader_table_syncfifo0_replace))) begin
		litepciedma0_reader_table_syncfifo0_produce <= (litepciedma0_reader_table_syncfifo0_produce + 1'd1);
	end
	if (litepciedma0_reader_table_syncfifo0_do_read) begin
		litepciedma0_reader_table_syncfifo0_consume <= (litepciedma0_reader_table_syncfifo0_consume + 1'd1);
	end
	if (((litepciedma0_reader_table_syncfifo0_syncfifo0_we & litepciedma0_reader_table_syncfifo0_syncfifo0_writable) & (~litepciedma0_reader_table_syncfifo0_replace))) begin
		if ((~litepciedma0_reader_table_syncfifo0_do_read)) begin
			litepciedma0_reader_table_syncfifo0_level <= (litepciedma0_reader_table_syncfifo0_level + 1'd1);
		end
	end else begin
		if (litepciedma0_reader_table_syncfifo0_do_read) begin
			litepciedma0_reader_table_syncfifo0_level <= (litepciedma0_reader_table_syncfifo0_level - 1'd1);
		end
	end
	if (litepciedma0_reader_table_reset) begin
		litepciedma0_reader_table_syncfifo0_level <= 9'd0;
		litepciedma0_reader_table_syncfifo0_produce <= 8'd0;
		litepciedma0_reader_table_syncfifo0_consume <= 8'd0;
	end
	if (litepciedma0_reader_splitter_offset_reset) begin
		litepciedma0_reader_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma0_reader_splitter_offset_ce) begin
			litepciedma0_reader_splitter_offset <= (litepciedma0_reader_splitter_offset + 10'd512);
		end
	end
	if (litepciedma0_reader_splitter_user_id_ce) begin
		litepciedma0_reader_splitter_user_id <= (litepciedma0_reader_splitter_user_id + 1'd1);
	end
	if (litepciedma0_reader_splitter_length_update) begin
		litepciedma0_reader_splitter_length <= litepciedma0_reader_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints0_state1 <= subfragments_bufferizeendpoints0_next_state1;
	if (litepciedma0_reader_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_reader_bufferizeendpoints0_valid_n <= litepciedma0_reader_bufferizeendpoints0_sink_valid;
	end
	if (litepciedma0_reader_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_reader_bufferizeendpoints0_first_n <= (litepciedma0_reader_bufferizeendpoints0_sink_valid & litepciedma0_reader_bufferizeendpoints0_sink_first);
		litepciedma0_reader_bufferizeendpoints0_last_n <= (litepciedma0_reader_bufferizeendpoints0_sink_valid & litepciedma0_reader_bufferizeendpoints0_sink_last);
	end
	if (litepciedma0_reader_bufferizeendpoints0_pipe_ce) begin
		litepciedma0_reader_bufferizeendpoints0_source_payload_address <= litepciedma0_reader_bufferizeendpoints0_sink_payload_address;
		litepciedma0_reader_bufferizeendpoints0_source_payload_length <= litepciedma0_reader_bufferizeendpoints0_sink_payload_length;
		litepciedma0_reader_bufferizeendpoints0_source_payload_control <= litepciedma0_reader_bufferizeendpoints0_sink_payload_control;
		litepciedma0_reader_bufferizeendpoints0_source_payload_user_id <= litepciedma0_reader_bufferizeendpoints0_sink_payload_user_id;
	end
	if (litepciedma0_reader_resetinserter_reset0) begin
		litepciedma0_reader_splitter_offset <= 32'd0;
		litepciedma0_reader_splitter_user_id <= 32'd0;
		litepciedma0_reader_splitter_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_last_n <= 1'd0;
		subfragments_bufferizeendpoints0_state1 <= 2'd0;
	end
	subfragments_fsm0_state2 <= subfragments_fsm0_next_state2;
	if (litepciedma0_reader_request_cnt_litepciedma0_next_value_ce0) begin
		litepciedma0_reader_request_cnt <= litepciedma0_reader_request_cnt_litepciedma0_next_value0;
	end
	if (litepciedma0_reader_request_counted_litepciedma0_next_value_ce1) begin
		litepciedma0_reader_request_counted <= litepciedma0_reader_request_counted_litepciedma0_next_value1;
	end
	if (litepciedma0_reader_fifo_syncfifo0_re) begin
		litepciedma0_reader_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma0_reader_fifo_re) begin
			litepciedma0_reader_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma0_reader_fifo_syncfifo0_we & litepciedma0_reader_fifo_syncfifo0_writable) & (~litepciedma0_reader_fifo_replace))) begin
		litepciedma0_reader_fifo_produce <= (litepciedma0_reader_fifo_produce + 1'd1);
	end
	if (litepciedma0_reader_fifo_do_read) begin
		litepciedma0_reader_fifo_consume <= (litepciedma0_reader_fifo_consume + 1'd1);
	end
	if (((litepciedma0_reader_fifo_syncfifo0_we & litepciedma0_reader_fifo_syncfifo0_writable) & (~litepciedma0_reader_fifo_replace))) begin
		if ((~litepciedma0_reader_fifo_do_read)) begin
			litepciedma0_reader_fifo_level0 <= (litepciedma0_reader_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_reader_fifo_do_read) begin
			litepciedma0_reader_fifo_level0 <= (litepciedma0_reader_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma0_reader_resetinserter_reset1) begin
		litepciedma0_reader_fifo_readable <= 1'd0;
		litepciedma0_reader_fifo_level0 <= 9'd0;
		litepciedma0_reader_fifo_produce <= 8'd0;
		litepciedma0_reader_fifo_consume <= 8'd0;
	end
	if (litepciedma0_syncfifo0_syncfifo0_re) begin
		litepciedma0_syncfifo0_readable <= 1'd1;
	end else begin
		if (litepciedma0_syncfifo0_re) begin
			litepciedma0_syncfifo0_readable <= 1'd0;
		end
	end
	if (((litepciedma0_syncfifo0_syncfifo0_we & litepciedma0_syncfifo0_syncfifo0_writable) & (~litepciedma0_syncfifo0_replace))) begin
		if ((litepciedma0_syncfifo0_produce == 10'd767)) begin
			litepciedma0_syncfifo0_produce <= 1'd0;
		end else begin
			litepciedma0_syncfifo0_produce <= (litepciedma0_syncfifo0_produce + 1'd1);
		end
	end
	if (litepciedma0_syncfifo0_do_read) begin
		if ((litepciedma0_syncfifo0_consume == 10'd767)) begin
			litepciedma0_syncfifo0_consume <= 1'd0;
		end else begin
			litepciedma0_syncfifo0_consume <= (litepciedma0_syncfifo0_consume + 1'd1);
		end
	end
	if (((litepciedma0_syncfifo0_syncfifo0_we & litepciedma0_syncfifo0_syncfifo0_writable) & (~litepciedma0_syncfifo0_replace))) begin
		if ((~litepciedma0_syncfifo0_do_read)) begin
			litepciedma0_syncfifo0_level0 <= (litepciedma0_syncfifo0_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_syncfifo0_do_read) begin
			litepciedma0_syncfifo0_level0 <= (litepciedma0_syncfifo0_level0 - 1'd1);
		end
	end
	if (litepciedma0_reader_fifo_reset) begin
		litepciedma0_syncfifo0_readable <= 1'd0;
		litepciedma0_syncfifo0_level0 <= 10'd0;
		litepciedma0_syncfifo0_produce <= 10'd0;
		litepciedma0_syncfifo0_consume <= 10'd0;
	end
	if (litepciedma0_syncfifo1_syncfifo1_re) begin
		litepciedma0_syncfifo1_readable <= 1'd1;
	end else begin
		if (litepciedma0_syncfifo1_re) begin
			litepciedma0_syncfifo1_readable <= 1'd0;
		end
	end
	if (((litepciedma0_syncfifo1_syncfifo1_we & litepciedma0_syncfifo1_syncfifo1_writable) & (~litepciedma0_syncfifo1_replace))) begin
		if ((litepciedma0_syncfifo1_produce == 10'd767)) begin
			litepciedma0_syncfifo1_produce <= 1'd0;
		end else begin
			litepciedma0_syncfifo1_produce <= (litepciedma0_syncfifo1_produce + 1'd1);
		end
	end
	if (litepciedma0_syncfifo1_do_read) begin
		if ((litepciedma0_syncfifo1_consume == 10'd767)) begin
			litepciedma0_syncfifo1_consume <= 1'd0;
		end else begin
			litepciedma0_syncfifo1_consume <= (litepciedma0_syncfifo1_consume + 1'd1);
		end
	end
	if (((litepciedma0_syncfifo1_syncfifo1_we & litepciedma0_syncfifo1_syncfifo1_writable) & (~litepciedma0_syncfifo1_replace))) begin
		if ((~litepciedma0_syncfifo1_do_read)) begin
			litepciedma0_syncfifo1_level0 <= (litepciedma0_syncfifo1_level0 + 1'd1);
		end
	end else begin
		if (litepciedma0_syncfifo1_do_read) begin
			litepciedma0_syncfifo1_level0 <= (litepciedma0_syncfifo1_level0 - 1'd1);
		end
	end
	if (litepciedma0_writer_fifo_reset) begin
		litepciedma0_syncfifo1_readable <= 1'd0;
		litepciedma0_syncfifo1_level0 <= 10'd0;
		litepciedma0_syncfifo1_produce <= 10'd0;
		litepciedma0_syncfifo1_consume <= 10'd0;
	end
	if (litepciedma1_writer_counter_reset) begin
		litepciedma1_writer_counter <= 1'd0;
	end else begin
		if (litepciedma1_writer_counter_ce) begin
			litepciedma1_writer_counter <= (litepciedma1_writer_counter + 1'd1);
		end
	end
	if (((litepciedma1_litepciemasterinternalport2_sink_valid & litepciedma1_litepciemasterinternalport2_sink_first) & litepciedma1_litepciemasterinternalport2_sink_ready)) begin
		litepciedma1_writer_status <= litepciedma1_litepciemasterinternalport2_sink_payload_user_id;
	end
	litepciedma1_writer_request_ready <= ((litepciedma1_writer_bufferizeendpoints1_source_valid & (litepciedma1_writer_fifo_level1 >= litepciedma1_writer_bufferizeendpoints1_source_payload_length[23:4])) & litepciedma1_writer_allow_requests_storage);
	if (litepciedma1_writer_fifo_syncfifo1_re) begin
		litepciedma1_writer_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma1_writer_fifo_re) begin
			litepciedma1_writer_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma1_writer_fifo_syncfifo1_we & litepciedma1_writer_fifo_syncfifo1_writable) & (~litepciedma1_writer_fifo_replace))) begin
		litepciedma1_writer_fifo_produce <= (litepciedma1_writer_fifo_produce + 1'd1);
	end
	if (litepciedma1_writer_fifo_do_read) begin
		litepciedma1_writer_fifo_consume <= (litepciedma1_writer_fifo_consume + 1'd1);
	end
	if (((litepciedma1_writer_fifo_syncfifo1_we & litepciedma1_writer_fifo_syncfifo1_writable) & (~litepciedma1_writer_fifo_replace))) begin
		if ((~litepciedma1_writer_fifo_do_read)) begin
			litepciedma1_writer_fifo_level0 <= (litepciedma1_writer_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_writer_fifo_do_read) begin
			litepciedma1_writer_fifo_level0 <= (litepciedma1_writer_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma1_writer_resetinserter_reset0) begin
		litepciedma1_writer_fifo_readable <= 1'd0;
		litepciedma1_writer_fifo_level0 <= 8'd0;
		litepciedma1_writer_fifo_produce <= 7'd0;
		litepciedma1_writer_fifo_consume <= 7'd0;
	end
	if (litepciedma1_writer_table_loop_prog_n_storage) begin
		litepciedma1_writer_table_syncfifo1_sink_payload_address <= litepciedma1_writer_table_syncfifo1_source_payload_address;
		litepciedma1_writer_table_syncfifo1_sink_payload_length <= litepciedma1_writer_table_syncfifo1_source_payload_length;
		litepciedma1_writer_table_syncfifo1_sink_payload_control <= litepciedma1_writer_table_syncfifo1_source_payload_control;
		litepciedma1_writer_table_syncfifo1_sink_first <= litepciedma1_writer_table_syncfifo1_source_first;
		litepciedma1_writer_table_syncfifo1_sink_valid <= litepciedma1_writer_table_syncfifo1_source_ready;
	end else begin
		litepciedma1_writer_table_syncfifo1_sink_payload_address <= litepciedma1_writer_table_value_storage[31:0];
		litepciedma1_writer_table_syncfifo1_sink_payload_length <= litepciedma1_writer_table_value_storage[55:32];
		litepciedma1_writer_table_syncfifo1_sink_payload_control <= litepciedma1_writer_table_value_storage[63:56];
		litepciedma1_writer_table_syncfifo1_sink_first <= (~litepciedma1_writer_table_syncfifo1_source_valid);
		litepciedma1_writer_table_syncfifo1_sink_valid <= (litepciedma1_writer_table_we_r & litepciedma1_writer_table_we_re);
	end
	if ((litepciedma1_writer_table_flush_r & litepciedma1_writer_table_flush_re)) begin
		litepciedma1_writer_table_loop_index <= 1'd1;
		litepciedma1_writer_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma1_writer_table_source_source_valid & litepciedma1_writer_table_source_source_ready)) begin
			litepciedma1_writer_table_loop_status_status <= litepciedma1_writer_table_loop_index;
			litepciedma1_writer_table_loop_index <= (litepciedma1_writer_table_loop_index + 1'd1);
		end
	end
	if (((litepciedma1_writer_table_syncfifo1_syncfifo1_we & litepciedma1_writer_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_writer_table_syncfifo1_replace))) begin
		litepciedma1_writer_table_syncfifo1_produce <= (litepciedma1_writer_table_syncfifo1_produce + 1'd1);
	end
	if (litepciedma1_writer_table_syncfifo1_do_read) begin
		litepciedma1_writer_table_syncfifo1_consume <= (litepciedma1_writer_table_syncfifo1_consume + 1'd1);
	end
	if (((litepciedma1_writer_table_syncfifo1_syncfifo1_we & litepciedma1_writer_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_writer_table_syncfifo1_replace))) begin
		if ((~litepciedma1_writer_table_syncfifo1_do_read)) begin
			litepciedma1_writer_table_syncfifo1_level <= (litepciedma1_writer_table_syncfifo1_level + 1'd1);
		end
	end else begin
		if (litepciedma1_writer_table_syncfifo1_do_read) begin
			litepciedma1_writer_table_syncfifo1_level <= (litepciedma1_writer_table_syncfifo1_level - 1'd1);
		end
	end
	if (litepciedma1_writer_table_reset) begin
		litepciedma1_writer_table_syncfifo1_level <= 9'd0;
		litepciedma1_writer_table_syncfifo1_produce <= 8'd0;
		litepciedma1_writer_table_syncfifo1_consume <= 8'd0;
	end
	if (litepciedma1_writer_splitter_offset_reset) begin
		litepciedma1_writer_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma1_writer_splitter_offset_ce) begin
			litepciedma1_writer_splitter_offset <= (litepciedma1_writer_splitter_offset + pcie_phy_max_payload_size);
		end
	end
	if (litepciedma1_writer_splitter_user_id_ce) begin
		litepciedma1_writer_splitter_user_id <= (litepciedma1_writer_splitter_user_id + 1'd1);
	end
	if (litepciedma1_writer_splitter_length_update) begin
		litepciedma1_writer_splitter_length <= litepciedma1_writer_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints1_state0 <= subfragments_bufferizeendpoints1_next_state0;
	if (litepciedma1_writer_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_writer_bufferizeendpoints1_valid_n <= litepciedma1_writer_bufferizeendpoints1_sink_valid;
	end
	if (litepciedma1_writer_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_writer_bufferizeendpoints1_first_n <= (litepciedma1_writer_bufferizeendpoints1_sink_valid & litepciedma1_writer_bufferizeendpoints1_sink_first);
		litepciedma1_writer_bufferizeendpoints1_last_n <= (litepciedma1_writer_bufferizeendpoints1_sink_valid & litepciedma1_writer_bufferizeendpoints1_sink_last);
	end
	if (litepciedma1_writer_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_writer_bufferizeendpoints1_source_payload_address <= litepciedma1_writer_bufferizeendpoints1_sink_payload_address;
		litepciedma1_writer_bufferizeendpoints1_source_payload_length <= litepciedma1_writer_bufferizeendpoints1_sink_payload_length;
		litepciedma1_writer_bufferizeendpoints1_source_payload_control <= litepciedma1_writer_bufferizeendpoints1_sink_payload_control;
		litepciedma1_writer_bufferizeendpoints1_source_payload_user_id <= litepciedma1_writer_bufferizeendpoints1_sink_payload_user_id;
	end
	if (litepciedma1_writer_resetinserter_reset1) begin
		litepciedma1_writer_splitter_offset <= 32'd0;
		litepciedma1_writer_splitter_user_id <= 32'd0;
		litepciedma1_writer_splitter_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_last_n <= 1'd0;
		subfragments_bufferizeendpoints1_state0 <= 2'd0;
	end
	subfragments_fsm1_state1 <= subfragments_fsm1_next_state1;
	litepciedma1_reader_status <= litepciedma1_reader_req_pck_cnt;
	if (((litepciedma1_reader_request_cnt == litepciedma1_reader_requests_per_pckt) & litepciedma1_reader_request_counted)) begin
		litepciedma1_reader_req_pck_cnt <= (litepciedma1_reader_req_pck_cnt + 1'd1);
		litepciedma1_reader_request_counted <= 1'd0;
	end
	if (((((litepciedma1_reader_req_pck_cnt + 1'd1) == litepciedma1_reader_packet_nr_storage) & ((litepciedma1_reader_request_cnt + 1'd1) == litepciedma1_reader_requests_per_pckt)) & litepciedma1_reader_request_ready)) begin
		litepciedma1_reader_allow_request <= 1'd0;
	end else begin
		if (((litepciedma1_reader_req_pck_cnt + 1'd1) != litepciedma1_reader_packet_nr_storage)) begin
			litepciedma1_reader_allow_request <= 1'd1;
		end else begin
			litepciedma1_reader_allow_request <= litepciedma1_reader_allow_request;
		end
	end
	if ((~litepciedma1_reader_enable_storage)) begin
		litepciedma1_reader_req_pck_cnt <= 1'd0;
		litepciedma1_reader_request_cnt <= 1'd0;
	end
	litepciedma1_reader_flush_nbytes_we <= 1'd0;
	if ((litepciedma1_litepciemasterinternalport3_source_valid & litepciedma1_reader_fifo_sink_ready)) begin
		litepciedma1_reader_sent_cnt <= (litepciedma1_reader_sent_cnt + 5'd16);
		if (((litepciedma1_reader_flush_nr_storage == litepciedma1_reader_sent_pck_cnt) & (litepciedma1_reader_flush_nbytes_storage != 1'd0))) begin
			if ((litepciedma1_reader_flush_nbytes_storage > (litepciedma1_reader_sent_cnt + 5'd16))) begin
				litepciedma1_reader_flush <= 1'd0;
			end else begin
				if (((litepciedma1_reader_sent_cnt + 5'd16) == litepciedma1_reader_table_value_storage[63:32])) begin
					litepciedma1_reader_flush <= 1'd0;
				end else begin
					litepciedma1_reader_flush <= 1'd1;
				end
			end
			if (((litepciedma1_reader_sent_cnt + 5'd16) == litepciedma1_reader_table_value_storage[63:32])) begin
				litepciedma1_reader_flush_nbytes_dat_w <= 1'd0;
				litepciedma1_reader_flush_nbytes_we <= 1'd1;
			end
		end else begin
			litepciedma1_reader_flush <= 1'd0;
		end
		if (((litepciedma1_reader_sent_cnt + 5'd16) == litepciedma1_reader_table_value_storage[63:32])) begin
			litepciedma1_reader_sent_pck_cnt <= (litepciedma1_reader_sent_pck_cnt + 1'd1);
			litepciedma1_reader_sent_cnt <= 1'd0;
		end
	end
	if ((~litepciedma1_reader_enable_storage)) begin
		litepciedma1_reader_sent_cnt <= 1'd0;
		litepciedma1_reader_sent_pck_cnt <= 1'd1;
	end
	if (((litepciedma1_litepciemasterinternalport3_source_valid & litepciedma1_litepciemasterinternalport3_source_first) & litepciedma1_litepciemasterinternalport3_source_ready)) begin
		litepciedma1_reader_last_user_id <= litepciedma1_litepciemasterinternalport3_source_payload_user_id;
	end
	if ((((litepciedma1_reader_packet_nr_storage != litepciedma1_reader_req_pck_cnt) & litepciedma1_reader_table_loop_prog_n_storage) & litepciedma1_reader_allow_request)) begin
		litepciedma1_reader_request_ready <= (litepciedma1_reader_bufferizeendpoints1_source_valid & (litepciedma1_reader_fifo_level1 < 8'd128));
	end else begin
		litepciedma1_reader_request_ready <= 1'd0;
	end
	if ((litepciedma1_reader_fifo_sink_valid & litepciedma1_reader_fifo_sink_ready)) begin
		litepciedma1_reader_sent_dbg <= (litepciedma1_reader_sent_dbg + 1'd1);
		if ((litepciedma1_reader_sent_dbg != litepciedma1_reader_fifo_sink_payload_data[63:0])) begin
			litepciedma1_reader_bad_fifo_write <= 1'd1;
		end
	end else begin
		if ((~litepciedma1_reader_enable_storage)) begin
			litepciedma1_reader_sent_dbg <= 1'd0;
			litepciedma1_reader_bad_fifo_write <= 1'd0;
		end
	end
	if (litepciedma1_reader_table_loop_prog_n_storage) begin
		litepciedma1_reader_table_syncfifo1_sink_payload_address <= litepciedma1_reader_table_syncfifo1_source_payload_address;
		litepciedma1_reader_table_syncfifo1_sink_payload_length <= litepciedma1_reader_table_syncfifo1_source_payload_length;
		litepciedma1_reader_table_syncfifo1_sink_payload_control <= litepciedma1_reader_table_syncfifo1_source_payload_control;
		litepciedma1_reader_table_syncfifo1_sink_first <= litepciedma1_reader_table_syncfifo1_source_first;
		litepciedma1_reader_table_syncfifo1_sink_valid <= litepciedma1_reader_table_syncfifo1_source_ready;
	end else begin
		litepciedma1_reader_table_syncfifo1_sink_payload_address <= litepciedma1_reader_table_value_storage[31:0];
		litepciedma1_reader_table_syncfifo1_sink_payload_length <= litepciedma1_reader_table_value_storage[55:32];
		litepciedma1_reader_table_syncfifo1_sink_payload_control <= litepciedma1_reader_table_value_storage[63:56];
		litepciedma1_reader_table_syncfifo1_sink_first <= (~litepciedma1_reader_table_syncfifo1_source_valid);
		litepciedma1_reader_table_syncfifo1_sink_valid <= (litepciedma1_reader_table_we_r & litepciedma1_reader_table_we_re);
	end
	if ((litepciedma1_reader_table_flush_r & litepciedma1_reader_table_flush_re)) begin
		litepciedma1_reader_table_loop_index <= 1'd1;
		litepciedma1_reader_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma1_reader_table_source_source_valid & litepciedma1_reader_table_source_source_ready)) begin
			litepciedma1_reader_table_loop_status_status <= litepciedma1_reader_table_loop_index;
			litepciedma1_reader_table_loop_index <= (litepciedma1_reader_table_loop_index + 1'd1);
		end
	end
	if (((litepciedma1_reader_table_syncfifo1_syncfifo1_we & litepciedma1_reader_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_reader_table_syncfifo1_replace))) begin
		litepciedma1_reader_table_syncfifo1_produce <= (litepciedma1_reader_table_syncfifo1_produce + 1'd1);
	end
	if (litepciedma1_reader_table_syncfifo1_do_read) begin
		litepciedma1_reader_table_syncfifo1_consume <= (litepciedma1_reader_table_syncfifo1_consume + 1'd1);
	end
	if (((litepciedma1_reader_table_syncfifo1_syncfifo1_we & litepciedma1_reader_table_syncfifo1_syncfifo1_writable) & (~litepciedma1_reader_table_syncfifo1_replace))) begin
		if ((~litepciedma1_reader_table_syncfifo1_do_read)) begin
			litepciedma1_reader_table_syncfifo1_level <= (litepciedma1_reader_table_syncfifo1_level + 1'd1);
		end
	end else begin
		if (litepciedma1_reader_table_syncfifo1_do_read) begin
			litepciedma1_reader_table_syncfifo1_level <= (litepciedma1_reader_table_syncfifo1_level - 1'd1);
		end
	end
	if (litepciedma1_reader_table_reset) begin
		litepciedma1_reader_table_syncfifo1_level <= 9'd0;
		litepciedma1_reader_table_syncfifo1_produce <= 8'd0;
		litepciedma1_reader_table_syncfifo1_consume <= 8'd0;
	end
	if (litepciedma1_reader_splitter_offset_reset) begin
		litepciedma1_reader_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma1_reader_splitter_offset_ce) begin
			litepciedma1_reader_splitter_offset <= (litepciedma1_reader_splitter_offset + 10'd512);
		end
	end
	if (litepciedma1_reader_splitter_user_id_ce) begin
		litepciedma1_reader_splitter_user_id <= (litepciedma1_reader_splitter_user_id + 1'd1);
	end
	if (litepciedma1_reader_splitter_length_update) begin
		litepciedma1_reader_splitter_length <= litepciedma1_reader_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints1_state1 <= subfragments_bufferizeendpoints1_next_state1;
	if (litepciedma1_reader_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_reader_bufferizeendpoints1_valid_n <= litepciedma1_reader_bufferizeendpoints1_sink_valid;
	end
	if (litepciedma1_reader_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_reader_bufferizeendpoints1_first_n <= (litepciedma1_reader_bufferizeendpoints1_sink_valid & litepciedma1_reader_bufferizeendpoints1_sink_first);
		litepciedma1_reader_bufferizeendpoints1_last_n <= (litepciedma1_reader_bufferizeendpoints1_sink_valid & litepciedma1_reader_bufferizeendpoints1_sink_last);
	end
	if (litepciedma1_reader_bufferizeendpoints1_pipe_ce) begin
		litepciedma1_reader_bufferizeendpoints1_source_payload_address <= litepciedma1_reader_bufferizeendpoints1_sink_payload_address;
		litepciedma1_reader_bufferizeendpoints1_source_payload_length <= litepciedma1_reader_bufferizeendpoints1_sink_payload_length;
		litepciedma1_reader_bufferizeendpoints1_source_payload_control <= litepciedma1_reader_bufferizeendpoints1_sink_payload_control;
		litepciedma1_reader_bufferizeendpoints1_source_payload_user_id <= litepciedma1_reader_bufferizeendpoints1_sink_payload_user_id;
	end
	if (litepciedma1_reader_resetinserter_reset0) begin
		litepciedma1_reader_splitter_offset <= 32'd0;
		litepciedma1_reader_splitter_user_id <= 32'd0;
		litepciedma1_reader_splitter_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_last_n <= 1'd0;
		subfragments_bufferizeendpoints1_state1 <= 2'd0;
	end
	subfragments_fsm1_state2 <= subfragments_fsm1_next_state2;
	if (litepciedma1_reader_request_cnt_litepciedma1_next_value_ce0) begin
		litepciedma1_reader_request_cnt <= litepciedma1_reader_request_cnt_litepciedma1_next_value0;
	end
	if (litepciedma1_reader_request_counted_litepciedma1_next_value_ce1) begin
		litepciedma1_reader_request_counted <= litepciedma1_reader_request_counted_litepciedma1_next_value1;
	end
	if (litepciedma1_reader_fifo_syncfifo1_re) begin
		litepciedma1_reader_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma1_reader_fifo_re) begin
			litepciedma1_reader_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma1_reader_fifo_syncfifo1_we & litepciedma1_reader_fifo_syncfifo1_writable) & (~litepciedma1_reader_fifo_replace))) begin
		litepciedma1_reader_fifo_produce <= (litepciedma1_reader_fifo_produce + 1'd1);
	end
	if (litepciedma1_reader_fifo_do_read) begin
		litepciedma1_reader_fifo_consume <= (litepciedma1_reader_fifo_consume + 1'd1);
	end
	if (((litepciedma1_reader_fifo_syncfifo1_we & litepciedma1_reader_fifo_syncfifo1_writable) & (~litepciedma1_reader_fifo_replace))) begin
		if ((~litepciedma1_reader_fifo_do_read)) begin
			litepciedma1_reader_fifo_level0 <= (litepciedma1_reader_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_reader_fifo_do_read) begin
			litepciedma1_reader_fifo_level0 <= (litepciedma1_reader_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma1_reader_resetinserter_reset1) begin
		litepciedma1_reader_fifo_readable <= 1'd0;
		litepciedma1_reader_fifo_level0 <= 9'd0;
		litepciedma1_reader_fifo_produce <= 8'd0;
		litepciedma1_reader_fifo_consume <= 8'd0;
	end
	if (litepciedma1_syncfifo2_syncfifo2_re) begin
		litepciedma1_syncfifo2_readable <= 1'd1;
	end else begin
		if (litepciedma1_syncfifo2_re) begin
			litepciedma1_syncfifo2_readable <= 1'd0;
		end
	end
	if (((litepciedma1_syncfifo2_syncfifo2_we & litepciedma1_syncfifo2_syncfifo2_writable) & (~litepciedma1_syncfifo2_replace))) begin
		if ((litepciedma1_syncfifo2_produce == 10'd767)) begin
			litepciedma1_syncfifo2_produce <= 1'd0;
		end else begin
			litepciedma1_syncfifo2_produce <= (litepciedma1_syncfifo2_produce + 1'd1);
		end
	end
	if (litepciedma1_syncfifo2_do_read) begin
		if ((litepciedma1_syncfifo2_consume == 10'd767)) begin
			litepciedma1_syncfifo2_consume <= 1'd0;
		end else begin
			litepciedma1_syncfifo2_consume <= (litepciedma1_syncfifo2_consume + 1'd1);
		end
	end
	if (((litepciedma1_syncfifo2_syncfifo2_we & litepciedma1_syncfifo2_syncfifo2_writable) & (~litepciedma1_syncfifo2_replace))) begin
		if ((~litepciedma1_syncfifo2_do_read)) begin
			litepciedma1_syncfifo2_level0 <= (litepciedma1_syncfifo2_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_syncfifo2_do_read) begin
			litepciedma1_syncfifo2_level0 <= (litepciedma1_syncfifo2_level0 - 1'd1);
		end
	end
	if (litepciedma1_reader_fifo_reset) begin
		litepciedma1_syncfifo2_readable <= 1'd0;
		litepciedma1_syncfifo2_level0 <= 10'd0;
		litepciedma1_syncfifo2_produce <= 10'd0;
		litepciedma1_syncfifo2_consume <= 10'd0;
	end
	if (litepciedma1_syncfifo3_syncfifo3_re) begin
		litepciedma1_syncfifo3_readable <= 1'd1;
	end else begin
		if (litepciedma1_syncfifo3_re) begin
			litepciedma1_syncfifo3_readable <= 1'd0;
		end
	end
	if (((litepciedma1_syncfifo3_syncfifo3_we & litepciedma1_syncfifo3_syncfifo3_writable) & (~litepciedma1_syncfifo3_replace))) begin
		if ((litepciedma1_syncfifo3_produce == 10'd767)) begin
			litepciedma1_syncfifo3_produce <= 1'd0;
		end else begin
			litepciedma1_syncfifo3_produce <= (litepciedma1_syncfifo3_produce + 1'd1);
		end
	end
	if (litepciedma1_syncfifo3_do_read) begin
		if ((litepciedma1_syncfifo3_consume == 10'd767)) begin
			litepciedma1_syncfifo3_consume <= 1'd0;
		end else begin
			litepciedma1_syncfifo3_consume <= (litepciedma1_syncfifo3_consume + 1'd1);
		end
	end
	if (((litepciedma1_syncfifo3_syncfifo3_we & litepciedma1_syncfifo3_syncfifo3_writable) & (~litepciedma1_syncfifo3_replace))) begin
		if ((~litepciedma1_syncfifo3_do_read)) begin
			litepciedma1_syncfifo3_level0 <= (litepciedma1_syncfifo3_level0 + 1'd1);
		end
	end else begin
		if (litepciedma1_syncfifo3_do_read) begin
			litepciedma1_syncfifo3_level0 <= (litepciedma1_syncfifo3_level0 - 1'd1);
		end
	end
	if (litepciedma1_writer_fifo_reset) begin
		litepciedma1_syncfifo3_readable <= 1'd0;
		litepciedma1_syncfifo3_level0 <= 10'd0;
		litepciedma1_syncfifo3_produce <= 10'd0;
		litepciedma1_syncfifo3_consume <= 10'd0;
	end
	if (litepciedma2_writer_counter_reset) begin
		litepciedma2_writer_counter <= 1'd0;
	end else begin
		if (litepciedma2_writer_counter_ce) begin
			litepciedma2_writer_counter <= (litepciedma2_writer_counter + 1'd1);
		end
	end
	if (((litepciedma2_litepciemasterinternalport4_sink_valid & litepciedma2_litepciemasterinternalport4_sink_first) & litepciedma2_litepciemasterinternalport4_sink_ready)) begin
		litepciedma2_writer_status <= litepciedma2_litepciemasterinternalport4_sink_payload_user_id;
	end
	litepciedma2_writer_request_ready <= ((litepciedma2_writer_bufferizeendpoints2_source_valid & (litepciedma2_writer_fifo_level1 >= litepciedma2_writer_bufferizeendpoints2_source_payload_length[23:4])) & litepciedma2_writer_allow_requests_storage);
	if (litepciedma2_writer_fifo_syncfifo2_re) begin
		litepciedma2_writer_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma2_writer_fifo_re) begin
			litepciedma2_writer_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma2_writer_fifo_syncfifo2_we & litepciedma2_writer_fifo_syncfifo2_writable) & (~litepciedma2_writer_fifo_replace))) begin
		litepciedma2_writer_fifo_produce <= (litepciedma2_writer_fifo_produce + 1'd1);
	end
	if (litepciedma2_writer_fifo_do_read) begin
		litepciedma2_writer_fifo_consume <= (litepciedma2_writer_fifo_consume + 1'd1);
	end
	if (((litepciedma2_writer_fifo_syncfifo2_we & litepciedma2_writer_fifo_syncfifo2_writable) & (~litepciedma2_writer_fifo_replace))) begin
		if ((~litepciedma2_writer_fifo_do_read)) begin
			litepciedma2_writer_fifo_level0 <= (litepciedma2_writer_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_writer_fifo_do_read) begin
			litepciedma2_writer_fifo_level0 <= (litepciedma2_writer_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma2_writer_resetinserter_reset0) begin
		litepciedma2_writer_fifo_readable <= 1'd0;
		litepciedma2_writer_fifo_level0 <= 8'd0;
		litepciedma2_writer_fifo_produce <= 7'd0;
		litepciedma2_writer_fifo_consume <= 7'd0;
	end
	if (litepciedma2_writer_table_loop_prog_n_storage) begin
		litepciedma2_writer_table_syncfifo2_sink_payload_address <= litepciedma2_writer_table_syncfifo2_source_payload_address;
		litepciedma2_writer_table_syncfifo2_sink_payload_length <= litepciedma2_writer_table_syncfifo2_source_payload_length;
		litepciedma2_writer_table_syncfifo2_sink_payload_control <= litepciedma2_writer_table_syncfifo2_source_payload_control;
		litepciedma2_writer_table_syncfifo2_sink_first <= litepciedma2_writer_table_syncfifo2_source_first;
		litepciedma2_writer_table_syncfifo2_sink_valid <= litepciedma2_writer_table_syncfifo2_source_ready;
	end else begin
		litepciedma2_writer_table_syncfifo2_sink_payload_address <= litepciedma2_writer_table_value_storage[31:0];
		litepciedma2_writer_table_syncfifo2_sink_payload_length <= litepciedma2_writer_table_value_storage[55:32];
		litepciedma2_writer_table_syncfifo2_sink_payload_control <= litepciedma2_writer_table_value_storage[63:56];
		litepciedma2_writer_table_syncfifo2_sink_first <= (~litepciedma2_writer_table_syncfifo2_source_valid);
		litepciedma2_writer_table_syncfifo2_sink_valid <= (litepciedma2_writer_table_we_r & litepciedma2_writer_table_we_re);
	end
	if ((litepciedma2_writer_table_flush_r & litepciedma2_writer_table_flush_re)) begin
		litepciedma2_writer_table_loop_index <= 1'd1;
		litepciedma2_writer_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma2_writer_table_source_source_valid & litepciedma2_writer_table_source_source_ready)) begin
			litepciedma2_writer_table_loop_status_status <= litepciedma2_writer_table_loop_index;
			litepciedma2_writer_table_loop_index <= (litepciedma2_writer_table_loop_index + 1'd1);
		end
	end
	if (((litepciedma2_writer_table_syncfifo2_syncfifo2_we & litepciedma2_writer_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_writer_table_syncfifo2_replace))) begin
		litepciedma2_writer_table_syncfifo2_produce <= (litepciedma2_writer_table_syncfifo2_produce + 1'd1);
	end
	if (litepciedma2_writer_table_syncfifo2_do_read) begin
		litepciedma2_writer_table_syncfifo2_consume <= (litepciedma2_writer_table_syncfifo2_consume + 1'd1);
	end
	if (((litepciedma2_writer_table_syncfifo2_syncfifo2_we & litepciedma2_writer_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_writer_table_syncfifo2_replace))) begin
		if ((~litepciedma2_writer_table_syncfifo2_do_read)) begin
			litepciedma2_writer_table_syncfifo2_level <= (litepciedma2_writer_table_syncfifo2_level + 1'd1);
		end
	end else begin
		if (litepciedma2_writer_table_syncfifo2_do_read) begin
			litepciedma2_writer_table_syncfifo2_level <= (litepciedma2_writer_table_syncfifo2_level - 1'd1);
		end
	end
	if (litepciedma2_writer_table_reset) begin
		litepciedma2_writer_table_syncfifo2_level <= 9'd0;
		litepciedma2_writer_table_syncfifo2_produce <= 8'd0;
		litepciedma2_writer_table_syncfifo2_consume <= 8'd0;
	end
	if (litepciedma2_writer_splitter_offset_reset) begin
		litepciedma2_writer_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma2_writer_splitter_offset_ce) begin
			litepciedma2_writer_splitter_offset <= (litepciedma2_writer_splitter_offset + pcie_phy_max_payload_size);
		end
	end
	if (litepciedma2_writer_splitter_user_id_ce) begin
		litepciedma2_writer_splitter_user_id <= (litepciedma2_writer_splitter_user_id + 1'd1);
	end
	if (litepciedma2_writer_splitter_length_update) begin
		litepciedma2_writer_splitter_length <= litepciedma2_writer_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints2_state0 <= subfragments_bufferizeendpoints2_next_state0;
	if (litepciedma2_writer_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_writer_bufferizeendpoints2_valid_n <= litepciedma2_writer_bufferizeendpoints2_sink_valid;
	end
	if (litepciedma2_writer_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_writer_bufferizeendpoints2_first_n <= (litepciedma2_writer_bufferizeendpoints2_sink_valid & litepciedma2_writer_bufferizeendpoints2_sink_first);
		litepciedma2_writer_bufferizeendpoints2_last_n <= (litepciedma2_writer_bufferizeendpoints2_sink_valid & litepciedma2_writer_bufferizeendpoints2_sink_last);
	end
	if (litepciedma2_writer_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_writer_bufferizeendpoints2_source_payload_address <= litepciedma2_writer_bufferizeendpoints2_sink_payload_address;
		litepciedma2_writer_bufferizeendpoints2_source_payload_length <= litepciedma2_writer_bufferizeendpoints2_sink_payload_length;
		litepciedma2_writer_bufferizeendpoints2_source_payload_control <= litepciedma2_writer_bufferizeendpoints2_sink_payload_control;
		litepciedma2_writer_bufferizeendpoints2_source_payload_user_id <= litepciedma2_writer_bufferizeendpoints2_sink_payload_user_id;
	end
	if (litepciedma2_writer_resetinserter_reset1) begin
		litepciedma2_writer_splitter_offset <= 32'd0;
		litepciedma2_writer_splitter_user_id <= 32'd0;
		litepciedma2_writer_splitter_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_last_n <= 1'd0;
		subfragments_bufferizeendpoints2_state0 <= 2'd0;
	end
	subfragments_fsm2_state0 <= subfragments_fsm2_next_state0;
	litepciedma2_reader_status <= litepciedma2_reader_req_pck_cnt;
	if (((litepciedma2_reader_request_cnt == litepciedma2_reader_requests_per_pckt) & litepciedma2_reader_request_counted)) begin
		litepciedma2_reader_req_pck_cnt <= (litepciedma2_reader_req_pck_cnt + 1'd1);
		litepciedma2_reader_request_counted <= 1'd0;
	end
	if (((((litepciedma2_reader_req_pck_cnt + 1'd1) == litepciedma2_reader_packet_nr_storage) & ((litepciedma2_reader_request_cnt + 1'd1) == litepciedma2_reader_requests_per_pckt)) & litepciedma2_reader_request_ready)) begin
		litepciedma2_reader_allow_request <= 1'd0;
	end else begin
		if (((litepciedma2_reader_req_pck_cnt + 1'd1) != litepciedma2_reader_packet_nr_storage)) begin
			litepciedma2_reader_allow_request <= 1'd1;
		end else begin
			litepciedma2_reader_allow_request <= litepciedma2_reader_allow_request;
		end
	end
	if ((~litepciedma2_reader_enable_storage)) begin
		litepciedma2_reader_req_pck_cnt <= 1'd0;
		litepciedma2_reader_request_cnt <= 1'd0;
	end
	litepciedma2_reader_flush_nbytes_we <= 1'd0;
	if ((litepciedma2_litepciemasterinternalport5_source_valid & litepciedma2_reader_fifo_sink_ready)) begin
		litepciedma2_reader_sent_cnt <= (litepciedma2_reader_sent_cnt + 5'd16);
		if (((litepciedma2_reader_flush_nr_storage == litepciedma2_reader_sent_pck_cnt) & (litepciedma2_reader_flush_nbytes_storage != 1'd0))) begin
			if ((litepciedma2_reader_flush_nbytes_storage > (litepciedma2_reader_sent_cnt + 5'd16))) begin
				litepciedma2_reader_flush <= 1'd0;
			end else begin
				if (((litepciedma2_reader_sent_cnt + 5'd16) == litepciedma2_reader_table_value_storage[63:32])) begin
					litepciedma2_reader_flush <= 1'd0;
				end else begin
					litepciedma2_reader_flush <= 1'd1;
				end
			end
			if (((litepciedma2_reader_sent_cnt + 5'd16) == litepciedma2_reader_table_value_storage[63:32])) begin
				litepciedma2_reader_flush_nbytes_dat_w <= 1'd0;
				litepciedma2_reader_flush_nbytes_we <= 1'd1;
			end
		end else begin
			litepciedma2_reader_flush <= 1'd0;
		end
		if (((litepciedma2_reader_sent_cnt + 5'd16) == litepciedma2_reader_table_value_storage[63:32])) begin
			litepciedma2_reader_sent_pck_cnt <= (litepciedma2_reader_sent_pck_cnt + 1'd1);
			litepciedma2_reader_sent_cnt <= 1'd0;
		end
	end
	if ((~litepciedma2_reader_enable_storage)) begin
		litepciedma2_reader_sent_cnt <= 1'd0;
		litepciedma2_reader_sent_pck_cnt <= 1'd1;
	end
	if (((litepciedma2_litepciemasterinternalport5_source_valid & litepciedma2_litepciemasterinternalport5_source_first) & litepciedma2_litepciemasterinternalport5_source_ready)) begin
		litepciedma2_reader_last_user_id <= litepciedma2_litepciemasterinternalport5_source_payload_user_id;
	end
	if ((((litepciedma2_reader_packet_nr_storage != litepciedma2_reader_req_pck_cnt) & litepciedma2_reader_table_loop_prog_n_storage) & litepciedma2_reader_allow_request)) begin
		litepciedma2_reader_request_ready <= (litepciedma2_reader_bufferizeendpoints2_source_valid & (litepciedma2_reader_fifo_level1 < 8'd128));
	end else begin
		litepciedma2_reader_request_ready <= 1'd0;
	end
	if ((litepciedma2_reader_fifo_sink_valid & litepciedma2_reader_fifo_sink_ready)) begin
		litepciedma2_reader_sent_dbg <= (litepciedma2_reader_sent_dbg + 1'd1);
		if ((litepciedma2_reader_sent_dbg != litepciedma2_reader_fifo_sink_payload_data[63:0])) begin
			litepciedma2_reader_bad_fifo_write <= 1'd1;
		end
	end else begin
		if ((~litepciedma2_reader_enable_storage)) begin
			litepciedma2_reader_sent_dbg <= 1'd0;
			litepciedma2_reader_bad_fifo_write <= 1'd0;
		end
	end
	if (litepciedma2_reader_table_loop_prog_n_storage) begin
		litepciedma2_reader_table_syncfifo2_sink_payload_address <= litepciedma2_reader_table_syncfifo2_source_payload_address;
		litepciedma2_reader_table_syncfifo2_sink_payload_length <= litepciedma2_reader_table_syncfifo2_source_payload_length;
		litepciedma2_reader_table_syncfifo2_sink_payload_control <= litepciedma2_reader_table_syncfifo2_source_payload_control;
		litepciedma2_reader_table_syncfifo2_sink_first <= litepciedma2_reader_table_syncfifo2_source_first;
		litepciedma2_reader_table_syncfifo2_sink_valid <= litepciedma2_reader_table_syncfifo2_source_ready;
	end else begin
		litepciedma2_reader_table_syncfifo2_sink_payload_address <= litepciedma2_reader_table_value_storage[31:0];
		litepciedma2_reader_table_syncfifo2_sink_payload_length <= litepciedma2_reader_table_value_storage[55:32];
		litepciedma2_reader_table_syncfifo2_sink_payload_control <= litepciedma2_reader_table_value_storage[63:56];
		litepciedma2_reader_table_syncfifo2_sink_first <= (~litepciedma2_reader_table_syncfifo2_source_valid);
		litepciedma2_reader_table_syncfifo2_sink_valid <= (litepciedma2_reader_table_we_r & litepciedma2_reader_table_we_re);
	end
	if ((litepciedma2_reader_table_flush_r & litepciedma2_reader_table_flush_re)) begin
		litepciedma2_reader_table_loop_index <= 1'd1;
		litepciedma2_reader_table_loop_status_status <= 1'd0;
	end else begin
		if ((litepciedma2_reader_table_source_source_valid & litepciedma2_reader_table_source_source_ready)) begin
			litepciedma2_reader_table_loop_status_status <= litepciedma2_reader_table_loop_index;
			litepciedma2_reader_table_loop_index <= (litepciedma2_reader_table_loop_index + 1'd1);
		end
	end
	if (((litepciedma2_reader_table_syncfifo2_syncfifo2_we & litepciedma2_reader_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_reader_table_syncfifo2_replace))) begin
		litepciedma2_reader_table_syncfifo2_produce <= (litepciedma2_reader_table_syncfifo2_produce + 1'd1);
	end
	if (litepciedma2_reader_table_syncfifo2_do_read) begin
		litepciedma2_reader_table_syncfifo2_consume <= (litepciedma2_reader_table_syncfifo2_consume + 1'd1);
	end
	if (((litepciedma2_reader_table_syncfifo2_syncfifo2_we & litepciedma2_reader_table_syncfifo2_syncfifo2_writable) & (~litepciedma2_reader_table_syncfifo2_replace))) begin
		if ((~litepciedma2_reader_table_syncfifo2_do_read)) begin
			litepciedma2_reader_table_syncfifo2_level <= (litepciedma2_reader_table_syncfifo2_level + 1'd1);
		end
	end else begin
		if (litepciedma2_reader_table_syncfifo2_do_read) begin
			litepciedma2_reader_table_syncfifo2_level <= (litepciedma2_reader_table_syncfifo2_level - 1'd1);
		end
	end
	if (litepciedma2_reader_table_reset) begin
		litepciedma2_reader_table_syncfifo2_level <= 9'd0;
		litepciedma2_reader_table_syncfifo2_produce <= 8'd0;
		litepciedma2_reader_table_syncfifo2_consume <= 8'd0;
	end
	if (litepciedma2_reader_splitter_offset_reset) begin
		litepciedma2_reader_splitter_offset <= 1'd0;
	end else begin
		if (litepciedma2_reader_splitter_offset_ce) begin
			litepciedma2_reader_splitter_offset <= (litepciedma2_reader_splitter_offset + 10'd512);
		end
	end
	if (litepciedma2_reader_splitter_user_id_ce) begin
		litepciedma2_reader_splitter_user_id <= (litepciedma2_reader_splitter_user_id + 1'd1);
	end
	if (litepciedma2_reader_splitter_length_update) begin
		litepciedma2_reader_splitter_length <= litepciedma2_reader_splitter_sink_payload_length;
	end
	subfragments_bufferizeendpoints2_state1 <= subfragments_bufferizeendpoints2_next_state1;
	if (litepciedma2_reader_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_reader_bufferizeendpoints2_valid_n <= litepciedma2_reader_bufferizeendpoints2_sink_valid;
	end
	if (litepciedma2_reader_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_reader_bufferizeendpoints2_first_n <= (litepciedma2_reader_bufferizeendpoints2_sink_valid & litepciedma2_reader_bufferizeendpoints2_sink_first);
		litepciedma2_reader_bufferizeendpoints2_last_n <= (litepciedma2_reader_bufferizeendpoints2_sink_valid & litepciedma2_reader_bufferizeendpoints2_sink_last);
	end
	if (litepciedma2_reader_bufferizeendpoints2_pipe_ce) begin
		litepciedma2_reader_bufferizeendpoints2_source_payload_address <= litepciedma2_reader_bufferizeendpoints2_sink_payload_address;
		litepciedma2_reader_bufferizeendpoints2_source_payload_length <= litepciedma2_reader_bufferizeendpoints2_sink_payload_length;
		litepciedma2_reader_bufferizeendpoints2_source_payload_control <= litepciedma2_reader_bufferizeendpoints2_sink_payload_control;
		litepciedma2_reader_bufferizeendpoints2_source_payload_user_id <= litepciedma2_reader_bufferizeendpoints2_sink_payload_user_id;
	end
	if (litepciedma2_reader_resetinserter_reset0) begin
		litepciedma2_reader_splitter_offset <= 32'd0;
		litepciedma2_reader_splitter_user_id <= 32'd0;
		litepciedma2_reader_splitter_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_last_n <= 1'd0;
		subfragments_bufferizeendpoints2_state1 <= 2'd0;
	end
	subfragments_fsm2_state1 <= subfragments_fsm2_next_state1;
	if (litepciedma2_reader_request_cnt_litepciedma2_next_value_ce0) begin
		litepciedma2_reader_request_cnt <= litepciedma2_reader_request_cnt_litepciedma2_next_value0;
	end
	if (litepciedma2_reader_request_counted_litepciedma2_next_value_ce1) begin
		litepciedma2_reader_request_counted <= litepciedma2_reader_request_counted_litepciedma2_next_value1;
	end
	if (litepciedma2_reader_fifo_syncfifo2_re) begin
		litepciedma2_reader_fifo_readable <= 1'd1;
	end else begin
		if (litepciedma2_reader_fifo_re) begin
			litepciedma2_reader_fifo_readable <= 1'd0;
		end
	end
	if (((litepciedma2_reader_fifo_syncfifo2_we & litepciedma2_reader_fifo_syncfifo2_writable) & (~litepciedma2_reader_fifo_replace))) begin
		litepciedma2_reader_fifo_produce <= (litepciedma2_reader_fifo_produce + 1'd1);
	end
	if (litepciedma2_reader_fifo_do_read) begin
		litepciedma2_reader_fifo_consume <= (litepciedma2_reader_fifo_consume + 1'd1);
	end
	if (((litepciedma2_reader_fifo_syncfifo2_we & litepciedma2_reader_fifo_syncfifo2_writable) & (~litepciedma2_reader_fifo_replace))) begin
		if ((~litepciedma2_reader_fifo_do_read)) begin
			litepciedma2_reader_fifo_level0 <= (litepciedma2_reader_fifo_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_reader_fifo_do_read) begin
			litepciedma2_reader_fifo_level0 <= (litepciedma2_reader_fifo_level0 - 1'd1);
		end
	end
	if (litepciedma2_reader_resetinserter_reset1) begin
		litepciedma2_reader_fifo_readable <= 1'd0;
		litepciedma2_reader_fifo_level0 <= 9'd0;
		litepciedma2_reader_fifo_produce <= 8'd0;
		litepciedma2_reader_fifo_consume <= 8'd0;
	end
	if (litepciedma2_syncfifo4_syncfifo4_re) begin
		litepciedma2_syncfifo4_readable <= 1'd1;
	end else begin
		if (litepciedma2_syncfifo4_re) begin
			litepciedma2_syncfifo4_readable <= 1'd0;
		end
	end
	if (((litepciedma2_syncfifo4_syncfifo4_we & litepciedma2_syncfifo4_syncfifo4_writable) & (~litepciedma2_syncfifo4_replace))) begin
		if ((litepciedma2_syncfifo4_produce == 10'd767)) begin
			litepciedma2_syncfifo4_produce <= 1'd0;
		end else begin
			litepciedma2_syncfifo4_produce <= (litepciedma2_syncfifo4_produce + 1'd1);
		end
	end
	if (litepciedma2_syncfifo4_do_read) begin
		if ((litepciedma2_syncfifo4_consume == 10'd767)) begin
			litepciedma2_syncfifo4_consume <= 1'd0;
		end else begin
			litepciedma2_syncfifo4_consume <= (litepciedma2_syncfifo4_consume + 1'd1);
		end
	end
	if (((litepciedma2_syncfifo4_syncfifo4_we & litepciedma2_syncfifo4_syncfifo4_writable) & (~litepciedma2_syncfifo4_replace))) begin
		if ((~litepciedma2_syncfifo4_do_read)) begin
			litepciedma2_syncfifo4_level0 <= (litepciedma2_syncfifo4_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_syncfifo4_do_read) begin
			litepciedma2_syncfifo4_level0 <= (litepciedma2_syncfifo4_level0 - 1'd1);
		end
	end
	if (litepciedma2_reader_fifo_reset) begin
		litepciedma2_syncfifo4_readable <= 1'd0;
		litepciedma2_syncfifo4_level0 <= 10'd0;
		litepciedma2_syncfifo4_produce <= 10'd0;
		litepciedma2_syncfifo4_consume <= 10'd0;
	end
	if (litepciedma2_syncfifo5_syncfifo5_re) begin
		litepciedma2_syncfifo5_readable <= 1'd1;
	end else begin
		if (litepciedma2_syncfifo5_re) begin
			litepciedma2_syncfifo5_readable <= 1'd0;
		end
	end
	if (((litepciedma2_syncfifo5_syncfifo5_we & litepciedma2_syncfifo5_syncfifo5_writable) & (~litepciedma2_syncfifo5_replace))) begin
		if ((litepciedma2_syncfifo5_produce == 10'd767)) begin
			litepciedma2_syncfifo5_produce <= 1'd0;
		end else begin
			litepciedma2_syncfifo5_produce <= (litepciedma2_syncfifo5_produce + 1'd1);
		end
	end
	if (litepciedma2_syncfifo5_do_read) begin
		if ((litepciedma2_syncfifo5_consume == 10'd767)) begin
			litepciedma2_syncfifo5_consume <= 1'd0;
		end else begin
			litepciedma2_syncfifo5_consume <= (litepciedma2_syncfifo5_consume + 1'd1);
		end
	end
	if (((litepciedma2_syncfifo5_syncfifo5_we & litepciedma2_syncfifo5_syncfifo5_writable) & (~litepciedma2_syncfifo5_replace))) begin
		if ((~litepciedma2_syncfifo5_do_read)) begin
			litepciedma2_syncfifo5_level0 <= (litepciedma2_syncfifo5_level0 + 1'd1);
		end
	end else begin
		if (litepciedma2_syncfifo5_do_read) begin
			litepciedma2_syncfifo5_level0 <= (litepciedma2_syncfifo5_level0 - 1'd1);
		end
	end
	if (litepciedma2_writer_fifo_reset) begin
		litepciedma2_syncfifo5_readable <= 1'd0;
		litepciedma2_syncfifo5_level0 <= 10'd0;
		litepciedma2_syncfifo5_produce <= 10'd0;
		litepciedma2_syncfifo5_consume <= 10'd0;
	end
	litepciecore_slave_sel_r <= litepciecore_slave_sel;
	if (litepciecore_wait) begin
		if ((~litepciecore_done)) begin
			litepciecore_count <= (litepciecore_count - 1'd1);
		end
	end else begin
		litepciecore_count <= 20'd1000000;
	end
	litepciecore_interface0_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank0_sel) begin
		case (litepciecore_interface0_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl15_w;
			end
			1'd1: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl14_w;
			end
			2'd2: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl13_w;
			end
			2'd3: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl12_w;
			end
			3'd4: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl11_w;
			end
			3'd5: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl10_w;
			end
			3'd6: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl9_w;
			end
			3'd7: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl8_w;
			end
			4'd8: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl7_w;
			end
			4'd9: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl6_w;
			end
			4'd10: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl5_w;
			end
			4'd11: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl4_w;
			end
			4'd12: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl3_w;
			end
			4'd13: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl2_w;
			end
			4'd14: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl1_w;
			end
			4'd15: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_cntrl0_w;
			end
			5'd16: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_enable0_w;
			end
			5'd17: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_test0_w;
			end
			5'd18: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_ndma_w;
			end
			5'd19: begin
				litepciecore_interface0_bank_bus_dat_r <= litepciecore_csrbank0_enable_both0_w;
			end
		endcase
	end
	if (cntrl_we) begin
		cntrl_storage_full <= (cntrl_dat_w <<< 1'd0);
	end
	if (litepciecore_csrbank0_cntrl15_re) begin
		cntrl_storage_full[511:480] <= litepciecore_csrbank0_cntrl15_r;
	end
	if (litepciecore_csrbank0_cntrl14_re) begin
		cntrl_storage_full[479:448] <= litepciecore_csrbank0_cntrl14_r;
	end
	if (litepciecore_csrbank0_cntrl13_re) begin
		cntrl_storage_full[447:416] <= litepciecore_csrbank0_cntrl13_r;
	end
	if (litepciecore_csrbank0_cntrl12_re) begin
		cntrl_storage_full[415:384] <= litepciecore_csrbank0_cntrl12_r;
	end
	if (litepciecore_csrbank0_cntrl11_re) begin
		cntrl_storage_full[383:352] <= litepciecore_csrbank0_cntrl11_r;
	end
	if (litepciecore_csrbank0_cntrl10_re) begin
		cntrl_storage_full[351:320] <= litepciecore_csrbank0_cntrl10_r;
	end
	if (litepciecore_csrbank0_cntrl9_re) begin
		cntrl_storage_full[319:288] <= litepciecore_csrbank0_cntrl9_r;
	end
	if (litepciecore_csrbank0_cntrl8_re) begin
		cntrl_storage_full[287:256] <= litepciecore_csrbank0_cntrl8_r;
	end
	if (litepciecore_csrbank0_cntrl7_re) begin
		cntrl_storage_full[255:224] <= litepciecore_csrbank0_cntrl7_r;
	end
	if (litepciecore_csrbank0_cntrl6_re) begin
		cntrl_storage_full[223:192] <= litepciecore_csrbank0_cntrl6_r;
	end
	if (litepciecore_csrbank0_cntrl5_re) begin
		cntrl_storage_full[191:160] <= litepciecore_csrbank0_cntrl5_r;
	end
	if (litepciecore_csrbank0_cntrl4_re) begin
		cntrl_storage_full[159:128] <= litepciecore_csrbank0_cntrl4_r;
	end
	if (litepciecore_csrbank0_cntrl3_re) begin
		cntrl_storage_full[127:96] <= litepciecore_csrbank0_cntrl3_r;
	end
	if (litepciecore_csrbank0_cntrl2_re) begin
		cntrl_storage_full[95:64] <= litepciecore_csrbank0_cntrl2_r;
	end
	if (litepciecore_csrbank0_cntrl1_re) begin
		cntrl_storage_full[63:32] <= litepciecore_csrbank0_cntrl1_r;
	end
	if (litepciecore_csrbank0_cntrl0_re) begin
		cntrl_storage_full[31:0] <= litepciecore_csrbank0_cntrl0_r;
	end
	cntrl_re <= litepciecore_csrbank0_cntrl0_re;
	if (litepciecore_csrbank0_enable0_re) begin
		enable_storage_full <= litepciecore_csrbank0_enable0_r;
	end
	enable_re <= litepciecore_csrbank0_enable0_re;
	if (litepciecore_csrbank0_test0_re) begin
		test_storage_full[31:0] <= litepciecore_csrbank0_test0_r;
	end
	test_re <= litepciecore_csrbank0_test0_re;
	if (litepciecore_csrbank0_enable_both0_re) begin
		enable_both_storage_full <= litepciecore_csrbank0_enable_both0_r;
	end
	enable_both_re <= litepciecore_csrbank0_enable_both0_re;
	litepciecore_sel_r <= litepciecore_sel;
	litepciecore_interface1_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank1_sel) begin
		case (litepciecore_interface1_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_enable0_w;
			end
			1'd1: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_allow_requests0_w;
			end
			2'd2: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_table_value1_w;
			end
			2'd3: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_table_value0_w;
			end
			3'd4: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciedma0_writer_table_we_w;
			end
			3'd5: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_table_loop_prog_n0_w;
			end
			3'd6: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_table_loop_status_w;
			end
			3'd7: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_table_level_w;
			end
			4'd8: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciedma0_writer_table_flush_w;
			end
			4'd9: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_writer_current_packet_w;
			end
			4'd10: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_enable0_w;
			end
			4'd11: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_packet_nr0_w;
			end
			4'd12: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_current_packet_w;
			end
			4'd13: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_table_value1_w;
			end
			4'd14: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_table_value0_w;
			end
			4'd15: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciedma0_reader_table_we_w;
			end
			5'd16: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_table_loop_prog_n0_w;
			end
			5'd17: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_table_loop_status_w;
			end
			5'd18: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_table_level_w;
			end
			5'd19: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciedma0_reader_table_flush_w;
			end
			5'd20: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_flush_nr0_w;
			end
			5'd21: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_reader_flush_nbytes0_w;
			end
			5'd22: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_buffering_reader_fifo_level_w;
			end
			5'd23: begin
				litepciecore_interface1_bank_bus_dat_r <= litepciecore_csrbank1_buffering_writer_fifo_level_w;
			end
		endcase
	end
	if (litepciecore_csrbank1_writer_enable0_re) begin
		litepciedma0_writer_enable_storage_full <= litepciecore_csrbank1_writer_enable0_r;
	end
	litepciedma0_writer_enable_re <= litepciecore_csrbank1_writer_enable0_re;
	if (litepciecore_csrbank1_writer_allow_requests0_re) begin
		litepciedma0_writer_allow_requests_storage_full <= litepciecore_csrbank1_writer_allow_requests0_r;
	end
	litepciedma0_writer_allow_requests_re <= litepciecore_csrbank1_writer_allow_requests0_re;
	if (litepciecore_csrbank1_writer_table_value1_re) begin
		litepciedma0_writer_table_value_storage_full[63:32] <= litepciecore_csrbank1_writer_table_value1_r;
	end
	if (litepciecore_csrbank1_writer_table_value0_re) begin
		litepciedma0_writer_table_value_storage_full[31:0] <= litepciecore_csrbank1_writer_table_value0_r;
	end
	litepciedma0_writer_table_value_re <= litepciecore_csrbank1_writer_table_value0_re;
	if (litepciecore_csrbank1_writer_table_loop_prog_n0_re) begin
		litepciedma0_writer_table_loop_prog_n_storage_full <= litepciecore_csrbank1_writer_table_loop_prog_n0_r;
	end
	litepciedma0_writer_table_loop_prog_n_re <= litepciecore_csrbank1_writer_table_loop_prog_n0_re;
	if (litepciecore_csrbank1_reader_enable0_re) begin
		litepciedma0_reader_enable_storage_full <= litepciecore_csrbank1_reader_enable0_r;
	end
	litepciedma0_reader_enable_re <= litepciecore_csrbank1_reader_enable0_re;
	if (litepciecore_csrbank1_reader_packet_nr0_re) begin
		litepciedma0_reader_packet_nr_storage_full[15:0] <= litepciecore_csrbank1_reader_packet_nr0_r;
	end
	litepciedma0_reader_packet_nr_re <= litepciecore_csrbank1_reader_packet_nr0_re;
	if (litepciecore_csrbank1_reader_table_value1_re) begin
		litepciedma0_reader_table_value_storage_full[63:32] <= litepciecore_csrbank1_reader_table_value1_r;
	end
	if (litepciecore_csrbank1_reader_table_value0_re) begin
		litepciedma0_reader_table_value_storage_full[31:0] <= litepciecore_csrbank1_reader_table_value0_r;
	end
	litepciedma0_reader_table_value_re <= litepciecore_csrbank1_reader_table_value0_re;
	if (litepciecore_csrbank1_reader_table_loop_prog_n0_re) begin
		litepciedma0_reader_table_loop_prog_n_storage_full <= litepciecore_csrbank1_reader_table_loop_prog_n0_r;
	end
	litepciedma0_reader_table_loop_prog_n_re <= litepciecore_csrbank1_reader_table_loop_prog_n0_re;
	if (litepciecore_csrbank1_reader_flush_nr0_re) begin
		litepciedma0_reader_flush_nr_storage_full[15:0] <= litepciecore_csrbank1_reader_flush_nr0_r;
	end
	litepciedma0_reader_flush_nr_re <= litepciecore_csrbank1_reader_flush_nr0_re;
	if (litepciedma0_reader_flush_nbytes_we) begin
		litepciedma0_reader_flush_nbytes_storage_full <= (litepciedma0_reader_flush_nbytes_dat_w <<< 1'd0);
	end
	if (litepciecore_csrbank1_reader_flush_nbytes0_re) begin
		litepciedma0_reader_flush_nbytes_storage_full[15:0] <= litepciecore_csrbank1_reader_flush_nbytes0_r;
	end
	litepciedma0_reader_flush_nbytes_re <= litepciecore_csrbank1_reader_flush_nbytes0_re;
	litepciecore_interface2_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank2_sel) begin
		case (litepciecore_interface2_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_enable0_w;
			end
			1'd1: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_allow_requests0_w;
			end
			2'd2: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_value1_w;
			end
			2'd3: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_value0_w;
			end
			3'd4: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma1_writer_table_we_w;
			end
			3'd5: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_loop_prog_n0_w;
			end
			3'd6: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_loop_status_w;
			end
			3'd7: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_table_level_w;
			end
			4'd8: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma1_writer_table_flush_w;
			end
			4'd9: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_writer_current_packet_w;
			end
			4'd10: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_enable0_w;
			end
			4'd11: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_packet_nr0_w;
			end
			4'd12: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_current_packet_w;
			end
			4'd13: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_value1_w;
			end
			4'd14: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_value0_w;
			end
			4'd15: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma1_reader_table_we_w;
			end
			5'd16: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_loop_prog_n0_w;
			end
			5'd17: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_loop_status_w;
			end
			5'd18: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_table_level_w;
			end
			5'd19: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciedma1_reader_table_flush_w;
			end
			5'd20: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_flush_nr0_w;
			end
			5'd21: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_reader_flush_nbytes0_w;
			end
			5'd22: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_buffering_reader_fifo_level_w;
			end
			5'd23: begin
				litepciecore_interface2_bank_bus_dat_r <= litepciecore_csrbank2_buffering_writer_fifo_level_w;
			end
		endcase
	end
	if (litepciecore_csrbank2_writer_enable0_re) begin
		litepciedma1_writer_enable_storage_full <= litepciecore_csrbank2_writer_enable0_r;
	end
	litepciedma1_writer_enable_re <= litepciecore_csrbank2_writer_enable0_re;
	if (litepciecore_csrbank2_writer_allow_requests0_re) begin
		litepciedma1_writer_allow_requests_storage_full <= litepciecore_csrbank2_writer_allow_requests0_r;
	end
	litepciedma1_writer_allow_requests_re <= litepciecore_csrbank2_writer_allow_requests0_re;
	if (litepciecore_csrbank2_writer_table_value1_re) begin
		litepciedma1_writer_table_value_storage_full[63:32] <= litepciecore_csrbank2_writer_table_value1_r;
	end
	if (litepciecore_csrbank2_writer_table_value0_re) begin
		litepciedma1_writer_table_value_storage_full[31:0] <= litepciecore_csrbank2_writer_table_value0_r;
	end
	litepciedma1_writer_table_value_re <= litepciecore_csrbank2_writer_table_value0_re;
	if (litepciecore_csrbank2_writer_table_loop_prog_n0_re) begin
		litepciedma1_writer_table_loop_prog_n_storage_full <= litepciecore_csrbank2_writer_table_loop_prog_n0_r;
	end
	litepciedma1_writer_table_loop_prog_n_re <= litepciecore_csrbank2_writer_table_loop_prog_n0_re;
	if (litepciecore_csrbank2_reader_enable0_re) begin
		litepciedma1_reader_enable_storage_full <= litepciecore_csrbank2_reader_enable0_r;
	end
	litepciedma1_reader_enable_re <= litepciecore_csrbank2_reader_enable0_re;
	if (litepciecore_csrbank2_reader_packet_nr0_re) begin
		litepciedma1_reader_packet_nr_storage_full[15:0] <= litepciecore_csrbank2_reader_packet_nr0_r;
	end
	litepciedma1_reader_packet_nr_re <= litepciecore_csrbank2_reader_packet_nr0_re;
	if (litepciecore_csrbank2_reader_table_value1_re) begin
		litepciedma1_reader_table_value_storage_full[63:32] <= litepciecore_csrbank2_reader_table_value1_r;
	end
	if (litepciecore_csrbank2_reader_table_value0_re) begin
		litepciedma1_reader_table_value_storage_full[31:0] <= litepciecore_csrbank2_reader_table_value0_r;
	end
	litepciedma1_reader_table_value_re <= litepciecore_csrbank2_reader_table_value0_re;
	if (litepciecore_csrbank2_reader_table_loop_prog_n0_re) begin
		litepciedma1_reader_table_loop_prog_n_storage_full <= litepciecore_csrbank2_reader_table_loop_prog_n0_r;
	end
	litepciedma1_reader_table_loop_prog_n_re <= litepciecore_csrbank2_reader_table_loop_prog_n0_re;
	if (litepciecore_csrbank2_reader_flush_nr0_re) begin
		litepciedma1_reader_flush_nr_storage_full[15:0] <= litepciecore_csrbank2_reader_flush_nr0_r;
	end
	litepciedma1_reader_flush_nr_re <= litepciecore_csrbank2_reader_flush_nr0_re;
	if (litepciedma1_reader_flush_nbytes_we) begin
		litepciedma1_reader_flush_nbytes_storage_full <= (litepciedma1_reader_flush_nbytes_dat_w <<< 1'd0);
	end
	if (litepciecore_csrbank2_reader_flush_nbytes0_re) begin
		litepciedma1_reader_flush_nbytes_storage_full[15:0] <= litepciecore_csrbank2_reader_flush_nbytes0_r;
	end
	litepciedma1_reader_flush_nbytes_re <= litepciecore_csrbank2_reader_flush_nbytes0_re;
	litepciecore_interface3_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank3_sel) begin
		case (litepciecore_interface3_bank_bus_adr[4:0])
			1'd0: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_enable0_w;
			end
			1'd1: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_allow_requests0_w;
			end
			2'd2: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_value1_w;
			end
			2'd3: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_value0_w;
			end
			3'd4: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma2_writer_table_we_w;
			end
			3'd5: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_loop_prog_n0_w;
			end
			3'd6: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_loop_status_w;
			end
			3'd7: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_table_level_w;
			end
			4'd8: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma2_writer_table_flush_w;
			end
			4'd9: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_writer_current_packet_w;
			end
			4'd10: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_enable0_w;
			end
			4'd11: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_packet_nr0_w;
			end
			4'd12: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_current_packet_w;
			end
			4'd13: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_value1_w;
			end
			4'd14: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_value0_w;
			end
			4'd15: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma2_reader_table_we_w;
			end
			5'd16: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_loop_prog_n0_w;
			end
			5'd17: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_loop_status_w;
			end
			5'd18: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_table_level_w;
			end
			5'd19: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciedma2_reader_table_flush_w;
			end
			5'd20: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_flush_nr0_w;
			end
			5'd21: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_reader_flush_nbytes0_w;
			end
			5'd22: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_buffering_reader_fifo_level_w;
			end
			5'd23: begin
				litepciecore_interface3_bank_bus_dat_r <= litepciecore_csrbank3_buffering_writer_fifo_level_w;
			end
		endcase
	end
	if (litepciecore_csrbank3_writer_enable0_re) begin
		litepciedma2_writer_enable_storage_full <= litepciecore_csrbank3_writer_enable0_r;
	end
	litepciedma2_writer_enable_re <= litepciecore_csrbank3_writer_enable0_re;
	if (litepciecore_csrbank3_writer_allow_requests0_re) begin
		litepciedma2_writer_allow_requests_storage_full <= litepciecore_csrbank3_writer_allow_requests0_r;
	end
	litepciedma2_writer_allow_requests_re <= litepciecore_csrbank3_writer_allow_requests0_re;
	if (litepciecore_csrbank3_writer_table_value1_re) begin
		litepciedma2_writer_table_value_storage_full[63:32] <= litepciecore_csrbank3_writer_table_value1_r;
	end
	if (litepciecore_csrbank3_writer_table_value0_re) begin
		litepciedma2_writer_table_value_storage_full[31:0] <= litepciecore_csrbank3_writer_table_value0_r;
	end
	litepciedma2_writer_table_value_re <= litepciecore_csrbank3_writer_table_value0_re;
	if (litepciecore_csrbank3_writer_table_loop_prog_n0_re) begin
		litepciedma2_writer_table_loop_prog_n_storage_full <= litepciecore_csrbank3_writer_table_loop_prog_n0_r;
	end
	litepciedma2_writer_table_loop_prog_n_re <= litepciecore_csrbank3_writer_table_loop_prog_n0_re;
	if (litepciecore_csrbank3_reader_enable0_re) begin
		litepciedma2_reader_enable_storage_full <= litepciecore_csrbank3_reader_enable0_r;
	end
	litepciedma2_reader_enable_re <= litepciecore_csrbank3_reader_enable0_re;
	if (litepciecore_csrbank3_reader_packet_nr0_re) begin
		litepciedma2_reader_packet_nr_storage_full[15:0] <= litepciecore_csrbank3_reader_packet_nr0_r;
	end
	litepciedma2_reader_packet_nr_re <= litepciecore_csrbank3_reader_packet_nr0_re;
	if (litepciecore_csrbank3_reader_table_value1_re) begin
		litepciedma2_reader_table_value_storage_full[63:32] <= litepciecore_csrbank3_reader_table_value1_r;
	end
	if (litepciecore_csrbank3_reader_table_value0_re) begin
		litepciedma2_reader_table_value_storage_full[31:0] <= litepciecore_csrbank3_reader_table_value0_r;
	end
	litepciedma2_reader_table_value_re <= litepciecore_csrbank3_reader_table_value0_re;
	if (litepciecore_csrbank3_reader_table_loop_prog_n0_re) begin
		litepciedma2_reader_table_loop_prog_n_storage_full <= litepciecore_csrbank3_reader_table_loop_prog_n0_r;
	end
	litepciedma2_reader_table_loop_prog_n_re <= litepciecore_csrbank3_reader_table_loop_prog_n0_re;
	if (litepciecore_csrbank3_reader_flush_nr0_re) begin
		litepciedma2_reader_flush_nr_storage_full[15:0] <= litepciecore_csrbank3_reader_flush_nr0_r;
	end
	litepciedma2_reader_flush_nr_re <= litepciecore_csrbank3_reader_flush_nr0_re;
	if (litepciedma2_reader_flush_nbytes_we) begin
		litepciedma2_reader_flush_nbytes_storage_full <= (litepciedma2_reader_flush_nbytes_dat_w <<< 1'd0);
	end
	if (litepciecore_csrbank3_reader_flush_nbytes0_re) begin
		litepciedma2_reader_flush_nbytes_storage_full[15:0] <= litepciecore_csrbank3_reader_flush_nbytes0_r;
	end
	litepciedma2_reader_flush_nbytes_re <= litepciecore_csrbank3_reader_flush_nbytes0_re;
	litepciecore_interface4_bank_bus_dat_r <= 1'd0;
	if (litepciecore_csrbank4_sel) begin
		case (litepciecore_interface4_bank_bus_adr[2:0])
			1'd0: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_lnk_up_w;
			end
			1'd1: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_msi_enable_w;
			end
			2'd2: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_bus_master_enable_w;
			end
			2'd3: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_max_request_size_w;
			end
			3'd4: begin
				litepciecore_interface4_bank_bus_dat_r <= litepciecore_csrbank4_max_payload_size_w;
			end
		endcase
	end
	if (sys_rst) begin
		sram_bus_ack <= 1'd0;
		interface_adr <= 14'd0;
		interface_we <= 1'd0;
		interface_dat_w <= 32'd0;
		bus_wishbone_dat_r <= 32'd0;
		bus_wishbone_ack <= 1'd0;
		counter <= 2'd0;
		pcie_phy_tx_buffer_source_payload_dat <= 128'd0;
		pcie_phy_tx_buffer_source_payload_be <= 16'd0;
		pcie_phy_tx_buffer_valid_n <= 1'd0;
		pcie_phy_tx_buffer_first_n <= 1'd0;
		pcie_phy_tx_buffer_last_n <= 1'd0;
		pcie_phy_tx_cdc_graycounter0_q <= 3'd0;
		pcie_phy_tx_cdc_graycounter0_q_binary <= 3'd0;
		pcie_phy_rx_cdc_graycounter1_q <= 3'd0;
		pcie_phy_rx_cdc_graycounter1_q_binary <= 3'd0;
		pcie_phy_rx_buffer_source_payload_dat <= 128'd0;
		pcie_phy_rx_buffer_source_payload_be <= 16'd0;
		pcie_phy_rx_buffer_valid_n <= 1'd0;
		pcie_phy_rx_buffer_first_n <= 1'd0;
		pcie_phy_rx_buffer_last_n <= 1'd0;
		pcie_phy_msi_cdc_graycounter0_q <= 3'd0;
		pcie_phy_msi_cdc_graycounter0_q_binary <= 3'd0;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_source_payload_header <= 128'd0;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_first <= 1'd0;
		pcie_endpoint_litepcietlpdepacketizer_header_extracter_last <= 1'd0;
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_first <= 1'd1;
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_ongoing1 <= 1'd0;
		pcie_endpoint_litepcietlpdepacketizer_dispatcher_sel_ongoing <= 1'd0;
		pcie_endpoint_grant <= 1'd0;
		pcie_endpoint_status0_first <= 1'd1;
		pcie_endpoint_status0_ongoing1 <= 1'd0;
		pcie_endpoint_status1_first <= 1'd1;
		pcie_endpoint_status1_ongoing1 <= 1'd0;
		wishbone_adr <= 30'd0;
		wishbone_dat_w <= 32'd0;
		wishbone_sel <= 4'd0;
		sink_first <= 1'd0;
		sink_last <= 1'd0;
		sink_payload_adr <= 32'd0;
		sink_payload_len <= 10'd0;
		sink_payload_req_id <= 16'd0;
		sink_payload_cmp_id <= 16'd0;
		sink_payload_err <= 1'd0;
		sink_payload_tag <= 8'd0;
		sink_payload_dat <= 128'd0;
		cntrl_storage_full <= 512'd0;
		cntrl_re <= 1'd0;
		enable_storage_full <= 1'd0;
		enable_re <= 1'd0;
		test_storage_full <= 32'd0;
		test_re <= 1'd0;
		enable_both_storage_full <= 1'd0;
		enable_both_re <= 1'd0;
		litepciedma0_writer_enable_storage_full <= 1'd0;
		litepciedma0_writer_enable_re <= 1'd0;
		litepciedma0_writer_allow_requests_storage_full <= 1'd0;
		litepciedma0_writer_allow_requests_re <= 1'd0;
		litepciedma0_writer_fifo_readable <= 1'd0;
		litepciedma0_writer_fifo_level0 <= 8'd0;
		litepciedma0_writer_fifo_produce <= 7'd0;
		litepciedma0_writer_fifo_consume <= 7'd0;
		litepciedma0_writer_request_ready <= 1'd0;
		litepciedma0_writer_counter <= 13'd0;
		litepciedma0_writer_table_value_storage_full <= 64'd0;
		litepciedma0_writer_table_value_re <= 1'd0;
		litepciedma0_writer_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma0_writer_table_loop_prog_n_re <= 1'd0;
		litepciedma0_writer_table_loop_status_status <= 16'd0;
		litepciedma0_writer_table_syncfifo0_sink_valid <= 1'd0;
		litepciedma0_writer_table_syncfifo0_sink_first <= 1'd0;
		litepciedma0_writer_table_syncfifo0_sink_payload_address <= 32'd0;
		litepciedma0_writer_table_syncfifo0_sink_payload_length <= 24'd0;
		litepciedma0_writer_table_syncfifo0_sink_payload_control <= 8'd0;
		litepciedma0_writer_table_syncfifo0_level <= 9'd0;
		litepciedma0_writer_table_syncfifo0_produce <= 8'd0;
		litepciedma0_writer_table_syncfifo0_consume <= 8'd0;
		litepciedma0_writer_table_loop_index <= 16'd1;
		litepciedma0_writer_splitter_offset <= 32'd0;
		litepciedma0_writer_splitter_user_id <= 32'd0;
		litepciedma0_writer_splitter_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_writer_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_writer_bufferizeendpoints0_last_n <= 1'd0;
		litepciedma0_writer_status <= 16'd0;
		litepciedma0_reader_enable_storage_full <= 1'd0;
		litepciedma0_reader_enable_re <= 1'd0;
		litepciedma0_reader_packet_nr_storage_full <= 16'd0;
		litepciedma0_reader_packet_nr_re <= 1'd0;
		litepciedma0_reader_status <= 16'd0;
		litepciedma0_reader_table_value_storage_full <= 64'd0;
		litepciedma0_reader_table_value_re <= 1'd0;
		litepciedma0_reader_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma0_reader_table_loop_prog_n_re <= 1'd0;
		litepciedma0_reader_table_loop_status_status <= 16'd0;
		litepciedma0_reader_table_syncfifo0_sink_valid <= 1'd0;
		litepciedma0_reader_table_syncfifo0_sink_first <= 1'd0;
		litepciedma0_reader_table_syncfifo0_sink_payload_address <= 32'd0;
		litepciedma0_reader_table_syncfifo0_sink_payload_length <= 24'd0;
		litepciedma0_reader_table_syncfifo0_sink_payload_control <= 8'd0;
		litepciedma0_reader_table_syncfifo0_level <= 9'd0;
		litepciedma0_reader_table_syncfifo0_produce <= 8'd0;
		litepciedma0_reader_table_syncfifo0_consume <= 8'd0;
		litepciedma0_reader_table_loop_index <= 16'd1;
		litepciedma0_reader_splitter_offset <= 32'd0;
		litepciedma0_reader_splitter_user_id <= 32'd0;
		litepciedma0_reader_splitter_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_address <= 32'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_length <= 24'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_control <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_source_payload_user_id <= 8'd0;
		litepciedma0_reader_bufferizeendpoints0_valid_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_first_n <= 1'd0;
		litepciedma0_reader_bufferizeendpoints0_last_n <= 1'd0;
		litepciedma0_reader_request_ready <= 1'd0;
		litepciedma0_reader_request_cnt <= 8'd0;
		litepciedma0_reader_req_pck_cnt <= 16'd0;
		litepciedma0_reader_request_counted <= 1'd1;
		litepciedma0_reader_allow_request <= 1'd0;
		litepciedma0_reader_fifo_readable <= 1'd0;
		litepciedma0_reader_fifo_level0 <= 9'd0;
		litepciedma0_reader_fifo_produce <= 8'd0;
		litepciedma0_reader_fifo_consume <= 8'd0;
		litepciedma0_reader_sent_pck_cnt <= 16'd1;
		litepciedma0_reader_sent_cnt <= 32'd0;
		litepciedma0_reader_flush <= 1'd0;
		litepciedma0_reader_flush_nr_storage_full <= 16'd0;
		litepciedma0_reader_flush_nr_re <= 1'd0;
		litepciedma0_reader_flush_nbytes_storage_full <= 16'd0;
		litepciedma0_reader_flush_nbytes_re <= 1'd0;
		litepciedma0_reader_flush_nbytes_we <= 1'd0;
		litepciedma0_reader_flush_nbytes_dat_w <= 16'd0;
		litepciedma0_reader_last_user_id <= 8'd255;
		litepciedma0_reader_sent_dbg <= 64'd0;
		litepciedma0_reader_bad_fifo_write <= 1'd0;
		litepciedma0_syncfifo0_readable <= 1'd0;
		litepciedma0_syncfifo0_level0 <= 10'd0;
		litepciedma0_syncfifo0_produce <= 10'd0;
		litepciedma0_syncfifo0_consume <= 10'd0;
		litepciedma0_syncfifo1_readable <= 1'd0;
		litepciedma0_syncfifo1_level0 <= 10'd0;
		litepciedma0_syncfifo1_produce <= 10'd0;
		litepciedma0_syncfifo1_consume <= 10'd0;
		litepciedma1_writer_enable_storage_full <= 1'd0;
		litepciedma1_writer_enable_re <= 1'd0;
		litepciedma1_writer_allow_requests_storage_full <= 1'd0;
		litepciedma1_writer_allow_requests_re <= 1'd0;
		litepciedma1_writer_fifo_readable <= 1'd0;
		litepciedma1_writer_fifo_level0 <= 8'd0;
		litepciedma1_writer_fifo_produce <= 7'd0;
		litepciedma1_writer_fifo_consume <= 7'd0;
		litepciedma1_writer_request_ready <= 1'd0;
		litepciedma1_writer_counter <= 13'd0;
		litepciedma1_writer_table_value_storage_full <= 64'd0;
		litepciedma1_writer_table_value_re <= 1'd0;
		litepciedma1_writer_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma1_writer_table_loop_prog_n_re <= 1'd0;
		litepciedma1_writer_table_loop_status_status <= 16'd0;
		litepciedma1_writer_table_syncfifo1_sink_valid <= 1'd0;
		litepciedma1_writer_table_syncfifo1_sink_first <= 1'd0;
		litepciedma1_writer_table_syncfifo1_sink_payload_address <= 32'd0;
		litepciedma1_writer_table_syncfifo1_sink_payload_length <= 24'd0;
		litepciedma1_writer_table_syncfifo1_sink_payload_control <= 8'd0;
		litepciedma1_writer_table_syncfifo1_level <= 9'd0;
		litepciedma1_writer_table_syncfifo1_produce <= 8'd0;
		litepciedma1_writer_table_syncfifo1_consume <= 8'd0;
		litepciedma1_writer_table_loop_index <= 16'd1;
		litepciedma1_writer_splitter_offset <= 32'd0;
		litepciedma1_writer_splitter_user_id <= 32'd0;
		litepciedma1_writer_splitter_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_writer_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_writer_bufferizeendpoints1_last_n <= 1'd0;
		litepciedma1_writer_status <= 16'd0;
		litepciedma1_reader_enable_storage_full <= 1'd0;
		litepciedma1_reader_enable_re <= 1'd0;
		litepciedma1_reader_packet_nr_storage_full <= 16'd0;
		litepciedma1_reader_packet_nr_re <= 1'd0;
		litepciedma1_reader_status <= 16'd0;
		litepciedma1_reader_table_value_storage_full <= 64'd0;
		litepciedma1_reader_table_value_re <= 1'd0;
		litepciedma1_reader_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma1_reader_table_loop_prog_n_re <= 1'd0;
		litepciedma1_reader_table_loop_status_status <= 16'd0;
		litepciedma1_reader_table_syncfifo1_sink_valid <= 1'd0;
		litepciedma1_reader_table_syncfifo1_sink_first <= 1'd0;
		litepciedma1_reader_table_syncfifo1_sink_payload_address <= 32'd0;
		litepciedma1_reader_table_syncfifo1_sink_payload_length <= 24'd0;
		litepciedma1_reader_table_syncfifo1_sink_payload_control <= 8'd0;
		litepciedma1_reader_table_syncfifo1_level <= 9'd0;
		litepciedma1_reader_table_syncfifo1_produce <= 8'd0;
		litepciedma1_reader_table_syncfifo1_consume <= 8'd0;
		litepciedma1_reader_table_loop_index <= 16'd1;
		litepciedma1_reader_splitter_offset <= 32'd0;
		litepciedma1_reader_splitter_user_id <= 32'd0;
		litepciedma1_reader_splitter_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_address <= 32'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_length <= 24'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_control <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_source_payload_user_id <= 8'd0;
		litepciedma1_reader_bufferizeendpoints1_valid_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_first_n <= 1'd0;
		litepciedma1_reader_bufferizeendpoints1_last_n <= 1'd0;
		litepciedma1_reader_request_ready <= 1'd0;
		litepciedma1_reader_request_cnt <= 8'd0;
		litepciedma1_reader_req_pck_cnt <= 16'd0;
		litepciedma1_reader_request_counted <= 1'd1;
		litepciedma1_reader_allow_request <= 1'd0;
		litepciedma1_reader_fifo_readable <= 1'd0;
		litepciedma1_reader_fifo_level0 <= 9'd0;
		litepciedma1_reader_fifo_produce <= 8'd0;
		litepciedma1_reader_fifo_consume <= 8'd0;
		litepciedma1_reader_sent_pck_cnt <= 16'd1;
		litepciedma1_reader_sent_cnt <= 32'd0;
		litepciedma1_reader_flush <= 1'd0;
		litepciedma1_reader_flush_nr_storage_full <= 16'd0;
		litepciedma1_reader_flush_nr_re <= 1'd0;
		litepciedma1_reader_flush_nbytes_storage_full <= 16'd0;
		litepciedma1_reader_flush_nbytes_re <= 1'd0;
		litepciedma1_reader_flush_nbytes_we <= 1'd0;
		litepciedma1_reader_flush_nbytes_dat_w <= 16'd0;
		litepciedma1_reader_last_user_id <= 8'd255;
		litepciedma1_reader_sent_dbg <= 64'd0;
		litepciedma1_reader_bad_fifo_write <= 1'd0;
		litepciedma1_syncfifo2_readable <= 1'd0;
		litepciedma1_syncfifo2_level0 <= 10'd0;
		litepciedma1_syncfifo2_produce <= 10'd0;
		litepciedma1_syncfifo2_consume <= 10'd0;
		litepciedma1_syncfifo3_readable <= 1'd0;
		litepciedma1_syncfifo3_level0 <= 10'd0;
		litepciedma1_syncfifo3_produce <= 10'd0;
		litepciedma1_syncfifo3_consume <= 10'd0;
		litepciedma2_writer_enable_storage_full <= 1'd0;
		litepciedma2_writer_enable_re <= 1'd0;
		litepciedma2_writer_allow_requests_storage_full <= 1'd0;
		litepciedma2_writer_allow_requests_re <= 1'd0;
		litepciedma2_writer_fifo_readable <= 1'd0;
		litepciedma2_writer_fifo_level0 <= 8'd0;
		litepciedma2_writer_fifo_produce <= 7'd0;
		litepciedma2_writer_fifo_consume <= 7'd0;
		litepciedma2_writer_request_ready <= 1'd0;
		litepciedma2_writer_counter <= 13'd0;
		litepciedma2_writer_table_value_storage_full <= 64'd0;
		litepciedma2_writer_table_value_re <= 1'd0;
		litepciedma2_writer_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma2_writer_table_loop_prog_n_re <= 1'd0;
		litepciedma2_writer_table_loop_status_status <= 16'd0;
		litepciedma2_writer_table_syncfifo2_sink_valid <= 1'd0;
		litepciedma2_writer_table_syncfifo2_sink_first <= 1'd0;
		litepciedma2_writer_table_syncfifo2_sink_payload_address <= 32'd0;
		litepciedma2_writer_table_syncfifo2_sink_payload_length <= 24'd0;
		litepciedma2_writer_table_syncfifo2_sink_payload_control <= 8'd0;
		litepciedma2_writer_table_syncfifo2_level <= 9'd0;
		litepciedma2_writer_table_syncfifo2_produce <= 8'd0;
		litepciedma2_writer_table_syncfifo2_consume <= 8'd0;
		litepciedma2_writer_table_loop_index <= 16'd1;
		litepciedma2_writer_splitter_offset <= 32'd0;
		litepciedma2_writer_splitter_user_id <= 32'd0;
		litepciedma2_writer_splitter_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_writer_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_writer_bufferizeendpoints2_last_n <= 1'd0;
		litepciedma2_writer_status <= 16'd0;
		litepciedma2_reader_enable_storage_full <= 1'd0;
		litepciedma2_reader_enable_re <= 1'd0;
		litepciedma2_reader_packet_nr_storage_full <= 16'd0;
		litepciedma2_reader_packet_nr_re <= 1'd0;
		litepciedma2_reader_status <= 16'd0;
		litepciedma2_reader_table_value_storage_full <= 64'd0;
		litepciedma2_reader_table_value_re <= 1'd0;
		litepciedma2_reader_table_loop_prog_n_storage_full <= 1'd0;
		litepciedma2_reader_table_loop_prog_n_re <= 1'd0;
		litepciedma2_reader_table_loop_status_status <= 16'd0;
		litepciedma2_reader_table_syncfifo2_sink_valid <= 1'd0;
		litepciedma2_reader_table_syncfifo2_sink_first <= 1'd0;
		litepciedma2_reader_table_syncfifo2_sink_payload_address <= 32'd0;
		litepciedma2_reader_table_syncfifo2_sink_payload_length <= 24'd0;
		litepciedma2_reader_table_syncfifo2_sink_payload_control <= 8'd0;
		litepciedma2_reader_table_syncfifo2_level <= 9'd0;
		litepciedma2_reader_table_syncfifo2_produce <= 8'd0;
		litepciedma2_reader_table_syncfifo2_consume <= 8'd0;
		litepciedma2_reader_table_loop_index <= 16'd1;
		litepciedma2_reader_splitter_offset <= 32'd0;
		litepciedma2_reader_splitter_user_id <= 32'd0;
		litepciedma2_reader_splitter_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_address <= 32'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_length <= 24'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_control <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_source_payload_user_id <= 8'd0;
		litepciedma2_reader_bufferizeendpoints2_valid_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_first_n <= 1'd0;
		litepciedma2_reader_bufferizeendpoints2_last_n <= 1'd0;
		litepciedma2_reader_request_ready <= 1'd0;
		litepciedma2_reader_request_cnt <= 8'd0;
		litepciedma2_reader_req_pck_cnt <= 16'd0;
		litepciedma2_reader_request_counted <= 1'd1;
		litepciedma2_reader_allow_request <= 1'd0;
		litepciedma2_reader_fifo_readable <= 1'd0;
		litepciedma2_reader_fifo_level0 <= 9'd0;
		litepciedma2_reader_fifo_produce <= 8'd0;
		litepciedma2_reader_fifo_consume <= 8'd0;
		litepciedma2_reader_sent_pck_cnt <= 16'd1;
		litepciedma2_reader_sent_cnt <= 32'd0;
		litepciedma2_reader_flush <= 1'd0;
		litepciedma2_reader_flush_nr_storage_full <= 16'd0;
		litepciedma2_reader_flush_nr_re <= 1'd0;
		litepciedma2_reader_flush_nbytes_storage_full <= 16'd0;
		litepciedma2_reader_flush_nbytes_re <= 1'd0;
		litepciedma2_reader_flush_nbytes_we <= 1'd0;
		litepciedma2_reader_flush_nbytes_dat_w <= 16'd0;
		litepciedma2_reader_last_user_id <= 8'd255;
		litepciedma2_reader_sent_dbg <= 64'd0;
		litepciedma2_reader_bad_fifo_write <= 1'd0;
		litepciedma2_syncfifo4_readable <= 1'd0;
		litepciedma2_syncfifo4_level0 <= 10'd0;
		litepciedma2_syncfifo4_produce <= 10'd0;
		litepciedma2_syncfifo4_consume <= 10'd0;
		litepciedma2_syncfifo5_readable <= 1'd0;
		litepciedma2_syncfifo5_level0 <= 10'd0;
		litepciedma2_syncfifo5_produce <= 10'd0;
		litepciedma2_syncfifo5_consume <= 10'd0;
		subfragments_litepcietlpdepacketizer_state <= 2'd0;
		subfragments_litepcietlppacketizer_state <= 1'd0;
		subfragments_tags_queue_readable <= 1'd0;
		subfragments_tags_queue_level0 <= 3'd0;
		subfragments_tags_queue_produce <= 2'd0;
		subfragments_tags_queue_consume <= 2'd0;
		subfragments_requests_queue_readable <= 1'd0;
		subfragments_requests_queue_level0 <= 3'd0;
		subfragments_requests_queue_produce <= 2'd0;
		subfragments_requests_queue_consume <= 2'd0;
		subfragments_syncfifo0_readable <= 1'd0;
		subfragments_syncfifo0_level0 <= 8'd0;
		subfragments_syncfifo0_produce <= 7'd0;
		subfragments_syncfifo0_consume <= 7'd0;
		subfragments_syncfifo1_readable <= 1'd0;
		subfragments_syncfifo1_level0 <= 8'd0;
		subfragments_syncfifo1_produce <= 7'd0;
		subfragments_syncfifo1_consume <= 7'd0;
		subfragments_syncfifo2_readable <= 1'd0;
		subfragments_syncfifo2_level0 <= 8'd0;
		subfragments_syncfifo2_produce <= 7'd0;
		subfragments_syncfifo2_consume <= 7'd0;
		subfragments_syncfifo3_readable <= 1'd0;
		subfragments_syncfifo3_level0 <= 8'd0;
		subfragments_syncfifo3_produce <= 7'd0;
		subfragments_syncfifo3_consume <= 7'd0;
		subfragments_fill_tag <= 2'd0;
		subfragments_arbiter0_grant <= 2'd0;
		subfragments_arbiter0_status0_first <= 1'd1;
		subfragments_arbiter0_status0_ongoing1 <= 1'd0;
		subfragments_arbiter0_status1_first <= 1'd1;
		subfragments_arbiter0_status1_ongoing1 <= 1'd0;
		subfragments_arbiter0_status2_first <= 1'd1;
		subfragments_arbiter0_status2_ongoing1 <= 1'd0;
		subfragments_dispatcher0_first <= 1'd1;
		subfragments_dispatcher0_ongoing1 <= 1'd0;
		subfragments_dispatcher0_sel_ongoing <= 3'd0;
		subfragments_arbiter1_grant <= 2'd0;
		subfragments_arbiter1_status3_first <= 1'd1;
		subfragments_arbiter1_status3_ongoing1 <= 1'd0;
		subfragments_arbiter1_status4_first <= 1'd1;
		subfragments_arbiter1_status4_ongoing1 <= 1'd0;
		subfragments_arbiter1_status5_first <= 1'd1;
		subfragments_arbiter1_status5_ongoing1 <= 1'd0;
		subfragments_dispatcher1_first <= 1'd1;
		subfragments_dispatcher1_ongoing1 <= 1'd0;
		subfragments_dispatcher1_sel_ongoing <= 3'd0;
		subfragments_arbiter2_grant <= 1'd0;
		subfragments_arbiter2_status6_first <= 1'd1;
		subfragments_arbiter2_status6_ongoing1 <= 1'd0;
		subfragments_arbiter2_status7_first <= 1'd1;
		subfragments_arbiter2_status7_ongoing1 <= 1'd0;
		subfragments_fsm0_state0 <= 2'd0;
		subfragments_fsm1_state0 <= 2'd0;
		subfragments_state <= 3'd0;
		subfragments_bufferizeendpoints0_state0 <= 2'd0;
		subfragments_fsm0_state1 <= 1'd0;
		subfragments_bufferizeendpoints0_state1 <= 2'd0;
		subfragments_fsm0_state2 <= 1'd0;
		subfragments_bufferizeendpoints1_state0 <= 2'd0;
		subfragments_fsm1_state1 <= 1'd0;
		subfragments_bufferizeendpoints1_state1 <= 2'd0;
		subfragments_fsm1_state2 <= 1'd0;
		subfragments_bufferizeendpoints2_state0 <= 2'd0;
		subfragments_fsm2_state0 <= 1'd0;
		subfragments_bufferizeendpoints2_state1 <= 2'd0;
		subfragments_fsm2_state1 <= 1'd0;
		litepciecore_slave_sel_r <= 2'd0;
		litepciecore_count <= 20'd1000000;
		litepciecore_interface0_bank_bus_dat_r <= 32'd0;
		litepciecore_sel_r <= 1'd0;
		litepciecore_interface1_bank_bus_dat_r <= 32'd0;
		litepciecore_interface2_bank_bus_dat_r <= 32'd0;
		litepciecore_interface3_bank_bus_dat_r <= 32'd0;
		litepciecore_interface4_bank_bus_dat_r <= 32'd0;
	end
	xilinxmultiregimpl1_regs0 <= pcie_phy_tx_cdc_graycounter1_q;
	xilinxmultiregimpl1_regs1 <= xilinxmultiregimpl1_regs0;
	xilinxmultiregimpl2_regs0 <= pcie_phy_rx_cdc_graycounter0_q;
	xilinxmultiregimpl2_regs1 <= xilinxmultiregimpl2_regs0;
	xilinxmultiregimpl5_regs0 <= pcie_phy_msi_cdc_graycounter1_q;
	xilinxmultiregimpl5_regs1 <= xilinxmultiregimpl5_regs0;
	xilinxmultiregimpl6_regs0 <= pcie_phy_lnk_up;
	xilinxmultiregimpl6_regs1 <= xilinxmultiregimpl6_regs0;
	xilinxmultiregimpl7_regs0 <= pcie_phy_command[2];
	xilinxmultiregimpl7_regs1 <= xilinxmultiregimpl7_regs0;
	xilinxmultiregimpl8_regs0 <= pcie_phy_msienable;
	xilinxmultiregimpl8_regs1 <= xilinxmultiregimpl8_regs0;
	xilinxmultiregimpl9_regs0 <= pcie_phy_max_request_size;
	xilinxmultiregimpl9_regs1 <= xilinxmultiregimpl9_regs0;
	xilinxmultiregimpl10_regs0 <= pcie_phy_max_payload_size;
	xilinxmultiregimpl10_regs1 <= xilinxmultiregimpl10_regs0;
end

reg [31:0] mem[0:1023];
reg [9:0] memadr;
always @(posedge sys_clk) begin
	if (sram_we[0])
		mem[sram_adr][7:0] <= sram_dat_w[7:0];
	if (sram_we[1])
		mem[sram_adr][15:8] <= sram_dat_w[15:8];
	if (sram_we[2])
		mem[sram_adr][23:16] <= sram_dat_w[23:16];
	if (sram_we[3])
		mem[sram_adr][31:24] <= sram_dat_w[31:24];
	memadr <= sram_adr;
end

assign sram_dat_r = mem[memadr];

reg [7:0] mem_1[0:43];
reg [5:0] memadr_1;
always @(posedge sys_clk) begin
	memadr_1 <= litepciecore_adr;
end

assign litepciecore_dat_r = mem_1[memadr_1];

initial begin
	$readmemh("litepcie_core.init", mem_1);
end

IBUFDS_GTE2 IBUFDS_GTE2(
	.CEB(1'd0),
	.I(pcie_x4_clk_p),
	.IB(pcie_x4_clk_n),
	.O(pcie_phy_pcie_refclk)
);

reg [145:0] storage[0:3];
reg [1:0] memadr_2;
reg [1:0] memadr_3;
always @(posedge sys_clk) begin
	if (pcie_phy_tx_cdc_wrport_we)
		storage[pcie_phy_tx_cdc_wrport_adr] <= pcie_phy_tx_cdc_wrport_dat_w;
	memadr_2 <= pcie_phy_tx_cdc_wrport_adr;
end

always @(posedge pcie_clk) begin
	memadr_3 <= pcie_phy_tx_cdc_rdport_adr;
end

assign pcie_phy_tx_cdc_wrport_dat_r = storage[memadr_2];
assign pcie_phy_tx_cdc_rdport_dat_r = storage[memadr_3];

reg [145:0] storage_1[0:3];
reg [1:0] memadr_4;
reg [1:0] memadr_5;
always @(posedge pcie_clk) begin
	if (pcie_phy_rx_cdc_wrport_we)
		storage_1[pcie_phy_rx_cdc_wrport_adr] <= pcie_phy_rx_cdc_wrport_dat_w;
	memadr_4 <= pcie_phy_rx_cdc_wrport_adr;
end

always @(posedge sys_clk) begin
	memadr_5 <= pcie_phy_rx_cdc_rdport_adr;
end

assign pcie_phy_rx_cdc_wrport_dat_r = storage_1[memadr_4];
assign pcie_phy_rx_cdc_rdport_dat_r = storage_1[memadr_5];

reg [9:0] storage_2[0:3];
reg [1:0] memadr_6;
reg [1:0] memadr_7;
always @(posedge sys_clk) begin
	if (pcie_phy_msi_cdc_wrport_we)
		storage_2[pcie_phy_msi_cdc_wrport_adr] <= pcie_phy_msi_cdc_wrport_dat_w;
	memadr_6 <= pcie_phy_msi_cdc_wrport_adr;
end

always @(posedge pcie_clk) begin
	memadr_7 <= pcie_phy_msi_cdc_rdport_adr;
end

assign pcie_phy_msi_cdc_wrport_dat_r = storage_2[memadr_6];
assign pcie_phy_msi_cdc_rdport_dat_r = storage_2[memadr_7];

reg [128:0] storage_3[0:127];
reg [128:0] memdat;
reg [128:0] memdat_1;
always @(posedge sys_clk) begin
	if (litepciedma0_writer_fifo_wrport_we)
		storage_3[litepciedma0_writer_fifo_wrport_adr] <= litepciedma0_writer_fifo_wrport_dat_w;
	memdat <= storage_3[litepciedma0_writer_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_writer_fifo_rdport_re)
		memdat_1 <= storage_3[litepciedma0_writer_fifo_rdport_adr];
end

assign litepciedma0_writer_fifo_wrport_dat_r = memdat;
assign litepciedma0_writer_fifo_rdport_dat_r = memdat_1;

reg [65:0] storage_4[0:255];
reg [65:0] memdat_2;
always @(posedge sys_clk) begin
	if (litepciedma0_writer_table_syncfifo0_wrport_we)
		storage_4[litepciedma0_writer_table_syncfifo0_wrport_adr] <= litepciedma0_writer_table_syncfifo0_wrport_dat_w;
	memdat_2 <= storage_4[litepciedma0_writer_table_syncfifo0_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma0_writer_table_syncfifo0_wrport_dat_r = memdat_2;
assign litepciedma0_writer_table_syncfifo0_rdport_dat_r = storage_4[litepciedma0_writer_table_syncfifo0_rdport_adr];

reg [65:0] storage_5[0:255];
reg [65:0] memdat_3;
always @(posedge sys_clk) begin
	if (litepciedma0_reader_table_syncfifo0_wrport_we)
		storage_5[litepciedma0_reader_table_syncfifo0_wrport_adr] <= litepciedma0_reader_table_syncfifo0_wrport_dat_w;
	memdat_3 <= storage_5[litepciedma0_reader_table_syncfifo0_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma0_reader_table_syncfifo0_wrport_dat_r = memdat_3;
assign litepciedma0_reader_table_syncfifo0_rdport_dat_r = storage_5[litepciedma0_reader_table_syncfifo0_rdport_adr];

reg [129:0] storage_6[0:255];
reg [129:0] memdat_4;
reg [129:0] memdat_5;
always @(posedge sys_clk) begin
	if (litepciedma0_reader_fifo_wrport_we)
		storage_6[litepciedma0_reader_fifo_wrport_adr] <= litepciedma0_reader_fifo_wrport_dat_w;
	memdat_4 <= storage_6[litepciedma0_reader_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_reader_fifo_rdport_re)
		memdat_5 <= storage_6[litepciedma0_reader_fifo_rdport_adr];
end

assign litepciedma0_reader_fifo_wrport_dat_r = memdat_4;
assign litepciedma0_reader_fifo_rdport_dat_r = memdat_5;

reg [129:0] storage_7[0:767];
reg [129:0] memdat_6;
reg [129:0] memdat_7;
always @(posedge sys_clk) begin
	if (litepciedma0_syncfifo0_wrport_we)
		storage_7[litepciedma0_syncfifo0_wrport_adr] <= litepciedma0_syncfifo0_wrport_dat_w;
	memdat_6 <= storage_7[litepciedma0_syncfifo0_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_syncfifo0_rdport_re)
		memdat_7 <= storage_7[litepciedma0_syncfifo0_rdport_adr];
end

assign litepciedma0_syncfifo0_wrport_dat_r = memdat_6;
assign litepciedma0_syncfifo0_rdport_dat_r = memdat_7;

reg [129:0] storage_8[0:767];
reg [129:0] memdat_8;
reg [129:0] memdat_9;
always @(posedge sys_clk) begin
	if (litepciedma0_syncfifo1_wrport_we)
		storage_8[litepciedma0_syncfifo1_wrport_adr] <= litepciedma0_syncfifo1_wrport_dat_w;
	memdat_8 <= storage_8[litepciedma0_syncfifo1_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma0_syncfifo1_rdport_re)
		memdat_9 <= storage_8[litepciedma0_syncfifo1_rdport_adr];
end

assign litepciedma0_syncfifo1_wrport_dat_r = memdat_8;
assign litepciedma0_syncfifo1_rdport_dat_r = memdat_9;

reg [128:0] storage_9[0:127];
reg [128:0] memdat_10;
reg [128:0] memdat_11;
always @(posedge sys_clk) begin
	if (litepciedma1_writer_fifo_wrport_we)
		storage_9[litepciedma1_writer_fifo_wrport_adr] <= litepciedma1_writer_fifo_wrport_dat_w;
	memdat_10 <= storage_9[litepciedma1_writer_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_writer_fifo_rdport_re)
		memdat_11 <= storage_9[litepciedma1_writer_fifo_rdport_adr];
end

assign litepciedma1_writer_fifo_wrport_dat_r = memdat_10;
assign litepciedma1_writer_fifo_rdport_dat_r = memdat_11;

reg [65:0] storage_10[0:255];
reg [65:0] memdat_12;
always @(posedge sys_clk) begin
	if (litepciedma1_writer_table_syncfifo1_wrport_we)
		storage_10[litepciedma1_writer_table_syncfifo1_wrport_adr] <= litepciedma1_writer_table_syncfifo1_wrport_dat_w;
	memdat_12 <= storage_10[litepciedma1_writer_table_syncfifo1_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma1_writer_table_syncfifo1_wrport_dat_r = memdat_12;
assign litepciedma1_writer_table_syncfifo1_rdport_dat_r = storage_10[litepciedma1_writer_table_syncfifo1_rdport_adr];

reg [65:0] storage_11[0:255];
reg [65:0] memdat_13;
always @(posedge sys_clk) begin
	if (litepciedma1_reader_table_syncfifo1_wrport_we)
		storage_11[litepciedma1_reader_table_syncfifo1_wrport_adr] <= litepciedma1_reader_table_syncfifo1_wrport_dat_w;
	memdat_13 <= storage_11[litepciedma1_reader_table_syncfifo1_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma1_reader_table_syncfifo1_wrport_dat_r = memdat_13;
assign litepciedma1_reader_table_syncfifo1_rdport_dat_r = storage_11[litepciedma1_reader_table_syncfifo1_rdport_adr];

reg [129:0] storage_12[0:255];
reg [129:0] memdat_14;
reg [129:0] memdat_15;
always @(posedge sys_clk) begin
	if (litepciedma1_reader_fifo_wrport_we)
		storage_12[litepciedma1_reader_fifo_wrport_adr] <= litepciedma1_reader_fifo_wrport_dat_w;
	memdat_14 <= storage_12[litepciedma1_reader_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_reader_fifo_rdport_re)
		memdat_15 <= storage_12[litepciedma1_reader_fifo_rdport_adr];
end

assign litepciedma1_reader_fifo_wrport_dat_r = memdat_14;
assign litepciedma1_reader_fifo_rdport_dat_r = memdat_15;

reg [129:0] storage_13[0:767];
reg [129:0] memdat_16;
reg [129:0] memdat_17;
always @(posedge sys_clk) begin
	if (litepciedma1_syncfifo2_wrport_we)
		storage_13[litepciedma1_syncfifo2_wrport_adr] <= litepciedma1_syncfifo2_wrport_dat_w;
	memdat_16 <= storage_13[litepciedma1_syncfifo2_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_syncfifo2_rdport_re)
		memdat_17 <= storage_13[litepciedma1_syncfifo2_rdport_adr];
end

assign litepciedma1_syncfifo2_wrport_dat_r = memdat_16;
assign litepciedma1_syncfifo2_rdport_dat_r = memdat_17;

reg [129:0] storage_14[0:767];
reg [129:0] memdat_18;
reg [129:0] memdat_19;
always @(posedge sys_clk) begin
	if (litepciedma1_syncfifo3_wrport_we)
		storage_14[litepciedma1_syncfifo3_wrport_adr] <= litepciedma1_syncfifo3_wrport_dat_w;
	memdat_18 <= storage_14[litepciedma1_syncfifo3_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma1_syncfifo3_rdport_re)
		memdat_19 <= storage_14[litepciedma1_syncfifo3_rdport_adr];
end

assign litepciedma1_syncfifo3_wrport_dat_r = memdat_18;
assign litepciedma1_syncfifo3_rdport_dat_r = memdat_19;

reg [128:0] storage_15[0:127];
reg [128:0] memdat_20;
reg [128:0] memdat_21;
always @(posedge sys_clk) begin
	if (litepciedma2_writer_fifo_wrport_we)
		storage_15[litepciedma2_writer_fifo_wrport_adr] <= litepciedma2_writer_fifo_wrport_dat_w;
	memdat_20 <= storage_15[litepciedma2_writer_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_writer_fifo_rdport_re)
		memdat_21 <= storage_15[litepciedma2_writer_fifo_rdport_adr];
end

assign litepciedma2_writer_fifo_wrport_dat_r = memdat_20;
assign litepciedma2_writer_fifo_rdport_dat_r = memdat_21;

reg [65:0] storage_16[0:255];
reg [65:0] memdat_22;
always @(posedge sys_clk) begin
	if (litepciedma2_writer_table_syncfifo2_wrport_we)
		storage_16[litepciedma2_writer_table_syncfifo2_wrport_adr] <= litepciedma2_writer_table_syncfifo2_wrport_dat_w;
	memdat_22 <= storage_16[litepciedma2_writer_table_syncfifo2_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma2_writer_table_syncfifo2_wrport_dat_r = memdat_22;
assign litepciedma2_writer_table_syncfifo2_rdport_dat_r = storage_16[litepciedma2_writer_table_syncfifo2_rdport_adr];

reg [65:0] storage_17[0:255];
reg [65:0] memdat_23;
always @(posedge sys_clk) begin
	if (litepciedma2_reader_table_syncfifo2_wrport_we)
		storage_17[litepciedma2_reader_table_syncfifo2_wrport_adr] <= litepciedma2_reader_table_syncfifo2_wrport_dat_w;
	memdat_23 <= storage_17[litepciedma2_reader_table_syncfifo2_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign litepciedma2_reader_table_syncfifo2_wrport_dat_r = memdat_23;
assign litepciedma2_reader_table_syncfifo2_rdport_dat_r = storage_17[litepciedma2_reader_table_syncfifo2_rdport_adr];

reg [129:0] storage_18[0:255];
reg [129:0] memdat_24;
reg [129:0] memdat_25;
always @(posedge sys_clk) begin
	if (litepciedma2_reader_fifo_wrport_we)
		storage_18[litepciedma2_reader_fifo_wrport_adr] <= litepciedma2_reader_fifo_wrport_dat_w;
	memdat_24 <= storage_18[litepciedma2_reader_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_reader_fifo_rdport_re)
		memdat_25 <= storage_18[litepciedma2_reader_fifo_rdport_adr];
end

assign litepciedma2_reader_fifo_wrport_dat_r = memdat_24;
assign litepciedma2_reader_fifo_rdport_dat_r = memdat_25;

reg [129:0] storage_19[0:767];
reg [129:0] memdat_26;
reg [129:0] memdat_27;
always @(posedge sys_clk) begin
	if (litepciedma2_syncfifo4_wrport_we)
		storage_19[litepciedma2_syncfifo4_wrport_adr] <= litepciedma2_syncfifo4_wrport_dat_w;
	memdat_26 <= storage_19[litepciedma2_syncfifo4_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_syncfifo4_rdport_re)
		memdat_27 <= storage_19[litepciedma2_syncfifo4_rdport_adr];
end

assign litepciedma2_syncfifo4_wrport_dat_r = memdat_26;
assign litepciedma2_syncfifo4_rdport_dat_r = memdat_27;

reg [129:0] storage_20[0:767];
reg [129:0] memdat_28;
reg [129:0] memdat_29;
always @(posedge sys_clk) begin
	if (litepciedma2_syncfifo5_wrport_we)
		storage_20[litepciedma2_syncfifo5_wrport_adr] <= litepciedma2_syncfifo5_wrport_dat_w;
	memdat_28 <= storage_20[litepciedma2_syncfifo5_wrport_adr];
end

always @(posedge sys_clk) begin
	if (litepciedma2_syncfifo5_rdport_re)
		memdat_29 <= storage_20[litepciedma2_syncfifo5_rdport_adr];
end

assign litepciedma2_syncfifo5_wrport_dat_r = memdat_28;
assign litepciedma2_syncfifo5_rdport_dat_r = memdat_29;

pcie_phy #(
	.C_BAR0(32'd4294836224),
	.C_DATA_WIDTH(8'd128),
	.C_PCIE_GT_DEVICE("GTP")
) pcie_phy (
	.QPLL_PLL1PD(1'd1),
	.cfg_interrupt(pcie_phy_msi_cdc_source_valid),
	.cfg_interrupt_di(pcie_phy_msi_cdc_source_payload_dat),
	.m_axis_rx_tready(pcie_phy_rx_cdc_sink_ready),
	.pci_exp_rxn(pcie_x4_rx_n),
	.pci_exp_rxp(pcie_x4_rx_p),
	.rx_np_ok(1'd1),
	.rx_np_req(1'd1),
	.s_axis_tx_tdata(pcie_phy_tx_cdc_source_payload_dat),
	.s_axis_tx_tkeep(pcie_phy_tx_cdc_source_payload_be),
	.s_axis_tx_tlast(pcie_phy_tx_cdc_source_last),
	.s_axis_tx_tuser(1'd0),
	.s_axis_tx_tvalid(pcie_phy_tx_cdc_source_valid),
	.sys_clk(pcie_phy_pcie_refclk),
	.sys_rst_n(pcie_x4_rst_n),
	.tx_cfg_gnt(1'd1),
	.cfg_bus_number(pcie_phy_bus_number),
	.cfg_command(pcie_phy_command),
	.cfg_dcommand(pcie_phy_dcommand),
	.cfg_device_number(pcie_phy_device_number),
	.cfg_function_number(pcie_phy_function_number),
	.cfg_interrupt_msienable(pcie_phy_msienable),
	.cfg_interrupt_rdy(pcie_phy_msi_cdc_source_ready),
	.m_axis_rx_tdata(pcie_phy_rx_cdc_sink_payload_dat),
	.m_axis_rx_tkeep(pcie_phy_rx_cdc_sink_payload_be),
	.m_axis_rx_tlast(pcie_phy_m_axis_rx_tlast),
	.m_axis_rx_tuser(pcie_phy_m_axis_rx_tuser),
	.m_axis_rx_tvalid(pcie_phy_rx_cdc_sink_valid),
	.pci_exp_txn(pcie_x4_tx_n),
	.pci_exp_txp(pcie_x4_tx_p),
	.s_axis_tx_tready(pcie_phy_tx_cdc_source_ready),
	.user_clk(pcie_clk),
	.user_lnk_up(pcie_phy_lnk_up),
	.user_reset(pcie_rst)
);

reg [3:0] storage_21[0:3];
reg [3:0] memdat_30;
reg [3:0] memdat_31;
always @(posedge sys_clk) begin
	if (subfragments_tags_queue_wrport_we)
		storage_21[subfragments_tags_queue_wrport_adr] <= subfragments_tags_queue_wrport_dat_w;
	memdat_30 <= storage_21[subfragments_tags_queue_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_tags_queue_rdport_re)
		memdat_31 <= storage_21[subfragments_tags_queue_rdport_adr];
end

assign subfragments_tags_queue_wrport_dat_r = memdat_30;
assign subfragments_tags_queue_rdport_dat_r = memdat_31;

reg [19:0] storage_22[0:3];
reg [19:0] memdat_32;
reg [19:0] memdat_33;
always @(posedge sys_clk) begin
	if (subfragments_requests_queue_wrport_we)
		storage_22[subfragments_requests_queue_wrport_adr] <= subfragments_requests_queue_wrport_dat_w;
	memdat_32 <= storage_22[subfragments_requests_queue_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_requests_queue_rdport_re)
		memdat_33 <= storage_22[subfragments_requests_queue_rdport_adr];
end

assign subfragments_requests_queue_wrport_dat_r = memdat_32;
assign subfragments_requests_queue_rdport_dat_r = memdat_33;

reg [229:0] storage_23[0:127];
reg [229:0] memdat_34;
reg [229:0] memdat_35;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo0_wrport_we)
		storage_23[subfragments_syncfifo0_wrport_adr] <= subfragments_syncfifo0_wrport_dat_w;
	memdat_34 <= storage_23[subfragments_syncfifo0_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo0_rdport_re)
		memdat_35 <= storage_23[subfragments_syncfifo0_rdport_adr];
end

assign subfragments_syncfifo0_wrport_dat_r = memdat_34;
assign subfragments_syncfifo0_rdport_dat_r = memdat_35;

reg [229:0] storage_24[0:127];
reg [229:0] memdat_36;
reg [229:0] memdat_37;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo1_wrport_we)
		storage_24[subfragments_syncfifo1_wrport_adr] <= subfragments_syncfifo1_wrport_dat_w;
	memdat_36 <= storage_24[subfragments_syncfifo1_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo1_rdport_re)
		memdat_37 <= storage_24[subfragments_syncfifo1_rdport_adr];
end

assign subfragments_syncfifo1_wrport_dat_r = memdat_36;
assign subfragments_syncfifo1_rdport_dat_r = memdat_37;

reg [229:0] storage_25[0:127];
reg [229:0] memdat_38;
reg [229:0] memdat_39;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo2_wrport_we)
		storage_25[subfragments_syncfifo2_wrport_adr] <= subfragments_syncfifo2_wrport_dat_w;
	memdat_38 <= storage_25[subfragments_syncfifo2_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo2_rdport_re)
		memdat_39 <= storage_25[subfragments_syncfifo2_rdport_adr];
end

assign subfragments_syncfifo2_wrport_dat_r = memdat_38;
assign subfragments_syncfifo2_rdport_dat_r = memdat_39;

reg [229:0] storage_26[0:127];
reg [229:0] memdat_40;
reg [229:0] memdat_41;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo3_wrport_we)
		storage_26[subfragments_syncfifo3_wrport_adr] <= subfragments_syncfifo3_wrport_dat_w;
	memdat_40 <= storage_26[subfragments_syncfifo3_wrport_adr];
end

always @(posedge sys_clk) begin
	if (subfragments_syncfifo3_rdport_re)
		memdat_41 <= storage_26[subfragments_syncfifo3_rdport_adr];
end

assign subfragments_syncfifo3_wrport_dat_r = memdat_40;
assign subfragments_syncfifo3_rdport_dat_r = memdat_41;

endmodule
